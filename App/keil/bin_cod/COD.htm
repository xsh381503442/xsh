<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\bin_cod\COD.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\bin_cod\COD.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Tue Mar 30 15:32:34 2021
<BR><P>
<H3>Maximum Stack Usage =       2244 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
TaskDisplay &rArr; DisplayScreen &rArr; gui_motion_trail_paint &rArr; gui_sports_data_detail_options_paint &rArr; gui_sports_record_data_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[d]">am_nmi_isr</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">am_nmi_isr</a><BR>
 <LI><a href="#[13]">am_brownout_isr</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">am_brownout_isr</a><BR>
 <LI><a href="#[72]">am_memmanage_isr</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[72]">am_memmanage_isr</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[43]">CTimerB2TickHandler</a> from task_timer.o(i.CTimerB2TickHandler) referenced from bsp_timer.o(i.SetupTimerB2)
 <LI><a href="#[c]">Reset_Handler</a> from startup_keil.o(RESET) referenced from startup_keil.o(RESET)
 <LI><a href="#[3b]">TaskDisplay</a> from task_display.o(i.TaskDisplay) referenced from task_display.o(i.CreatDisplayTask)
 <LI><a href="#[3e]">TaskGPSTime</a> from task_gps.o(i.TaskGPSTime) referenced from task_gps.o(i.CreateGPSTask)
 <LI><a href="#[40]">TaskKey</a> from task_key.o(i.TaskKey) referenced from task_key.o(i.CreateKeyTask)
 <LI><a href="#[3c]">TaskSport</a> from task_sport.o(i.TaskSport) referenced from task_sport.o(i.CreatSportTask)
 <LI><a href="#[41]">TaskStep</a> from task_step.o(i.TaskStep) referenced from task_step.o(i.CreateStepTask)
 <LI><a href="#[3d]">TaskTimer</a> from task_timer.o(i.TaskTimer) referenced from task_timer.o(i.CreatTimerTask)
 <LI><a href="#[42]">TaskTools</a> from task_tool.o(i.TaskTools) referenced from task_tool.o(i.CreateToolTask)
 <LI><a href="#[44]">cmpfunAsc_DBL_or_FLT(const void*, const void*)</a> from algo_hf_swimming_main.o(i._Z20cmpfunAsc_DBL_or_FLTPKvS0_) referenced from algo_hf_swimming_main.o(i._Z6medianPfi)
 <LI><a href="#[71]">__main</a> from __main.o(!!!main) referenced from startup_keil.o(RESET)
 <LI><a href="#[3a]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[37]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[36]">_sbackspace</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[38]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[35]">_sgetc</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[34]">_sputc</a> from _sputc.o(.text) referenced from __2sprintf.o(.text)
 <LI><a href="#[23]">am_adc_isr</a> from drv_battery.o(i.am_adc_isr) referenced from startup_keil.o(RESET)
 <LI><a href="#[13]">am_brownout_isr</a> from startup_keil.o(RESET) referenced from startup_keil.o(RESET)
 <LI><a href="#[15]">am_clkgen_isr</a> from isr_clkgen.o(i.am_clkgen_isr) referenced from startup_keil.o(RESET)
 <LI><a href="#[20]">am_ctimer_isr</a> from isr_ctimer.o(i.am_ctimer_isr) referenced from startup_keil.o(RESET)
 <LI><a href="#[10]">am_debugmon_isr</a> from startup_keil.o(RESET) referenced from startup_keil.o(RESET)
 <LI><a href="#[e]">am_fault_isr</a> from am_util_faultisr.o(.emb_text) referenced 4 times from startup_keil.o(RESET)
 <LI><a href="#[2e]">am_flash_isr</a> from startup_keil.o(RESET) referenced from startup_keil.o(RESET)
 <LI><a href="#[1f]">am_gpio_isr</a> from isr_gpio.o(i.am_gpio_isr) referenced from startup_keil.o(RESET)
 <LI><a href="#[b]">am_hal_iom_sleeping_queue_flush</a> from am_hal_iom.o(i.am_hal_iom_sleeping_queue_flush) referenced 2 times from am_hal_iom.o(.data)
 <LI><a href="#[19]">am_iomaster0_isr</a> from isr_iom.o(i.am_iomaster0_isr) referenced from startup_keil.o(RESET)
 <LI><a href="#[1a]">am_iomaster1_isr</a> from isr_iom.o(i.am_iomaster1_isr) referenced from startup_keil.o(RESET)
 <LI><a href="#[1b]">am_iomaster2_isr</a> from isr_iom.o(i.am_iomaster2_isr) referenced from startup_keil.o(RESET)
 <LI><a href="#[1c]">am_iomaster3_isr</a> from isr_iom.o(i.am_iomaster3_isr) referenced from startup_keil.o(RESET)
 <LI><a href="#[1d]">am_iomaster4_isr</a> from startup_keil.o(RESET) referenced from startup_keil.o(RESET)
 <LI><a href="#[1e]">am_iomaster5_isr</a> from startup_keil.o(RESET) referenced from startup_keil.o(RESET)
 <LI><a href="#[18]">am_ioslave_acc_isr</a> from startup_keil.o(RESET) referenced from startup_keil.o(RESET)
 <LI><a href="#[17]">am_ioslave_ios_isr</a> from startup_keil.o(RESET) referenced from startup_keil.o(RESET)
 <LI><a href="#[d]">am_nmi_isr</a> from startup_keil.o(RESET) referenced from startup_keil.o(RESET)
 <LI><a href="#[24]">am_pdm_isr</a> from startup_keil.o(RESET) referenced from startup_keil.o(RESET)
 <LI><a href="#[11]">am_pendsv_isr</a> from port.o(.emb_text) referenced from startup_keil.o(RESET)
 <LI><a href="#[2f]">am_software0_isr</a> from startup_keil.o(RESET) referenced from startup_keil.o(RESET)
 <LI><a href="#[30]">am_software1_isr</a> from startup_keil.o(RESET) referenced from startup_keil.o(RESET)
 <LI><a href="#[31]">am_software2_isr</a> from startup_keil.o(RESET) referenced from startup_keil.o(RESET)
 <LI><a href="#[32]">am_software3_isr</a> from startup_keil.o(RESET) referenced from startup_keil.o(RESET)
 <LI><a href="#[26]">am_stimer_cmpr0_isr</a> from port.o(i.am_stimer_cmpr0_isr) referenced from startup_keil.o(RESET)
 <LI><a href="#[27]">am_stimer_cmpr1_isr</a> from startup_keil.o(RESET) referenced from startup_keil.o(RESET)
 <LI><a href="#[28]">am_stimer_cmpr2_isr</a> from startup_keil.o(RESET) referenced from startup_keil.o(RESET)
 <LI><a href="#[29]">am_stimer_cmpr3_isr</a> from startup_keil.o(RESET) referenced from startup_keil.o(RESET)
 <LI><a href="#[2a]">am_stimer_cmpr4_isr</a> from startup_keil.o(RESET) referenced from startup_keil.o(RESET)
 <LI><a href="#[2b]">am_stimer_cmpr5_isr</a> from startup_keil.o(RESET) referenced from startup_keil.o(RESET)
 <LI><a href="#[2c]">am_stimer_cmpr6_isr</a> from startup_keil.o(RESET) referenced from startup_keil.o(RESET)
 <LI><a href="#[2d]">am_stimer_cmpr7_isr</a> from startup_keil.o(RESET) referenced from startup_keil.o(RESET)
 <LI><a href="#[25]">am_stimer_isr</a> from startup_keil.o(RESET) referenced from startup_keil.o(RESET)
 <LI><a href="#[f]">am_svcall_isr</a> from port.o(.emb_text) referenced from startup_keil.o(RESET)
 <LI><a href="#[12]">am_systick_isr</a> from port.o(i.am_systick_isr) referenced from startup_keil.o(RESET)
 <LI><a href="#[22]">am_uart1_isr</a> from drv_ble.o(i.am_uart1_isr) referenced from startup_keil.o(RESET)
 <LI><a href="#[21]">am_uart_isr</a> from isr_uart.o(i.am_uart_isr) referenced from startup_keil.o(RESET)
 <LI><a href="#[16]">am_vcomp_isr</a> from startup_keil.o(RESET) referenced from startup_keil.o(RESET)
 <LI><a href="#[14]">am_watchdog_isr</a> from startup_keil.o(RESET) referenced from startup_keil.o(RESET)
 <LI><a href="#[4b]">btn_hdl_bl</a> from drv_key.o(i.btn_hdl_bl) referenced from drv_key.o(i.drv_key_init)
 <LI><a href="#[4e]">btn_hdl_down</a> from drv_key.o(i.btn_hdl_down) referenced from drv_key.o(i.drv_key_init)
 <LI><a href="#[4d]">btn_hdl_ok</a> from drv_key.o(i.btn_hdl_ok) referenced from drv_key.o(i.drv_key_init)
 <LI><a href="#[4a]">btn_hdl_pwr</a> from drv_key.o(i.btn_hdl_pwr) referenced from drv_key.o(i.drv_key_init)
 <LI><a href="#[4c]">btn_hdl_up</a> from drv_key.o(i.btn_hdl_up) referenced from drv_key.o(i.drv_key_init)
 <LI><a href="#[48]">callback</a> from drv_ble.o(i.callback) referenced from drv_ble.o(i.drv_ble_timer_init)
 <LI><a href="#[51]">callback</a> from gui_dfu.o(i.callback) referenced from gui_dfu.o(i.gui_dfu_timer_init)
 <LI><a href="#[52]">callback</a> from gui_notify_warning.o(i.callback) referenced from gui_notify_warning.o(i.gui_notify_findwatch_timer_init)
 <LI><a href="#[53]">callback</a> from gui_tool_findphone.o(i.callback) referenced from gui_tool_findphone.o(i.gui_tool_findphone_timer_init)
 <LI><a href="#[65]">callback</a> from task_battery.o(i.callback) referenced from task_battery.o(i.timer_battery_init)
 <LI><a href="#[6c]">callback</a> from time_progress.o(i.callback) referenced from time_progress.o(i.timer_progress_init)
 <LI><a href="#[67]">callback_backlight</a> from time_notify.o(i.callback_backlight) referenced from time_notify.o(i.timer_notify_backlight_init)
 <LI><a href="#[68]">callback_buzzer</a> from time_notify.o(i.callback_buzzer) referenced from time_notify.o(i.timer_notify_buzzer_init)
 <LI><a href="#[69]">callback_display</a> from time_notify.o(i.callback_display) referenced from time_notify.o(i.timer_notify_display_init)
 <LI><a href="#[6a]">callback_motor</a> from time_notify.o(i.callback_motor) referenced from time_notify.o(i.timer_notify_motor_init)
 <LI><a href="#[6b]">callback_remind</a> from time_notify.o(i.callback_remind) referenced from time_notify.o(i.timer_notify_remind_init)
 <LI><a href="#[47]">cts_handle</a> from drv_ble.o(i.cts_handle) referenced from drv_ble.o(i.drv_ble_init)
 <LI><a href="#[49]">hrt_int_handle</a> from drv_hrt.o(i.hrt_int_handle) referenced from drv_hrt.o(i.drv_hrt_irq_init)
 <LI><a href="#[39]">isspace</a> from isspace.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[6e]">prvIdleTask</a> from tasks.o(i.prvIdleTask) referenced from tasks.o(i.vTaskStartScheduler)
 <LI><a href="#[54]">prvTaskExitError</a> from port.o(i.prvTaskExitError) referenced from port.o(i.pxPortInitialiseStack)
 <LI><a href="#[6f]">prvTimerTask</a> from timers.o(i.prvTimerTask) referenced from timers.o(i.xTimerCreateTimerTask)
 <LI><a href="#[56]">task</a> from task_battery.o(i.task) referenced from task_battery.o(i.task_battery_init)
 <LI><a href="#[58]">task</a> from task_ble.o(i.task) referenced from task_ble.o(i.task_ble_init)
 <LI><a href="#[5a]">task</a> from task_hrt.o(i.task) referenced from task_hrt.o(i.task_hrt_init)
 <LI><a href="#[5d]">task</a> from task_pc.o(i.task) referenced from task_pc.o(i.task_pc_init)
 <LI><a href="#[70]">task_cb</a> from task_battery.o(i.task_cb) referenced from task_battery.o(.constdata)
 <LI><a href="#[3f]">task_cb</a> from task_key.o(i.task_cb) referenced from task_key.o(i.CreateKeyTask)
 <LI><a href="#[57]">task_cb</a> from task_ble.o(i.task_cb) referenced from task_ble.o(i.task_ble_init)
 <LI><a href="#[5c]">task_cb</a> from task_pc.o(i.task_cb) referenced from task_pc.o(i.task_pc_init)
 <LI><a href="#[55]">task_hrt_handler</a> from task_hrt.o(i.task_hrt_handler) referenced from task_hrt.o(i.task)
 <LI><a href="#[4f]">te_int_handle</a> from drv_lcd.o(i.te_int_handle) referenced from drv_lcd.o(i.drv_lcd_te_irq_init)
 <LI><a href="#[5b]">timer_callback</a> from task_hrt.o(i.timer_callback) referenced from task_hrt.o(i.task_hrt_init)
 <LI><a href="#[66]">timer_handle</a> from drv_key.o(i.timer_handle) referenced from drv_key.o(i.timer_create)
 <LI><a href="#[50]">uart_cb</a> from drv_pc.o(i.uart_cb) referenced from drv_pc.o(i.drv_pc_init)
 <LI><a href="#[46]">usb_detect_hdl</a> from drv_battery.o(i.usb_detect_hdl) referenced from drv_battery.o(i.drv_bat_init)
 <LI><a href="#[59]">vEventGroupSetBitsCallback</a> from event_groups.o(i.vEventGroupSetBitsCallback) referenced 4 times from task_key.o(i.task_cb)
 <LI><a href="#[5e]">vTimerCallback</a> from timer_app.o(i.vTimerCallback) referenced from timer_app.o(i.timer_app_init)
 <LI><a href="#[61]">vTimerCallback_cod</a> from timer_app.o(i.vTimerCallback_cod) referenced from timer_app.o(i.timer_app_init)
 <LI><a href="#[62]">vTimerCallback_cod_sensor</a> from timer_app.o(i.vTimerCallback_cod_sensor) referenced from timer_app.o(i.timer_app_init)
 <LI><a href="#[64]">vTimerCallback_lcd</a> from timer_app.o(i.vTimerCallback_lcd) referenced from timer_app.o(i.timer_app_init)
 <LI><a href="#[5f]">vTimerCallback_pasue</a> from timer_app.o(i.vTimerCallback_pasue) referenced from timer_app.o(i.timer_app_init)
 <LI><a href="#[63]">vTimerCallback_timeout_back</a> from timer_app.o(i.vTimerCallback_timeout_back) referenced from timer_app.o(i.timer_app_init)
 <LI><a href="#[60]">vTimerCallback_vice_pasue</a> from timer_app.o(i.vTimerCallback_vice_pasue) referenced from timer_app.o(i.timer_app_init)
 <LI><a href="#[45]">vTimerChargingCallback</a> from drv_battery.o(i.vTimerChargingCallback) referenced from drv_battery.o(i.charging_timer_start)
 <LI><a href="#[6d]">vTimerTracebackCallback</a> from timer_traceback.o(i.vTimerTracebackCallback) referenced from timer_traceback.o(i.trace_back_timer_start)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[c]"></a>Reset_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, startup_keil.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>am_nmi_isr</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_keil.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_nmi_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_nmi_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>am_memmanage_isr</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_keil.o(RESET), UNUSED, KEPT)
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_memmanage_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_memmanage_isr
</UL>

<P><STRONG><a name="[13]"></a>am_brownout_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_keil.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_brownout_isr
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_brownout_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>am_debugmon_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_keil.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>am_flash_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_keil.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>am_iomaster4_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_keil.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>am_iomaster5_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_keil.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>am_ioslave_acc_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_keil.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>am_ioslave_ios_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_keil.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>am_pdm_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_keil.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>am_software0_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_keil.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>am_software1_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_keil.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>am_software2_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_keil.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>am_software3_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_keil.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>am_stimer_cmpr1_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_keil.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>am_stimer_cmpr2_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_keil.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>am_stimer_cmpr3_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_keil.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>am_stimer_cmpr4_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_keil.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>am_stimer_cmpr5_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_keil.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>am_stimer_cmpr6_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_keil.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>am_stimer_cmpr7_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_keil.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>am_stimer_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_keil.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>am_uart0_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_keil.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[16]"></a>am_vcomp_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_keil.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>am_watchdog_isr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_keil.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[74]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[76]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[995]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[996]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[997]"></a>__decompress</STRONG> (Thumb, 100 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[998]"></a>__decompress2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dclz77c.o(!!dclz77c), UNUSED)

<P><STRONG><a name="[999]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[77]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[cc]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[79]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[7b]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[7d]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[99a]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[89]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[7f]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[99b]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[81]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[99c]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[99d]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[99e]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[99f]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[83]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000012))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[9a0]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[9a1]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[84]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[9a2]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[9a3]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[9a4]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[9a5]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[9a6]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[9a7]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[9a8]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[9a9]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[9aa]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[9ab]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[9ac]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[9ad]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[9ae]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[8e]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[9af]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[9b0]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[9b1]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[9b2]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[9b3]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[9b4]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[75]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[9b5]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[86]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[88]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[9b6]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[8a]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 852 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; com_data_init &rArr; Get_TrainPlanDayRecord &rArr; get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[9b7]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[f1]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[8d]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[9b8]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[8f]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[f]"></a>am_svcall_isr</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[975]"></a>__asm___6_port_c_39a90d8d__prvStartFirstTask</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[974]"></a>__asm___6_port_c_39a90d8d__prvEnableVFP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[11]"></a>am_pendsv_isr</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1000 + Unknown Stack Size
<LI>Call Chain = am_pendsv_isr &rArr; vTaskSwitchContext &rArr; vApplicationStackOverflowHook &rArr; SaveSport &rArr; sport_data_end &rArr; sport_data_input &rArr; TrackOptimizingDataAccept &rArr; SportsCalculateDistSpeed &rArr; gps_raw_data_rn_receive &rArr; gps_raw_data_process_rn &rArr; calculateDistanceFromPoint &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[967]"></a>vPortGetIPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[966]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>

<P><STRONG><a name="[e]"></a>am_fault_isr</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, am_util_faultisr.o(.emb_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = am_fault_isr &rArr; am_util_faultisr_collect_data &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_faultisr_collect_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[5c9]"></a>getStackedReg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, am_util_faultisr.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_faultisr_collect_data
</UL>

<P><STRONG><a name="[938]"></a>am_hal_interrupt_master_enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, am_hal_interrupt.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_interrupt
</UL>

<P><STRONG><a name="[39b]"></a>am_hal_interrupt_master_disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, am_hal_interrupt.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_enable
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_disable
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_ble_init
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_sysctrl_sleep
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motor_enable
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motor_disable
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[8e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_handle
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_enable
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_disable
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_apollo2_gpio_int_init
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_disable
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_enable
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_disable
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Poweron
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Poweroff
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_te_irq_init
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_currenttask
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_int_status_get
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_status_get
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_clear
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_enable
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_disable
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_disable
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_stop
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_start
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_period_set
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_int_enable
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_config_single
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_clear
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_enable
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_disable
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close_on_ble_sys_off
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_init
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_enable
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_disable
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cts_handle
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bus_enable
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bus_disable
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_periph_enable
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_periph_disable
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_init
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_adc_enable
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_detect_hdl
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_disable
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_enable
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_disable
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_buzzer_enable
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_buzzer_disable
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweron
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweroff
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_enable
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_disable
<LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_init
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_irq_init
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_init
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_stimer_compare_delta_set
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_iom_workaround_critical
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_iom_wait_i2c_scl_hi
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_clkgen_uarten_set
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBuckZX
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_queue_item_get
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_queue_item_add
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_workaround_word_write
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_sleeping_queue_flush
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_queue_spi_write
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_queue_spi_read
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_queue_i2c_write
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_queue_i2c_read
</UL>

<P><STRONG><a name="[39c]"></a>am_hal_interrupt_master_set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, am_hal_interrupt.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_enable
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_disable
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_ble_init
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_sysctrl_sleep
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motor_enable
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motor_disable
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[8e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_handle
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_enable
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_disable
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_apollo2_gpio_int_init
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_disable
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_enable
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_disable
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Poweron
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Poweroff
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_te_irq_init
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_currenttask
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_int_status_get
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_status_get
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_clear
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_enable
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_disable
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_disable
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_stop
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_start
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_period_set
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_int_enable
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_config_single
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_clear
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_enable
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_disable
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close_on_ble_sys_off
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_init
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_enable
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_disable
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cts_handle
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bus_enable
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bus_disable
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_periph_enable
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_periph_disable
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_init
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_adc_enable
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_detect_hdl
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_disable
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_enable
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_disable
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_buzzer_enable
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_buzzer_disable
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweron
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweroff
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_enable
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_disable
<LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_init
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_irq_init
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_init
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_stimer_compare_delta_set
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_iom_workaround_critical
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_iom_wait_i2c_scl_hi
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_clkgen_uarten_set
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBuckZX
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_queue_item_get
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_queue_item_add
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_workaround_word_write
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_sleeping_queue_flush
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_queue_spi_write
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_queue_spi_read
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_queue_i2c_write
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_queue_i2c_read
</UL>

<P><STRONG><a name="[8cf]"></a>__asm___12_am_hal_iom_c_i2c_err__iom_workaround_loop</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, am_hal_iom.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_iom_workaround_critical
</UL>

<P><STRONG><a name="[f0]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_keil.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[93]"></a>step_ResetStepcal</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, ohrdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = step_ResetStepcal &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Initial_Pedometer
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calstep
</UL>

<P><STRONG><a name="[95]"></a>_Initial_Pedometer</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, ohrdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _Initial_Pedometer &rArr; step_ResetStepcal &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;step_ResetStepcal
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initial_Pedometer
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Step_eng
</UL>

<P><STRONG><a name="[98]"></a>ResetRunstaus</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, ohrdriver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initial_Pedometer
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
</UL>

<P><STRONG><a name="[96]"></a>Initial_Pedometer</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, ohrdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Initial_Pedometer &rArr; _Initial_Pedometer &rArr; step_ResetStepcal &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memclr4_10
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetRunstaus
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Initial_Pedometer
</UL>
<BR>[Called By]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_enable
</UL>

<P><STRONG><a name="[99]"></a>calRunstatus</STRONG> (Thumb, 1818 bytes, Stack size 40 bytes, ohrdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = calRunstatus
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Step_eng
</UL>

<P><STRONG><a name="[a1]"></a>Step_eng</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, ohrdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = Step_eng &rArr; checksteps &rArr; compareAxis &rArr; checkAxis
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calRunstatus
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Initial_Pedometer
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calstep
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksteps
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OHRL_algorithm
</UL>

<P><STRONG><a name="[9b9]"></a>getNoisesum</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ohrdriver.o(.text), UNUSED)

<P><STRONG><a name="[9ba]"></a>get_Activity</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ohrdriver.o(.text), UNUSED)

<P><STRONG><a name="[9bb]"></a>OHRL_get_onwristMovement</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ohrdriver.o(.text), UNUSED)

<P><STRONG><a name="[9bc]"></a>getmovmenttime</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ohrdriver.o(.text), UNUSED)

<P><STRONG><a name="[9bd]"></a>getRunstatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ohrdriver.o(.text), UNUSED)

<P><STRONG><a name="[a2]"></a>doOHRLAlgorithm</STRONG> (Thumb, 11222 bytes, Stack size 624 bytes, ohrdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = doOHRLAlgorithm &rArr; __hardfp_floor &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memclr4_10
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetRunstaus
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floorf
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosf
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_roundf
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fminf
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmaxf
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log10f
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ohr_algorithm
</UL>

<P><STRONG><a name="[942]"></a>OHRL_pushXYZ</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, ohrdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OHRL_pushXYZ
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[b8]"></a>OHRL_pushraw</STRONG> (Thumb, 1030 bytes, Stack size 40 bytes, ohrdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OHRL_pushraw
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OHRL_IrqDatatProcess
</UL>

<P><STRONG><a name="[9be]"></a>OHRL_GetSTEPVERSION</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ohrdriver.o(.text), UNUSED)

<P><STRONG><a name="[9bf]"></a>OHRL_GetOHRLVERSION</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ohrdriver.o(.text), UNUSED)

<P><STRONG><a name="[9c0]"></a>OHRL_GetBUILDVERSION</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ohrdriver.o(.text), UNUSED)

<P><STRONG><a name="[29f]"></a>OHRL_GetLEDcurrent</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ohrdriver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartRateMonitor_interrupt_handle
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_restart
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_enable
</UL>

<P><STRONG><a name="[9c1]"></a>OHRL_Buffmaxused</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ohrdriver.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>checkrawdata</STRONG> (Thumb, 964 bytes, Stack size 40 bytes, ohrdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = checkrawdata
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OHRL_IrqDatatProcess
</UL>

<P><STRONG><a name="[ba]"></a>OHRL_IrqDatatProcess</STRONG> (Thumb, 818 bytes, Stack size 40 bytes, ohrdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OHRL_IrqDatatProcess &rArr; checkrawdata
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkrawdata
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OHRL_pushraw
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartRateMonitor_interrupt_handle
</UL>

<P><STRONG><a name="[bb]"></a>OHLR_start_configure</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, ohrdriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[bc]"></a>OHRL_init</STRONG> (Thumb, 434 bytes, Stack size 32 bytes, ohrdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = OHRL_init &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_enable
</UL>

<P><STRONG><a name="[be]"></a>_ohr_algorithm</STRONG> (Thumb, 626 bytes, Stack size 24 bytes, ohrdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 704<LI>Call Chain = _ohr_algorithm &rArr; doOHRLAlgorithm &rArr; __hardfp_floor &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OHRL_algorithm
</UL>

<P><STRONG><a name="[bf]"></a>OHRL_CreateEncrypt</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, ohrdriver.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>

<P><STRONG><a name="[c0]"></a>OHRL_algorithm</STRONG> (Thumb, 470 bytes, Stack size 48 bytes, ohrdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 752<LI>Call Chain = OHRL_algorithm &rArr; _ohr_algorithm &rArr; doOHRLAlgorithm &rArr; __hardfp_floor &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ohr_algorithm
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Step_eng
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartRateMonitor_interrupt_handle
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[943]"></a>OHRL_reset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, ohrdriver.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_close
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[9c2]"></a>OHRL_logStep</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ohrdriver.o(.text), UNUSED)

<P><STRONG><a name="[9c3]"></a>get_bypass_static</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ohrdriver.o(.text), UNUSED)

<P><STRONG><a name="[df]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[9c4]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[9c5]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[94d]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_format
</UL>

<P><STRONG><a name="[9c6]"></a>_ll_udiv</STRONG> (Thumb, 238 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[680]"></a>__aeabi_llsl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_apollo2_gpio_int_init
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_init
</UL>

<P><STRONG><a name="[9c7]"></a>_ll_shift_l</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[c1]"></a>__2sprintf</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, __2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationStackOverflowHook
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_currenttask
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_utc_time_set
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_base_heartrate
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_two
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_one
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_2_paint
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_1_paint
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cycling_sport_detail_2_paint
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_hike_sport_detail_2_paint
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_sport_detail_2_paint
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;List_Down
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;List_Current
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_set_time
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_track_time
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_2_paint
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_1_paint
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_2_speed
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_1_time
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_1_distance
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_heart_paint
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_data_paint
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_2_paint
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_1_paint
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_1_time
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_walk_atuocircle_paint
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_run_atuocircle_paint
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_cycling_atuocircle_paint
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_climb_atuocircle_paint
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_title_paint
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_time_paint
<LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_heart_paint
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_train_pause_time
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watch_info_page_one
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_screen_data_paint
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_update_cod_dial_paint
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_type_content_paint
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_paint
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_paint
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_hint_paint
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_sw_hint_paint
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_run_select_paint
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_up_down_paint
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_inter_paint
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_iscomplete_paint
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_pause_paint
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_paint
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_end_remind_paint
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_time
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_record_paint
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_gps_paint
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_time_paint
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_setting_paint
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_menu_paint
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_paint
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_paint
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_value
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_calibration_paint
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_status_test_paint
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_realtime_test_paint
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_paint
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_silent_time_paint
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_paint
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_autolight_time_paint
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_show_paint
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_confirm_save_paint
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_ready_paint
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_ready_paint
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_time_paint
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_swimpool_paint
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_speed_paint
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_pace_paint
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_indoorleng_paint
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_heart_paint
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_goalkcal_paint
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_goalcircle_paint
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_distance_paint
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_autocircle_paint
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_altitude_paint
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_recovery_paint
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_preview_paint
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cast_pause_paint
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_recovery_time_paint
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_watch_info_paint
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_auto_back_home_paint
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_time_paint
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_speed_paint
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_pace_paint
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_height_paint
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_distance_paint
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_circle_paint
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_calory_paint
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_heartrate_warning_paint
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_alarm_paint
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_paint
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_bat_chg_paint
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_stable_paint
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_paint
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_average_based_paint
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dfu_paint
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_paint
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_value_paint
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_countdown_paint
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayTestGPSDetail
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayTestGPS
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostHdr_SNR
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostHdr
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_write
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pressure_read
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_error_handler
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_widget_type_1
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_weather
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_time
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_status
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_kcal
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_heart
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_date
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_battery
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_ambient
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_bottom_time
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_histogram
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_time_paint
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_pace_paint
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_distance_paint
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_bpm_paint
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clactate_threshold_value_title_paint
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sidebar_calories_paint
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_sports_foundation_title_paint
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motionsrecord_title_paint
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motionsrecord_mile_time_pace_paint
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_total_time_paint
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_total_distance_paint
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_realtime_pace_paint
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_value_paint
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sidebar_step_paint
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_histogram_hdr_paint
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trail_distance_paint
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_data_paint
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_data_detail_options_paint
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_realtime_battery_trail_paint
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_realtime_battery_paint_gps
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_distance_paint_gps
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cloud_navigation_options_paint
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_pressure_chart
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_chart
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_date
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_yesterday_tommorow_paint
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_content_paint
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_title_paint
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_morethran_paint
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_enddays_paint
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_beforedays_paint
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_record
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_heart_paint
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_2_paint
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_1_paint
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_save_detail_2_paint
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_save_detail_1_paint
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_1_time
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_8
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_7
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_6
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_5
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_4
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_3
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_2
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_1_paint
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_1
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_time
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_time
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_1_speed
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_1_distance
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_speed
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_pause_time
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_speed
<LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_distance
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_2_paint
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_1_paint
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_2_paint
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_1_paint
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_1_time
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_1_time
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_hike_detail_2_paint
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_hike_detail_1_paint
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_2_paint
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_1_paint
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_1_time
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_1_distance
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_2_paint
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_1_paint
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_track_distance
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_walk_detail_2_paint
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_walk_detail_1_paint
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_2_paint
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_1_paint
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_2_paint
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_1_paint
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_2_paint
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_1_paint
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_time
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_acttime
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_1_paint
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_every_1_distance
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_dottrack_nums
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_detail_heartratezone_paint
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_show_str
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_app_sport_data_show_str
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_faultisr_collect_data
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_save_and_stop
</UL>

<P><STRONG><a name="[c4]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[c5]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>

<P><STRONG><a name="[c3]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[7a]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[c7]"></a>_printf_longlong_hex</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[7c]"></a>_printf_int_hex</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[c8]"></a>_printf_ll_hex</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>

<P><STRONG><a name="[c9]"></a>_printf_hex_ptr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>

<P><STRONG><a name="[ca]"></a>__printf</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[cd]"></a>__0sscanf</STRONG> (Thumb, 52 bytes, Stack size 72 bytes, __0sscanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_compare_time
</UL>

<P><STRONG><a name="[cf]"></a>_scanf_int</STRONG> (Thumb, 332 bytes, Stack size 56 bytes, _scanf_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[d1]"></a>qsort</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, qsortnoex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = qsort &rArr; _partition_sort
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_partition_sort
</UL>
<BR>[Called By]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;median(float*, int)
</UL>

<P><STRONG><a name="[3f5]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPRMC_Analysis
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPGSV_Analysis
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPGSA_Analysis
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPGGA_Analysis
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GBGSV_Analysis
<LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_start
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_lle_import
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
</UL>

<P><STRONG><a name="[6be]"></a>memcmp</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_self_test
</UL>

<P><STRONG><a name="[50e]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>

<P><STRONG><a name="[38c]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetErrCode
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber_ExtFlash
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_utc_time_set
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_two
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_one
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_2_paint
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_1_paint
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cycling_sport_detail_2_paint
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_hike_sport_detail_2_paint
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_sport_detail_2_paint
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;List_Current
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_2_paint
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_1_paint
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_2_speed
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_1_distance
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_data_paint
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_2_paint
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_1_paint
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_walk_atuocircle_paint
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_run_atuocircle_paint
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_cycling_atuocircle_paint
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_climb_atuocircle_paint
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_train_pause_time
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_monitor_and_tools
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_screen_data_paint
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_type_content_paint
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_paint
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_up_down_paint
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_end_remind_paint
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_time
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_record_paint
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_gps_paint
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_paint
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_paint
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_calibration_paint
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_show_paint
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_confirm_save_paint
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_ready_paint
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_ready_paint
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_preview_paint
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_bat_chg_paint
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_stable_paint
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_value_paint
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_write
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_init
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_error_handler
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_widget_type_1
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_weather
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_time
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_status
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_heart
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_date
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_battery
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_ambient
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_bottom_time
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_histogram
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_time_paint
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_pace_paint
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_distance_paint
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_bpm_paint
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clactate_threshold_value_title_paint
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sidebar_calories_paint
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_sports_foundation_title_paint
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motionsrecord_mile_time_pace_paint
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_total_distance_paint
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_realtime_pace_paint
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_value_paint
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sidebar_step_paint
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_realtime_battery_trail_paint
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_realtime_battery_paint_gps
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_pressure_chart
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_chart
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_date
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_beforedays_paint
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_2_paint
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_1_paint
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_save_detail_2_paint
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_save_detail_1_paint
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_8
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_7
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_5
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_4
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_2
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_1_paint
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_1
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_1_speed
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_1_distance
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_speed
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_pause_time
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_speed
<LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_distance
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_2_paint
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_1_paint
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_2_paint
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_1_paint
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_hike_detail_2_paint
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_hike_detail_1_paint
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_2_paint
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_1_paint
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_1_distance
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_2_paint
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_1_paint
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_track_distance
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_walk_detail_2_paint
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_walk_detail_1_paint
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_2_paint
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_1_paint
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_2_paint
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_1_paint
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_2_paint
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_1_paint
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_time
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_every_1_distance
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_dottrack_nums
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_detail_heartratezone_paint
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_show_str
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_four_bar_display_paint
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_app_sport_data_show_str
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_save_and_stop
</UL>

<P><STRONG><a name="[6f7]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_write
</UL>

<P><STRONG><a name="[9a]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGNRMCCrc
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_btn_evt
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_time_btn_evt
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_sound_N_viberate_btn_evt
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_repition_btn_evt
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_btn_evt
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_real_time_log_trains
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_sendout
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_title_paint
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ble_info_set
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watch_info_page_one
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_paint
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_app_msg_paint
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_paint
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_info_paint
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_paint
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_compare_time
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_weather_info_request
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_calculate_param_write
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_calculate_param_read
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_dev_name_update
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_data_frame_num
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_ios
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_android
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_accessory_data_upload
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ohrcounter_handler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_handler
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_store_gpsdata
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_all_day_steps
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_init
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_sensor_data_trains
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_cod_sensor_data_trains
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TimeCalibrationStr
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TimeCalibrationHintStatus
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TimeAdjStr
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_unread_msg_recogn
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShareTrackDataTraverse
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cloud_navigation_options_paint
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[906]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteNoCheck
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteBlocking
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkrawdata
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OHRL_pushraw
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calRunstatus
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompressbmp24
</UL>

<P><STRONG><a name="[d3]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[9c8]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OHRL_init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OHRL_CreateEncrypt
</UL>

<P><STRONG><a name="[d4]"></a>__rt_memmove</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__memmove_aligned
</UL>

<P><STRONG><a name="[9c9]"></a>__memmove_lastfew</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_v6.o(.text), UNUSED)

<P><STRONG><a name="[ac]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Days
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_battery_init
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSport
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_data_init
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_enable
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bus_enable
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_RXM_SAVE
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_REVERT
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GNSS
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_operation_mode
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SatelliteTime
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_type_content_paint
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_paint
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_up_down_paint
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_auto_back_home_paint
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_send_gps_test_data
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_value_get
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_rssi_read_stop_response
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_rssi_read_response
<LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_info_read_response
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_extflash_read_response
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_find_phone
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_presonse_application_ble_info
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_plan_result_request_uuid
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_plan_request_uuid
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_training_cast
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_sport_cast
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_location_info
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_find_watch
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_dev_name_update
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_current_time_write
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_ios
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_accessory_data_upload
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_boot_setting_read
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackOptimizingDataAccept
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParameterInitialization
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_input
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_app_data_read
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_date
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_distance_histogram
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_m_AutoBackScreen
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_T1GPSStr
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_m_AutoBackScreen
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_solve_inverse
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitialPreparationForLengthCount
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompressbmp24
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w
</UL>

<P><STRONG><a name="[9ca]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[9cb]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[9cc]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[d6]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_face_info_2
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_face_info
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_get_watch_face_info_2
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_get_watch_face_info
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extFlash_sector
<LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[a3]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_btn_evt
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OHRL_init
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLoadTrack
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_paint
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanDayRecord
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_ios
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_android
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_mode_enable
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackOptimizingInit
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTrack
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OHRL_IrqDatatProcess
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_show_str
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_app_sport_data_show_str
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nogps_maxgap_init
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;First_Run_Config
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AmbientData_Init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OHLR_start_configure
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
</UL>

<P><STRONG><a name="[d8]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[d7]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[94]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_DiffTime
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeSecond
<LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationStackOverflowHook
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_init
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_data_init
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture_ExtFlash
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_currenttask
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_RXM_SAVE
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_REVERT
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GNSS
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_utc_time_set
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_btn_evt
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_btn_evt
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_delete_btn_evt
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_ready_btn_evt
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OHRL_init
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_base_heartrate
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_two
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_one
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_2_paint
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_1_paint
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cycling_sport_detail_2_paint
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_hike_sport_detail_2_paint
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_sport_detail_2_paint
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;List_Down
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;List_Current
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_set_time
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_2_paint
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_1_paint
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_2_paint
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_1_paint
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_walk_atuocircle_paint
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_run_atuocircle_paint
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_cycling_atuocircle_paint
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_climb_atuocircle_paint
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_title_paint
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_time_paint
<LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_heart_paint
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_train_pause_time
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watch_info_page_one
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_init
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLoadTrack
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SportTrack_GpsAddress
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTriathionGPSEndAddress
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_screen_data_paint
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_update_cod_dial_paint
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_type_content_paint
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_paint
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_paint
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_hint_paint
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_sw_hint_paint
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_run_select_paint
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_up_down_paint
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_inter_paint
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_iscomplete_paint
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_pause_paint
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_paint
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_end_remind_paint
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_gps_paint
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_paint
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_status_test_paint
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_realtime_test_paint
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_paint
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_silent_time_paint
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_silent_paint
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_paint
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_autolight_time_paint
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_autolight_paint
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_recovery_paint
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_preview_paint
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cast_pause_paint
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_watch_info_paint
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_auto_back_home_paint
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_train_step_paint
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_train_calory_paint
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_time_paint
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_speed_paint
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_pace_paint
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_height_paint
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_distance_paint
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_circle_paint
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_calory_paint
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_heartrate_warning_paint
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_passkey_paint
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_app_msg_paint
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_alarm_paint
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_paint
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_info_paint
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_paint
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_bat_chg_paint
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_paint
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dfu_paint
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_paint
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostHdr_SNR
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostHdr
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
<LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_start
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_value_clear
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_lle_import
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_compare_time
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateGPSTask
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseGPSTask
<LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_info_read_response
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_presonse_application_ble_info
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_update_bp_finish
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_sports_param_read
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_location_info
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_face_info_2
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_face_info
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_main_day_data_request
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_activity_address_boundary_request
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_dev_name_update
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_get_watch_face_info_2
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_get_watch_face_info
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SIM
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ohrcounter_handler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_handler
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackOptimizingInit
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParameterInitialization
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTrack
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_triathlon_change_start
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_input
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySportBack
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySport
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_all_day_steps
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_utf16_gbk
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_init
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_error_handler
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_widget_type_1
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_weather
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_status
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_date
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_weekmain_max_distance
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_TimeCalibration
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhysicalParamCalculateInit
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_SportsCaloriesWeekData
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motionsrecord_title_paint
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHeartratePara
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_SportsStepWeekData
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_SportsDistanceWeekData
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_CommonStepWeekData
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_CommonDistanceWeekData
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_weekmain_max_steps
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_BasedHDRWeekData
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_sport_record
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSportDetail
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShareTrackDataTraverse
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShareTrackDataNUMTraverse
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_data_paint
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_data_detail_options_paint
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_realtime_battery_trail_paint
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_realtime_battery_paint_gps
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cloud_navigation_options_paint
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_yesterday_tommorow_paint
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_content_paint
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_title_paint
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_morethran_paint
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_enddays_paint
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_beforedays_paint
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_record
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_2_paint
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_1_paint
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_save_detail_2_paint
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_save_detail_1_paint
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_8
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_7
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_6
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_5
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_4
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_3
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_2
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_1_paint
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_1
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_2_paint
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_1_paint
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_2_paint
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_1_paint
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_hike_detail_2_paint
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OHRL_IrqDatatProcess
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_ellipsoid
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_hike_detail_1_paint
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_2_paint
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_1_paint
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_2_paint
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_1_paint
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_walk_detail_2_paint
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_walk_detail_1_paint
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_2_paint
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_1_paint
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_2_paint
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_1_paint
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_2_paint
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_1_paint
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_1_paint
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_every_1_distance
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_four_bar_display_paint
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nogps_maxgap_init
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_festival_is_valid
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_festival_init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_faultisr_collect_data
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_save_and_stop
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OHLR_start_configure
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Initial_Pedometer
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;step_ResetStepcal
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompressbmp24
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_localtime_r
</UL>

<P><STRONG><a name="[9cd]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[9ce]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[d9]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[722]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trainplan_valid_flag
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[da]"></a>localtime</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, localtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = localtime &rArr; _localtime_r &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_localtime_r
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetYmdhms
</UL>

<P><STRONG><a name="[dc]"></a>mktime</STRONG> (Thumb, 352 bytes, Stack size 56 bytes, mktime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = mktime &rArr; _tm_carry
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tm_carry
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_DiffTime
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeSecond
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_festival_is_valid
</UL>

<P><STRONG><a name="[9cf]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[3]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[2]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[9d0]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[ef]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[9d1]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[de]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[e0]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosf
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_tan
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrtf
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_powf
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log10f
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log10
</UL>

<P><STRONG><a name="[c6]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[9d2]"></a>__lib_sel_fp_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text), UNUSED)

<P><STRONG><a name="[e7]"></a>_printf_fp_dec_real</STRONG> (Thumb, 620 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[c2]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[34]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> __2sprintf.o(.text)
</UL>
<P><STRONG><a name="[ea]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[eb]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[7e]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[d0]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>

<P><STRONG><a name="[ce]"></a>__vfscanf_char</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>

<P><STRONG><a name="[35]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[36]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[9d3]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[9d4]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[ed]"></a>__rt_memmove_w</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[d5]"></a>__memmove_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL>

<P><STRONG><a name="[9d5]"></a>__memmove_lastfew_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[db]"></a>_localtime_r</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, localtime_internal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _localtime_r &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localtime
</UL>

<P><STRONG><a name="[9d6]"></a>_n$localtime_r</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, localtime_internal.o(.text), UNUSED)

<P><STRONG><a name="[82]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>

<P><STRONG><a name="[e6]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[39]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = isspace &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[e9]"></a>_printf_fp_infnan</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[ec]"></a>__vfscanf</STRONG> (Thumb, 878 bytes, Stack size 96 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[e2]"></a>_btod_etento</STRONG> (Thumb, 216 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[9d7]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[9d8]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[9d9]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[ee]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
</UL>

<P><STRONG><a name="[8c]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[90]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[e3]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[f3]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[f2]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[f4]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[f5]"></a>_e2e</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[e4]"></a>_btod_ediv</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_ediv &rArr; __btod_div_common
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[e5]"></a>_btod_emul</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[f6]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[f7]"></a>ASCII_GetData</STRONG> (Thumb, 360 bytes, Stack size 16 bytes, hfma2ylib.o(i.ASCII_GetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = ASCII_GetData &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;r_dat_bat
</UL>
<BR>[Called By]<UL><LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_self_test
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_ascii_getdata
</UL>

<P><STRONG><a name="[f9]"></a>ActivityDataGetFlash</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, gui_tool_gps.o(i.ActivityDataGetFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = ActivityDataGetFlash &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityDataTraverse
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityDataReverseTraverse
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityDataNUMTraverse
</UL>

<P><STRONG><a name="[fd]"></a>ActivityDataNUMTraverse</STRONG> (Thumb, 170 bytes, Stack size 208 bytes, gui_tool_gps.o(i.ActivityDataNUMTraverse))
<BR><BR>[Stack]<UL><LI>Max Depth = 676<LI>Call Chain = ActivityDataNUMTraverse &rArr; ActivityDataGetFlash &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsActivityDataValid
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsDataValid
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityDataGetFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_gps_detail_btn_evt
</UL>

<P><STRONG><a name="[100]"></a>ActivityDataReverseTraverse</STRONG> (Thumb, 254 bytes, Stack size 64 bytes, gui_tool_gps.o(i.ActivityDataReverseTraverse))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = ActivityDataReverseTraverse &rArr; ActivityDataGetFlash &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsDataValid
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityDataGetFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_btn_evt
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_gps_detail_btn_evt
</UL>

<P><STRONG><a name="[101]"></a>ActivityDataTraverse</STRONG> (Thumb, 210 bytes, Stack size 64 bytes, gui_tool_gps.o(i.ActivityDataTraverse))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = ActivityDataTraverse &rArr; ActivityDataGetFlash &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsDataValid
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityDataGetFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_btn_evt
</UL>

<P><STRONG><a name="[102]"></a>AddTimetoOffSide</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, com_data.o(i.AddTimetoOffSide))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AddTimetoOffSide &rArr; MonthMaxDay
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MonthMaxDay
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayMainData_Init
</UL>

<P><STRONG><a name="[781]"></a>AdjustToolIndex</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_tool.o(i.AdjustToolIndex))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
</UL>

<P><STRONG><a name="[104]"></a>AmbientData_Init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, com_data.o(i.AmbientData_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = AmbientData_Init &rArr; Store_AmbientData &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_AmbientData
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;First_Run_Config
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AmbientData_Read
</UL>

<P><STRONG><a name="[106]"></a>AmbientData_Read</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, com_data.o(i.AmbientData_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = AmbientData_Read &rArr; AmbientData_Init &rArr; Store_AmbientData &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AmbientData_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_data_init
</UL>

<P><STRONG><a name="[43]"></a>CTimerB2TickHandler</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, task_timer.o(i.CTimerB2TickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = CTimerB2TickHandler &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetTimerB2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bsp_timer.o(i.SetupTimerB2)
</UL>
<P><STRONG><a name="[14e]"></a>CaculateWeekDay</STRONG> (Thumb, 90 bytes, Stack size 20 bytes, bsp_rtc.o(i.CaculateWeekDay))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CaculateWeekDay
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rtc_init
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SatelliteTime
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayMainData_Init
</UL>

<P><STRONG><a name="[10a]"></a>CalculateAltitude</STRONG> (Thumb, 582 bytes, Stack size 24 bytes, algo_sport.o(i.CalculateAltitude))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = CalculateAltitude &rArr; drv_ms5837_rel_altitude &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_rel_altitude
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Sport_Altitude
</UL>

<P><STRONG><a name="[4e1]"></a>CalculateCadenceParam</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, algo_sport.o(i.CalculateCadenceParam))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[4e2]"></a>CalculateCyclingEnergy</STRONG> (Thumb, 128 bytes, Stack size 12 bytes, algo_sport.o(i.CalculateCyclingEnergy))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CalculateCyclingEnergy
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[26e]"></a>CalculateDailyStepEnergy</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, algo_sport.o(i.CalculateDailyStepEnergy))
<BR><BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_CommonEnergy
</UL>

<P><STRONG><a name="[4d7]"></a>CalculateFrequency</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, algo_sport.o(i.CalculateFrequency))
<BR><BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[10c]"></a>CalculateFrequency_swimming</STRONG> (Thumb, 96 bytes, Stack size 56 bytes, algo_sport.o(i.CalculateFrequency_swimming))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = CalculateFrequency_swimming &rArr; __hardfp_round &rArr; __aeabi_cdcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_round
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[4dd]"></a>CalculateHeartrateMax</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, algo_sport.o(i.CalculateHeartrateMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CalculateHeartrateMax
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[110]"></a>CalculateHeartrateParam</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, algo_sport.o(i.CalculateHeartrateParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = CalculateHeartrateParam &rArr; get_hdr_range &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hdr_range
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[4df]"></a>CalculateMaxAlt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, algo_sport.o(i.CalculateMaxAlt))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[112]"></a>CalculateMountaineeringEnergy</STRONG> (Thumb, 330 bytes, Stack size 96 bytes, algo_sport.o(i.CalculateMountaineeringEnergy))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = CalculateMountaineeringEnergy &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[4d0]"></a>CalculateOptimumPace</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, algo_sport.o(i.CalculateOptimumPace))
<BR><BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[4de]"></a>CalculateOptimumSpeed</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, algo_sport.o(i.CalculateOptimumSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[113]"></a>CalculateRecoveryTime</STRONG> (Thumb, 272 bytes, Stack size 80 bytes, algo_sport.o(i.CalculateRecoveryTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = CalculateRecoveryTime &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSport
</UL>

<P><STRONG><a name="[115]"></a>CalculateRunningEnergy</STRONG> (Thumb, 122 bytes, Stack size 64 bytes, algo_sport.o(i.CalculateRunningEnergy))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = CalculateRunningEnergy &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[116]"></a>CalculateSpeed</STRONG> (Thumb, 226 bytes, Stack size 64 bytes, algo_sport.o(i.CalculateSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = CalculateSpeed &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSport
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_show_str
</UL>

<P><STRONG><a name="[117]"></a>CalculateSwimmingEnergy</STRONG> (Thumb, 294 bytes, Stack size 80 bytes, algo_sport.o(i.CalculateSwimmingEnergy))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = CalculateSwimmingEnergy &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[4dc]"></a>CalculateSwolf</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, algo_sport.o(i.CalculateSwolf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CalculateSwolf
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[119]"></a>CalculateVO2max</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, algo_sport.o(i.CalculateVO2max))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CalculateVO2max &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UninitVO2maxMeasing
</UL>

<P><STRONG><a name="[11b]"></a>CalculateWalkEnergy</STRONG> (Thumb, 72 bytes, Stack size 48 bytes, algo_sport.o(i.CalculateWalkEnergy))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CalculateWalkEnergy &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[25c]"></a>CalculateWeekDay</STRONG> (Thumb, 124 bytes, Stack size 20 bytes, com_data.o(i.CalculateWeekDay))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CalculateWeekDay
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_SportsCaloriesWeekData
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_SportsStepWeekData
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_SportsDistanceWeekData
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_CommonStepWeekData
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_CommonDistanceWeekData
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_BasedHDRWeekData
</UL>

<P><STRONG><a name="[11c]"></a>ClearStepCount</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, com_data.o(i.ClearStepCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = ClearStepCount &rArr; drv_lsm6dsl_acc_init &rArr; drv_lsm6dsl_acc_lowpower &rArr; LSM6DSL_ACC_GYRO_W_LowPower_XL &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_filt_stepcount
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_clear_stepcount
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_fifo_init
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Reset
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimetoClearStepCount
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayMainData_Init
</UL>

<P><STRONG><a name="[122]"></a>CloseGPSTask</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, task_gps.o(i.CloseGPSTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = CloseGPSTask &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_status_set
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_gps_hint_motor_flag
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_show_btn_evt
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_hint_btn_evt
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_confirm_save_btn_evt
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_btn_evt
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_gps_evt
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_threshold_hint_btn_evt
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_hint_mesuring_btn_evt
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTools
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSport
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSensor
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_difftime_rtc_gps_time
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UninitVO2maxMeasing
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_timeout_back
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_start_init
</UL>

<P><STRONG><a name="[126]"></a>CloseSensor</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, task_sport.o(i.CloseSensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = CloseSensor &rArr; drv_lsm6dsl_acc_init &rArr; drv_lsm6dsl_acc_lowpower &rArr; LSM6DSL_ACC_GYRO_W_LowPower_XL &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_standby
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_close
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseGPSTask
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_gyro_powerdown
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_get_stepcount
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_fifo_uninit
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_fifo_init
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwimmingAlgorithmsEnd
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_cyclingsta
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SwimSta
</UL>
<BR>[Called By]<UL><LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_continue_later_start
</UL>

<P><STRONG><a name="[12f]"></a>CloseSport</STRONG> (Thumb, 192 bytes, Stack size 8 bytes, task_sport.o(i.CloseSport))
<BR><BR>[Stack]<UL><LI>Max Depth = 960<LI>Call Chain = CloseSport &rArr; SaveSport &rArr; sport_data_end &rArr; sport_data_input &rArr; TrackOptimizingDataAccept &rArr; SportsCalculateDistSpeed &rArr; gps_raw_data_rn_receive &rArr; gps_raw_data_process_rn &rArr; calculateDistanceFromPoint &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSport
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_alarm_interval_set
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_standby
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLoadTrack
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_close
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseGPSTask
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_gyro_powerdown
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_fifo_uninit
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_fifo_init
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwimmingAlgorithmsEnd
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_cyclingsta
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SwimSta
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SaveSta
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[135]"></a>CloseSportTask</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, task_sport.o(i.CloseSportTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = CloseSportTask &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_back_timer_delete
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IsTrainPlanOnGoing
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IsInSportMode
</UL>
<BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_cancel_btn_evt
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_btn_evt
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_pause_btn_evt
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cancel_btn_evt
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_cancel_btn_evt
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_cancel_btn_evt
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_cancel_btn_evt
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_cancel_btn_evt
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_cancel_btn_evt
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_recovery_btn_evt
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_feel_btn_evt
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_cancel_btn_evt
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_cancel_btn_evt
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_cancel_btn_evt
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_btn_evt
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_heartrate_recovery
</UL>

<P><STRONG><a name="[139]"></a>CloseStepTask</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, task_step.o(i.CloseStepTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = CloseStepTask &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
</UL>

<P><STRONG><a name="[13b]"></a>CreatDisplayTask</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, task_display.o(i.CreatDisplayTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 556 + Unknown Stack Size
<LI>Call Chain = CreatDisplayTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_tasks
</UL>

<P><STRONG><a name="[13e]"></a>CreatSportTask</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, task_sport.o(i.CreatSportTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 556 + Unknown Stack Size
<LI>Call Chain = CreatSportTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
</UL>

<P><STRONG><a name="[140]"></a>CreatTimerTask</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, task_timer.o(i.CreatTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 556 + Unknown Stack Size
<LI>Call Chain = CreatTimerTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_tasks
</UL>

<P><STRONG><a name="[141]"></a>CreateGPSTask</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, task_gps.o(i.CreateGPSTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 556 + Unknown Stack Size
<LI>Call Chain = CreateGPSTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_status_set
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_gps_hint_motor_flag
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_btn_evt
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_week_steps_btn_evt
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_week_mileage_btn_evt
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_threshold_value_btn_evt
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_value_btn_evt
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostSettings_btn_evt
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_drv_init
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySport
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSensor
</UL>

<P><STRONG><a name="[142]"></a>CreateKeyTask</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, task_key.o(i.CreateKeyTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 556 + Unknown Stack Size
<LI>Call Chain = CreateKeyTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_key_init
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_tasks
</UL>

<P><STRONG><a name="[145]"></a>CreateSportDisplay</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_sport.o(i.CreateSportDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = CreateSportDisplay &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_btn_evt
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
</UL>

<P><STRONG><a name="[146]"></a>CreateStepTask</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, task_step.o(i.CreateStepTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 556 + Unknown Stack Size
<LI>Call Chain = CreateStepTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_tasks
</UL>

<P><STRONG><a name="[147]"></a>CreateToolDisplay</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gui_tool.o(i.CreateToolDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = CreateToolDisplay &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Tool_Index
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
</UL>

<P><STRONG><a name="[149]"></a>CreateToolTask</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, task_tool.o(i.CreateToolTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 556 + Unknown Stack Size
<LI>Call Chain = CreateToolTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_tasks
</UL>

<P><STRONG><a name="[156]"></a>DaysDiff</STRONG> (Thumb, 220 bytes, Stack size 64 bytes, bsp_rtc.o(i.DaysDiff))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = DaysDiff &rArr; Days &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Days
</UL>
<BR>[Called By]<UL><LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_all_day_steps
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanResult
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_SportsCaloriesWeekData
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_SportsStepWeekData
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_SportsDistanceWeekData
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_CommonStepWeekData
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_CommonDistanceWeekData
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_BasedHDRWeekData
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanTotalDays
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanBeforeDays
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SomeDayofTrainPlan
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_yesterday_tommorow_paint
</UL>

<P><STRONG><a name="[158]"></a>DeleteActivityRecord</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, com_sport.o(i.DeleteActivityRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = DeleteActivityRecord &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_delete_btn_evt
</UL>

<P><STRONG><a name="[159]"></a>DisplayPostHdr</STRONG> (Thumb, 166 bytes, Stack size 48 bytes, gui_heartrate.o(i.DisplayPostHdr))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = DisplayPostHdr &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[15c]"></a>DisplayPostHdr_SNR</STRONG> (Thumb, 248 bytes, Stack size 48 bytes, gui_heartrate.o(i.DisplayPostHdr_SNR))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = DisplayPostHdr_SNR &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[15d]"></a>DisplayPostHdr_SNR_btn_evt</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gui_heartrate.o(i.DisplayPostHdr_SNR_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = DisplayPostHdr_SNR_btn_evt &rArr; task_hrt_close &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_close
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[15e]"></a>DisplayPostHdr_btn_evt</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gui_heartrate.o(i.DisplayPostHdr_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = DisplayPostHdr_btn_evt &rArr; task_hrt_close &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_close
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[15f]"></a>DisplayPostSettings</STRONG> (Thumb, 520 bytes, Stack size 32 bytes, gui_heartrate.o(i.DisplayPostSettings))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396 + Unknown Stack Size
<LI>Call Chain = DisplayPostSettings &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[161]"></a>DisplayPostSettings_btn_evt</STRONG> (Thumb, 424 bytes, Stack size 16 bytes, gui_heartrate.o(i.DisplayPostSettings_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 572 + Unknown Stack Size
<LI>Call Chain = DisplayPostSettings_btn_evt &rArr; CreateGPSTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motor_enable
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupTimerB2
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateGPSTask
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Reset
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_start
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[166]"></a>DisplayScreen</STRONG> (Thumb, 2692 bytes, Stack size 232 bytes, task_display.o(i.DisplayScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 2012 + Unknown Stack Size
<LI>Call Chain = DisplayScreen &rArr; gui_motion_trail_paint &rArr; gui_sports_data_detail_options_paint &rArr; gui_sports_record_data_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_data_get
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_getHdrValue
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_menu_index_record
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_compass_angle_get
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_ambient_value_get
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_motor_restart
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_UNLOCK_HINT_start
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_menu_index_record
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_watch_info_paint
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_view_motion_trail_paint
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_detail_paint
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_screen_hint_paint
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_screen_data_paint
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_pause_hint_paint
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_update_cod_dial_paint
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_type_content_paint
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_paint
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_paint
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_hint_paint
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_run_select_paint
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_iscomplete_paint
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_start_remind_paint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_press_remind_paint
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_pause_paint
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_paint
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_end_remind_paint
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_track__trail_load_paint
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_record_paint
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_paint
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_menu_paint
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_select_paint
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_gps_paint
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_paint
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_time_paint
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_setting_paint
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_menu_paint
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_finish_paint
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_exit_paint
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_paint
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_cali_paint
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_paint
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_paint
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_pressure_paint
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_paint
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_menu_paint
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_paint
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_calibration_paint
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_utc_get_paint
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_paint
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_done_hint_paint
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_status_test_paint
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_realtime_test_paint
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_time_paint
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_sound_N_viberate_paint
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_repition_paint
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_paint
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_paint
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_preview_paint
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_paint
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_invalid_paint
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_success_paint
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_paint
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_sound_paint
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_silent_time_paint
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_silent_paint
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_paint
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_language_paint
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_base_heartrate_paint
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_backlight_paint
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_autolight_time_paint
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_autolight_paint
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_week_steps_paint
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_week_mileage_paint
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_paint
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_show_paint
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_hint_paint
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_confirm_save_paint
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_track_paint
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_paint
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_detail_paint
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_delete_paint
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_delete_notify_paint
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_pause_paint
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_paint
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_paint
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_cancel_paint
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_paint
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_second_change_paint
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_ready_paint
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_paint
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_ready_paint
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_pause_paint
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_first_change_paint
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_finish_paint
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_paint
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_ready_paint
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_paint
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cancel_paint
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_pause_paint
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_paint
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_detail_paint
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_cancel_paint
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_select_paint
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_saving_paint
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_saved_paint
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_pause_paint
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_paint
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_detail_paint
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_cancel_paint
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_time_paint
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_swimpool_paint
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_speed_paint
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_paint
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_pace_paint
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_indoorleng_paint
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_heart_paint
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_goalkcal_paint
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_goalcircle_paint
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_distance_paint
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_autocircle_paint
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_altitude_paint
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_ready_paint
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_and_data_paint
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_pause_paint
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_paint
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_paint
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_cancel_paint
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_pause_paint
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_paint
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_paint
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_cancel_paint
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_pause_paint
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_paint
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_detail_paint
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_cancel_paint
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_recovery_paint
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_feel_paint
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_set_paint
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_preview_paint
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_bar_display_paint
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_pause_paint
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_paint
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_paint
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_cancel_paint
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_pause_paint
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_paint
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_detail_paint
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_cancel_paint
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_pause_paint
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_paint
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_detail_paint
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_cancel_paint
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cast_pause_paint
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_paint
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_recovery_time_paint
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_projection_paint
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_watch_info_paint
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_auto_back_home_paint
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_warning_paint
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_train_step_paint
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_train_calory_paint
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_time_paint
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_speed_paint
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_pace_paint
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_height_paint
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_distance_paint
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_circle_paint
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_calory_paint
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_atuocircle_paint
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_on_bind_device_paint
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_locatin_ok_paint
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_heartrate_warning_paint
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_find_watch_piant
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_passkey_paint
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_disconnect_paint
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_connect_paint
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_bond_paint
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_bind_status_paint
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_app_msg_paint
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_alarm_paint
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_paint
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_info_paint
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_trail_paint
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_paint
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_del_paint
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motionsrecord_last_paint
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_paint
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_detail_paint
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_hdr_time_paint
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_hdr_time_explain_paint
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_bat_low_paint
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_bat_chg_paint
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_menu_paint
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_threshold_value_paint
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_threshold_hint_paint
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_hwt_paint
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_lock_hint_paint
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_stable_paint
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_paint
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_hint_measuring_paint
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_average_based_paint
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_gps_trail_remind_paint
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_gps_detail_paint
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_end_unfinished_sport_hint_paint
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_paint
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dfu_paint
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_tools_paint
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_tools_hint_paint
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_sports_paint
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cloud_navigation_paint
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_week_sports_paint
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_sports_foundation_paint
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_running_paint
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_paint
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_heartrate_paint
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_cycling_wheel_paint
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_cycling_cadence_paint
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_value_paint
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_lactate_eraly_end_hint_paint
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_hint_mesuring_paint
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_countdown_paint
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Timer_Cmd
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayTestGPSDetail
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayTestGPS
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostSettings
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostHdr_SNR
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostHdr
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_value_get
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[168]"></a>DisplayTestGPS</STRONG> (Thumb, 686 bytes, Stack size 80 bytes, gui_gps_test.o(i.DisplayTestGPS))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444 + Unknown Stack Size
<LI>Call Chain = DisplayTestGPS &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[169]"></a>DisplayTestGPSDetail</STRONG> (Thumb, 794 bytes, Stack size 72 bytes, gui_gps_test.o(i.DisplayTestGPSDetail))
<BR><BR>[Stack]<UL><LI>Max Depth = 1436 + Unknown Stack Size
<LI>Call Chain = DisplayTestGPSDetail &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[4ab]"></a>DistanceResult</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, algo_trackoptimizing.o(i.DistanceResult))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UninitVO2maxMeasing
</UL>

<P><STRONG><a name="[249]"></a>DrawLoadALLTrack</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, com_sport.o(i.DrawLoadALLTrack))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DrawLoadALLTrack &rArr; LCD_SetLine &rArr; line_draw
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLine
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_track_paint
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_c_1_track
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLoadTrack
</UL>

<P><STRONG><a name="[24c]"></a>DrawLoadTrack</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, com_sport.o(i.DrawLoadTrack))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = DrawLoadTrack &rArr; DrawLoadViewTrack &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLoadALLTrack
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLoadViewTrack
</UL>
<BR>[Called By]<UL><LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_marathon_track_update_paint
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_walk_track_update_paint
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_track_update_paint
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_track_update_paint
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_hike_track_update_paint
<LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_1_track
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_track_update_paint
</UL>

<P><STRONG><a name="[24d]"></a>DrawLoadViewTrack</STRONG> (Thumb, 486 bytes, Stack size 80 bytes, com_sport.o(i.DrawLoadViewTrack))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = DrawLoadViewTrack &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLine
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLoadTrack
</UL>

<P><STRONG><a name="[24e]"></a>DrawSaveTrack</STRONG> (Thumb, 260 bytes, Stack size 24 bytes, com_sport.o(i.DrawSaveTrack))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DrawSaveTrack &rArr; LCD_SetLine &rArr; line_draw
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLine
</UL>
<BR>[Called By]<UL><LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_track_paint
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_detail_track_paint
</UL>

<P><STRONG><a name="[24f]"></a>DrawTrack</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, com_sport.o(i.DrawTrack))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = DrawTrack &rArr; DrawViewTrack &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPoint
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawViewTrack
</UL>
<BR>[Called By]<UL><LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_marathon_track_update_paint
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_walk_track_update_paint
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_track_update_paint
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_track_update_paint
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_hike_track_update_paint
<LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_1_track
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_track_update_paint
</UL>

<P><STRONG><a name="[250]"></a>DrawViewTrack</STRONG> (Thumb, 732 bytes, Stack size 80 bytes, com_sport.o(i.DrawViewTrack))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = DrawViewTrack &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLine
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTrack
</UL>

<P><STRONG><a name="[251]"></a>Drawsport_arrows</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, com_sport.o(i.Drawsport_arrows))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = Drawsport_arrows &rArr; gui_sport_arrows &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_arrows
</UL>
<BR>[Called By]<UL><LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_marathon_track_update_paint
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_walk_track_update_paint
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_track_update_paint
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_track_update_paint
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_hike_track_update_paint
<LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_1_track
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_track_update_paint
</UL>

<P><STRONG><a name="[163]"></a>Factory_Reset</STRONG> (Thumb, 298 bytes, Stack size 0 bytes, com_data.o(i.Factory_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = Factory_Reset &rArr; First_Run_Config &rArr; AmbientData_Init &rArr; Store_AmbientData &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_ble_system_off
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_app_data_erase
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_reset_por
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;First_Run_Config
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearStepCount
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostSettings_btn_evt
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_event_handle
</UL>

<P><STRONG><a name="[254]"></a>First_Run_Config</STRONG> (Thumb, 1608 bytes, Stack size 8 bytes, com_data.o(i.First_Run_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = First_Run_Config &rArr; AmbientData_Init &rArr; Store_AmbientData &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rtc_init
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AmbientData_Init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_data_init
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Reset
</UL>

<P><STRONG><a name="[8ce]"></a>GB2312_24_GetData</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, hfma2ylib.o(i.GB2312_24_GetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GB2312_24_GetData
</UL>
<BR>[Called By]<UL><LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzbmp24
</UL>

<P><STRONG><a name="[4c1]"></a>GetCalDistanceStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_step.o(i.GetCalDistanceStatus))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
</UL>

<P><STRONG><a name="[25b]"></a>GetDayMainData_BasedHDRWeekData</STRONG> (Thumb, 368 bytes, Stack size 64 bytes, com_data.o(i.GetDayMainData_BasedHDRWeekData))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = GetDayMainData_BasedHDRWeekData &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DaysDiff
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateWeekDay
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_average_based_paint
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_data_init
</UL>

<P><STRONG><a name="[25d]"></a>GetDayMainData_CommonDistanceWeekData</STRONG> (Thumb, 398 bytes, Stack size 64 bytes, com_data.o(i.GetDayMainData_CommonDistanceWeekData))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = GetDayMainData_CommonDistanceWeekData &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DaysDiff
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_StepStride
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateWeekDay
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_weekSteps
</UL>

<P><STRONG><a name="[25f]"></a>GetDayMainData_CommonStepWeekData</STRONG> (Thumb, 384 bytes, Stack size 64 bytes, com_data.o(i.GetDayMainData_CommonStepWeekData))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = GetDayMainData_CommonStepWeekData &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DaysDiff
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateWeekDay
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_weekSteps
</UL>

<P><STRONG><a name="[260]"></a>GetDayMainData_SportsCaloriesWeekData</STRONG> (Thumb, 428 bytes, Stack size 64 bytes, com_data.o(i.GetDayMainData_SportsCaloriesWeekData))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = GetDayMainData_SportsCaloriesWeekData &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DaysDiff
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateWeekDay
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_weekCalories
</UL>

<P><STRONG><a name="[261]"></a>GetDayMainData_SportsDistanceWeekData</STRONG> (Thumb, 384 bytes, Stack size 64 bytes, com_data.o(i.GetDayMainData_SportsDistanceWeekData))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = GetDayMainData_SportsDistanceWeekData &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DaysDiff
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateWeekDay
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_weekSteps
</UL>

<P><STRONG><a name="[262]"></a>GetDayMainData_SportsStepWeekData</STRONG> (Thumb, 384 bytes, Stack size 64 bytes, com_data.o(i.GetDayMainData_SportsStepWeekData))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = GetDayMainData_SportsStepWeekData &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DaysDiff
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateWeekDay
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_weekSteps
</UL>

<P><STRONG><a name="[678]"></a>GetGpsAlt</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, task_gps.o(i.GetGpsAlt))
<BR><BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_store_gpsdata
</UL>

<P><STRONG><a name="[44f]"></a>GetGpsLat</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, task_gps.o(i.GetGpsLat))
<BR><BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSteptoAlgo
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_store_gpsdata
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreTrackPoint
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_input
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_KiloMeter
</UL>

<P><STRONG><a name="[450]"></a>GetGpsLon</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, task_gps.o(i.GetGpsLon))
<BR><BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSteptoAlgo
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_store_gpsdata
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreTrackPoint
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_input
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_KiloMeter
</UL>

<P><STRONG><a name="[44e]"></a>GetGpsStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, task_gps.o(i.GetGpsStatus))
<BR><BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSteptoAlgo
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_track_paint
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_track_paint
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_store_gpsdata
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreTrackPoint
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_input
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerTracebackCallback
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_track_paint
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_track_paint
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_track_paint
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_track_paint
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_track_paint
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_ready_menu
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_dottrack
</UL>

<P><STRONG><a name="[677]"></a>GetGpspdop</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, task_gps.o(i.GetGpspdop))
<BR><BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_store_gpsdata
</UL>

<P><STRONG><a name="[267]"></a>GetSportDetail</STRONG> (Thumb, 3340 bytes, Stack size 80 bytes, gui_motionsrecord.o(i.GetSportDetail))
<BR><BR>[Stack]<UL><LI>Max Depth = 548<LI>Call Chain = GetSportDetail &rArr; get_sport_detail_record &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sport_detail_record
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNextSportColumn
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHeartratePara
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_delete_btn_evt
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_btn_evt
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_longtool_screen
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_monitor_screen
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Home_Index
</UL>

<P><STRONG><a name="[26a]"></a>GetTimeSecond</STRONG> (Thumb, 66 bytes, Stack size 64 bytes, bsp_rtc.o(i.GetTimeSecond))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GetTimeSecond &rArr; mktime &rArr; _tm_carry
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcToUtc
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSport
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_is_offline_data_in_flash_uptodate
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_compare_time
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_store_gpsdata
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stores_Stroke
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_sport_record
</UL>

<P><STRONG><a name="[26b]"></a>GetTriathionGPSEndAddress</STRONG> (Thumb, 110 bytes, Stack size 184 bytes, com_sport.o(i.GetTriathionGPSEndAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = GetTriathionGPSEndAddress &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
</UL>

<P><STRONG><a name="[26c]"></a>GetYmdhms</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, bsp_rtc.o(i.GetYmdhms))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GetYmdhms &rArr; localtime &rArr; _localtime_r &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localtime
</UL>
<BR>[Called By]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcToUtc
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSport
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_compare_time
</UL>

<P><STRONG><a name="[26d]"></a>Get_CommonEnergy</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, com_data.o(i.Get_CommonEnergy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Get_CommonEnergy
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateDailyStepEnergy
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RenewOneDay
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalEnergy
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_sports_foundation_title_paint
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_DayCommonDataData
</UL>

<P><STRONG><a name="[26f]"></a>Get_Curr_Home_Index</STRONG> (Thumb, 208 bytes, Stack size 8 bytes, gui_home.o(i.Get_Curr_Home_Index))
<BR><BR>[Stack]<UL><LI>Max Depth = 748<LI>Call Chain = Get_Curr_Home_Index &rArr; Get_TrainPlanDayRecord &rArr; get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trainplan_valid_flag
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanDayRecord
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_statu_get
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_tool_start
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_sport_record
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_data_init
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSportDetail
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gui_Home_TrainPlan_Log
</UL>
<BR>[Called By]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_is_complete_btn_evt
</UL>

<P><STRONG><a name="[277]"></a>Get_Curr_Sport_Index</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, gui_sport.o(i.Get_Curr_Sport_Index))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Get_Curr_Sport_Index
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Curr_Sport_Index
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_btn_evt
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_menu_index_record
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_select_paint
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportContinueLaterDisplay
</UL>

<P><STRONG><a name="[820]"></a>Get_Curr_Sport_Num</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gui_sport.o(i.Get_Curr_Sport_Num))
<BR><BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_select_paint
</UL>

<P><STRONG><a name="[148]"></a>Get_Curr_Tool_Index</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_tool.o(i.Get_Curr_Tool_Index))
<BR><BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_btn_evt
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_gps_btn_evt
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_btn_evt
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_btn_evt
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_btn_evt
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_drv_init
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_menu_index_record
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_select_paint
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_longtool_screen
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateToolDisplay
</UL>

<P><STRONG><a name="[86f]"></a>Get_Curr_Tool_Num</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gui_tool.o(i.Get_Curr_Tool_Num))
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_select_paint
</UL>

<P><STRONG><a name="[279]"></a>Get_DayCommonDataData</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, com_data.o(i.Get_DayCommonDataData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Get_DayCommonDataData &rArr; Get_CommonEnergy
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_filt_stepcount
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_CommonEnergy
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_StepStride
</UL>
<BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_ExFlash_DayMainData
</UL>

<P><STRONG><a name="[27b]"></a>Get_DiffTime</STRONG> (Thumb, 116 bytes, Stack size 80 bytes, bsp_rtc.o(i.Get_DiffTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = Get_DiffTime &rArr; mktime &rArr; _tm_carry
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_astro_sync_request
</UL>

<P><STRONG><a name="[426]"></a>Get_Intervals_TrainPlan_Single_Distance</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, com_sport.o(i.Get_Intervals_TrainPlan_Single_Distance))
<BR><BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_inter_paint
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Pace_TrainPlan
</UL>

<P><STRONG><a name="[27c]"></a>Get_IsCompleteBothTodayTrainPlan</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, com_sport.o(i.Get_IsCompleteBothTodayTrainPlan))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Get_IsCompleteBothTodayTrainPlan
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsComplete_TargetHour
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsComplete_TargetDistance
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[28d]"></a>Get_IsCompleteTodayTrainPlan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, com_sport.o(i.Get_IsCompleteTodayTrainPlan))
<BR><BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_btn_evt
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_sport_today_hint_btn_evt
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_run_select_btn_evt
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_is_complete_btn_evt
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_home_today_hint_btn_evt
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanDayRecord
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Pace_TrainPlan
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_TranPlanUploadData
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_content_paint
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_enddays_paint
</UL>

<P><STRONG><a name="[2a9]"></a>Get_IsInSportMode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task_sport.o(i.Get_IsInSportMode))
<BR><BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsApptoWatchTime
</UL>

<P><STRONG><a name="[424]"></a>Get_IsTrainPlanOnGoing</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, com_sport.o(i.Get_IsTrainPlanOnGoing))
<BR><BR>[Called By]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Sport_Init
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Pace_TrainPlan
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[55c]"></a>Get_PauseSta</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task_sport.o(i.Get_PauseSta))
<BR><BR>[Called By]<UL><LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_track_paint
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_track_paint
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_swim_acc_fifo__data
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerTracebackCallback
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_track_paint
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_track_paint
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_track_paint
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_track_paint
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_track_paint
<LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_swich
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_hint_paint
</UL>

<P><STRONG><a name="[133]"></a>Get_SaveSta</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task_sport.o(i.Get_SaveSta))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSport
</UL>

<P><STRONG><a name="[27f]"></a>Get_SomeDayofTrainPlan</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, com_data.o(i.Get_SomeDayofTrainPlan))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Get_SomeDayofTrainPlan &rArr; DaysDiff &rArr; Days &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DaysDiff
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_paint
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanDayRecord
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_TodayTimeTrainPlan
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_TranPlanUploadData
</UL>

<P><STRONG><a name="[280]"></a>Get_SportTrack_GpsAddress</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_sports_record.o(i.Get_SportTrack_GpsAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = Get_SportTrack_GpsAddress &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
</UL>

<P><STRONG><a name="[281]"></a>Get_Sport_Altitude</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, task_sport.o(i.Get_Sport_Altitude))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = Get_Sport_Altitude &rArr; drv_ms5837_data_get &rArr; drv_ms5837_rel_altitude &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_data_get
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateAltitude
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSensor
</UL>

<P><STRONG><a name="[282]"></a>Get_Sport_Heart</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, task_sport.o(i.Get_Sport_Heart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Get_Sport_Heart
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_getHdrValue
</UL>
<BR>[Called By]<UL><LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_heart_paint
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_recovery_paint
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_heartrate_warning_paint
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_heart_paint
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_heart_paint
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_paint
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_show_str
</UL>

<P><STRONG><a name="[822]"></a>Get_Sport_Index</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_sport.o(i.Get_Sport_Index))
<BR><BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_select_paint
</UL>

<P><STRONG><a name="[821]"></a>Get_Sport_Nums</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_sport.o(i.Get_Sport_Nums))
<BR><BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_select_paint
</UL>

<P><STRONG><a name="[25e]"></a>Get_StepStride</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, com_data.o(i.Get_StepStride))
<BR><BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalDistance
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_CommonDistanceWeekData
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_DayCommonDataData
</UL>

<P><STRONG><a name="[4eb]"></a>Get_SwimSta</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task_sport.o(i.Get_SwimSta))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStep
</UL>

<P><STRONG><a name="[283]"></a>Get_T1GPSStr</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, algo_time_calibration.o(i.Get_T1GPSStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Get_T1GPSStr &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_status_test_paint
</UL>

<P><STRONG><a name="[4ed]"></a>Get_TaskSportSta</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task_sport.o(i.Get_TaskSportSta))
<BR><BR>[Called By]<UL><LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationStackOverflowHook
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_clkgen_isr
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStep
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_training_cast
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_sport_cast
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_heartrate_recovery
</UL>

<P><STRONG><a name="[284]"></a>Get_TimeAdjStr</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, algo_time_calibration.o(i.Get_TimeAdjStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Get_TimeAdjStr
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_status_test_paint
</UL>

<P><STRONG><a name="[285]"></a>Get_TimeCalibrationHintStatus</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, algo_time_calibration.o(i.Get_TimeCalibrationHintStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Get_TimeCalibrationHintStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_status_test_paint
</UL>

<P><STRONG><a name="[85c]"></a>Get_TimeCalibrationStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, algo_time_calibration.o(i.Get_TimeCalibrationStatus))
<BR><BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_status_test_paint
</UL>

<P><STRONG><a name="[286]"></a>Get_TimeCalibrationStr</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, algo_time_calibration.o(i.Get_TimeCalibrationStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Get_TimeCalibrationStr
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_status_test_paint
</UL>

<P><STRONG><a name="[871]"></a>Get_Tool_Index</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_tool.o(i.Get_Tool_Index))
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_select_paint
</UL>

<P><STRONG><a name="[870]"></a>Get_Tool_Nums</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_tool.o(i.Get_Tool_Nums))
<BR><BR>[Called By]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_select_paint
</UL>

<P><STRONG><a name="[287]"></a>Get_TotalDistance</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, com_data.o(i.Get_TotalDistance))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Get_TotalDistance
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_StepStride
</UL>
<BR>[Called By]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_all_day_steps
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_wechat_sport_data_request
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_main_day_data_request
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_data_frame_num
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_status
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_cod
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_value_paint
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_day_steps_reinit
</UL>

<P><STRONG><a name="[288]"></a>Get_TotalEnergy</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, com_data.o(i.Get_TotalEnergy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Get_TotalEnergy &rArr; Get_CommonEnergy
</UL>
<BR>[Calls]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_CommonEnergy
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_all_day_steps
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_wechat_sport_data_request
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_main_day_data_request
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_data_frame_num
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_status
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_kcal
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_ambient
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_cod
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_day_steps_reinit
</UL>

<P><STRONG><a name="[289]"></a>Get_TotalStep</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, com_data.o(i.Get_TotalStep))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Get_TotalStep
</UL>
<BR>[Calls]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_filt_stepcount
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_paint
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_wechat_sport_data_request
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_main_day_data_request
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_status
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_cod
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_value_paint
</UL>

<P><STRONG><a name="[28a]"></a>Get_TrainPlanBeforeDays</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, com_data.o(i.Get_TrainPlanBeforeDays))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Get_TrainPlanBeforeDays &rArr; DaysDiff &rArr; Days &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DaysDiff
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_paint
</UL>

<P><STRONG><a name="[272]"></a>Get_TrainPlanDayRecord</STRONG> (Thumb, 392 bytes, Stack size 144 bytes, com_data.o(i.Get_TrainPlanDayRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 740<LI>Call Chain = Get_TrainPlanDayRecord &rArr; get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trainplan_valid_flag
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IsCompleteTodayTrainPlan
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_TodayTimeTrainPlan
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanTotalDays
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SomeDayofTrainPlan
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IsCompleteTodayTrainPlan
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_data_init
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RenewOneDay
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_notify_switch
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_longtool_screen
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_monitor_screen
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Home_Index
</UL>

<P><STRONG><a name="[28f]"></a>Get_TrainPlanDownloadDataSize</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, com_data.o(i.Get_TrainPlanDownloadDataSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Get_TrainPlanDownloadDataSize &rArr; Get_TrainPlanTotalDays &rArr; DaysDiff &rArr; Days &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanTotalDays
</UL>
<BR>[Called By]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_plan_read_address_request
</UL>

<P><STRONG><a name="[290]"></a>Get_TrainPlanResult</STRONG> (Thumb, 196 bytes, Stack size 48 bytes, com_data.o(i.Get_TrainPlanResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = Get_TrainPlanResult &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DaysDiff
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_plan_result_read_address_request
</UL>

<P><STRONG><a name="[28c]"></a>Get_TrainPlanTotalDays</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, com_data.o(i.Get_TrainPlanTotalDays))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = Get_TrainPlanTotalDays &rArr; DaysDiff &rArr; Days &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DaysDiff
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_paint
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanDayRecord
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_TodayTimeTrainPlan
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanDownloadDataSize
</UL>

<P><STRONG><a name="[425]"></a>Get_TrainPlanType</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, com_sport.o(i.Get_TrainPlanType))
<BR><BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_btn_evt
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_sport_today_hint_btn_evt
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_run_select_btn_evt
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_home_today_hint_btn_evt
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_paint
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Sport_Init
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Pace_TrainPlan
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_TranPlanUploadData
</UL>

<P><STRONG><a name="[291]"></a>GpsDistance</STRONG> (Thumb, 798 bytes, Stack size 152 bytes, algo_trackoptimizing.o(i.GpsDistance))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = GpsDistance &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_over_or_restart
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_exception
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_distance_cal
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedOptimizingDataCollection
</UL>

<P><STRONG><a name="[297]"></a>GpsDistance5Bit</STRONG> (Thumb, 592 bytes, Stack size 128 bytes, algo_trackjudge.o(i.GpsDistance5Bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = GpsDistance5Bit &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trackjudge
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;partdistancerate
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;navi_remaindistance
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_remaindistance
</UL>

<P><STRONG><a name="[299]"></a>HeartRateMonitor_interrupt_handle</STRONG> (Thumb, 92 bytes, Stack size 528 bytes, si117x_config.o(i.HeartRateMonitor_interrupt_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1280<LI>Call Chain = HeartRateMonitor_interrupt_handle &rArr; OHRL_algorithm &rArr; _ohr_algorithm &rArr; doOHRLAlgorithm &rArr; __hardfp_floor &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_enable
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_disable
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OHRL_GetLEDcurrent
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_hrt_acc_fifo_data
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OHRL_algorithm
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OHRL_IrqDatatProcess
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setOhrcurrent
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear1171int
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xReadFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_int_handler
</UL>

<P><STRONG><a name="[55d]"></a>IncidentPreprocessing</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, algo_hf_swimming_main.o(i.IncidentPreprocessing))
<BR><BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_swim_acc_fifo__data
</UL>

<P><STRONG><a name="[2a1]"></a>InitDistanceAlgo_VO2maxLactate</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, timer_app.o(i.InitDistanceAlgo_VO2maxLactate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = InitDistanceAlgo_VO2maxLactate &rArr; PhysicalParamCalculateInit &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_get_stepcount
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhysicalParamCalculateInit
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
</UL>

<P><STRONG><a name="[132]"></a>InitLoadTrack</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, com_sport.o(i.InitLoadTrack))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = InitLoadTrack &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_track_load_btn_evt
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_detail_btn_evt
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_delete_btn_evt
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_btn_evt
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_del_btn_evt
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_detail_btn_evt
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSport
</UL>

<P><STRONG><a name="[2a3]"></a>InitTrack</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, com_sport.o(i.InitTrack))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = InitTrack &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySport
</UL>

<P><STRONG><a name="[2a4]"></a>InitialPreparationForLengthCount</STRONG> (Thumb, 728 bytes, Stack size 312 bytes, algo_hf_swimming_main.o(i.InitialPreparationForLengthCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = InitialPreparationForLengthCount &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::abs(float)
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_ID_Npeaks_between_major_peaks(int, float, BT_ID_omega_x_PeakInfo*, DataSequence_Structure*)
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BR_ID_Find_peak_valley(int, float, BR_ID_PeakInfo*, DataSequence_Structure*, int*)
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LengthCount
</UL>

<P><STRONG><a name="[ff]"></a>IsActivityDataValid</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, com_sport.o(i.IsActivityDataValid))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityDataNUMTraverse
</UL>

<P><STRONG><a name="[2a8]"></a>IsApptoWatchTime</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, algo_time_calibration.o(i.IsApptoWatchTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IsApptoWatchTime
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IsInSportMode
</UL>
<BR>[Called By]<UL><LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_current_time_write
</UL>

<P><STRONG><a name="[fe]"></a>IsDataValid</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gui_tool_gps.o(i.IsDataValid))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityDataTraverse
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityDataReverseTraverse
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityDataNUMTraverse
</UL>

<P><STRONG><a name="[2aa]"></a>IsHeartSportMode</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, com_sport.o(i.IsHeartSportMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = IsHeartSportMode
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSportReady
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSportMode
</UL>
<BR>[Called By]<UL><LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_restart
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_enable
</UL>

<P><STRONG><a name="[2ad]"></a>IsOpen_TrainPlan_Settings</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, com_data.o(i.IsOpen_TrainPlan_Settings))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = IsOpen_TrainPlan_Settings &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_notify_switch
</UL>

<P><STRONG><a name="[45b]"></a>IsShareTrackDataValid</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gui_tool_gps.o(i.IsShareTrackDataValid))
<BR><BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShareTrackDataTraverse
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShareTrackDataNUMTraverse
</UL>

<P><STRONG><a name="[2ac]"></a>IsSportMode</STRONG> (Thumb, 208 bytes, Stack size 0 bytes, com_sport.o(i.IsSportMode))
<BR><BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_auto_back_home
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsHeartSportMode
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_notify_switch
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimetoClearStepCount
</UL>

<P><STRONG><a name="[2ab]"></a>IsSportReady</STRONG> (Thumb, 202 bytes, Stack size 0 bytes, com_sport.o(i.IsSportReady))
<BR><BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_auto_back_home
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsHeartSportMode
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_notify_switch
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_timeout_back
</UL>

<P><STRONG><a name="[85d]"></a>IsTimeValid</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, algo_time_calibration.o(i.IsTimeValid))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = IsTimeValid
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_status_test_paint
</UL>

<P><STRONG><a name="[155]"></a>Is_Leap_Year</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, bsp_rtc.o(i.Is_Leap_Year))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Days
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SatelliteTime
</UL>

<P><STRONG><a name="[28b]"></a>Is_TodayTimeTrainPlan</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, com_data.o(i.Is_TodayTimeTrainPlan))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = Is_TodayTimeTrainPlan &rArr; Get_TrainPlanTotalDays &rArr; DaysDiff &rArr; Days &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_ValidTimeTrainPlan
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanTotalDays
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SomeDayofTrainPlan
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_btn_evt
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_paint
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanDayRecord
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Pace_TrainPlan
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[2ae]"></a>Is_ValidTimeTrainPlan</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, com_data.o(i.Is_ValidTimeTrainPlan))
<BR><BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_paint
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_TodayTimeTrainPlan
</UL>

<P><STRONG><a name="[8cb]"></a>JIS_16_GetData</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, hfma2ylib.o(i.JIS_16_GetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = JIS_16_GetData
</UL>
<BR>[Called By]<UL><LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzbmp16
</UL>

<P><STRONG><a name="[8cc]"></a>KSC_16_GetData</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, hfma2ylib.o(i.KSC_16_GetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = KSC_16_GetData
</UL>
<BR>[Called By]<UL><LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzbmp16
</UL>

<P><STRONG><a name="[2af]"></a>KeyEventHandler</STRONG> (Thumb, 2776 bytes, Stack size 8 bytes, task_key.o(i.KeyEventHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404 + Unknown Stack Size
<LI>Call Chain = KeyEventHandler &rArr; gui_hwt_btn_evt &rArr; gui_hwt_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_watch_info_btn_evt
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_view_motion_trail_btn_evt
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_detail_btn_evt
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_btn_evt
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_btn_evt
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_hint_btn_evt
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_btn_evt
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_sw_hint_btn_evt
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_sport_today_hint_btn_evt
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_run_select_btn_evt
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_up_down_btn_evt
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_inter_btn_evt
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_is_complete_btn_evt
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_home_today_hint_btn_evt
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_remind_btn_evt
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_pause_btn_evt
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_end_remind_btn_evt
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_btn_evt
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_track_load_btn_evt
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_record_btn_evt
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_menu_btn_evt
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_btn_evt
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_gps_btn_evt
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_btn_evt
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_time_btn_evt
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_setting_btn_evt
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_menu_btn_evt
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_finish_btn_evt
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_exit_btn_evt
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_cali_btn_evt
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_btn_evt
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_btn_evt
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_btn_evt
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_btn_evt
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_pressure_btn_evt
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_menu_btn_evt
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_btn_evt
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_calibration_btn_evt
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_btn_evt
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_utc_get_btn_evt
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_realtime_difftime_evt
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_done_hint_btn_evt
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_status_test_evt
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_realtime_test_evt
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_btn_evt
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_time_btn_evt
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_sound_N_viberate_btn_evt
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_repition_btn_evt
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_btn_evt
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_btn_evt
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_preview_btn_evt
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_invalid_btn_evt
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_btn_evt
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_success_btn_evt
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_btn_evt
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_sound_btn_evt
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_silent_time_btn_evt
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_silent_btn_evt
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_language_btn_evt
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_btn_evt
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_base_heartrate_btn_evt
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_backlight_btn_evt
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_autolight_time_btn_evt
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_autolight_btn_evt
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_week_steps_btn_evt
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_week_mileage_btn_evt
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_show_btn_evt
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_hint_btn_evt
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_confirm_save_btn_evt
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_btn_evt
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_detail_btn_evt
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_delete_notify_btn_evt
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_delete_btn_evt
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_btn_evt
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_pause_btn_evt
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_btn_evt
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_cancel_btn_evt
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_btn_evt
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_btn_evt
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_second_change_btn_evt
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_ready_btn_evt
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_btn_evt
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_ready_btn_evt
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_pause_btn_evt
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_first_change_btn_evt
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_btn_evt
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_ready_btn_evt
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_btn_evt
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cancel_btn_evt
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_pause_btn_evt
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_detail_btn_evt
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_cancel_btn_evt
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_btn_evt
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_pause_btn_evt
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_detail_btn_evt
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_cancel_btn_evt
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_btn_evt
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_time_btn_evt
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_swimpool_btn_evt
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_speed_btn_evt
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_pace_btn_evt
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_indoorleng_btn_evt
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_heart_btn_evt
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_goalkcal_btn_evt
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_goalcircle_btn_evt
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_distance_btn_evt
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_btn_evt
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_autocircle_btn_evt
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_altitude_btn_evt
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_ready_btn_evt
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_hint_btn_evt
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_pause_btn_evt
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_btn_evt
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_cancel_btn_evt
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_btn_evt
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_pause_btn_evt
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_btn_evt
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_cancel_btn_evt
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_btn_evt
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_pause_btn_evt
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_detail_btn_evt
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_cancel_btn_evt
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_btn_evt
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_recovery_btn_evt
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_feel_btn_evt
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_set_btn_evt
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_preview_btn_evt
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_btn_evt
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_pause_btn_evt
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_btn_evt
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_cancel_btn_evt
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_btn_evt
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_pause_btn_evt
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_detail_btn_evt
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_cancel_btn_evt
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_btn_evt
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_pause_btn_evt
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_detail_btn_evt
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_cancel_btn_evt
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_btn_evt
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cast_pause_btn_evt
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_btn_evt
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_btn_evt
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_recovery_time_btn_evt
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_projection_btn_evt
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_watch_info_btn_evt
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_gps_evt
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_gps_details_evt
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_auto_back_home_btn_evt
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_warning_btn_evt
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_train_step_btn_evt
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_train_calory_btn_evt
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_time_btn_evt
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_speed_btn_evt
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_pace_btn_evt
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_height_btn_evt
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_distance_btn_evt
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_circle_btn_evt
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_calory_btn_evt
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_autocircle_btn_evt
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_on_bind_device_btn_evt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_locatin_ok_btn_evt
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_heartrate_warning_btn_evt
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_find_watch_btn_evt
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_passkey_btn_evt
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_disconnect_btn_evt
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_connect_btn_evt
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_bond_btn_evt
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_bind_status_btn_evt
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_app_msg_btn_evt
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_alarm_btn_evt
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_info_btn_evt
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_btn_evt
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_trail_btn_evt
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_btn_evt
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_del_btn_evt
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motionsrecord_last_btn_evt
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_detail_btn_evt
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_btn_evt
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_hdr_time_explain_btn_evt
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_hdr_time_btn_evt
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_bat_low_btn_evt
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_bat_chg_btn_evt
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_menu_btn_evt
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_threshold_value_btn_evt
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_threshold_hint_btn_evt
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_hwt_btn_evt
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_lock_hint_btn_evt
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_stable_btn_evt
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_hint_measuring_btn_evt
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_btn_evt
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_average_based_btn_evt
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_gps_trail_remind_btn_evt
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_gps_detail_btn_evt
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_end_unfinished_sport_hint_btn_evt
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dfu_btn_evt
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_tools_hint_btn_evt
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_tools_btn_evt
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_sports_btn_evt
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cloud_navigation_btn_evt
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_week_sports_btn_evt
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_sports_foundation_btn_evt
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_running_btn_evt
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_heartrate_btn_evt
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_cycling_wheel_btn_evt
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_cycling_cadence_btn_evt
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_btn_evt
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_value_btn_evt
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_mesuring_btn_evt
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_lactate_eraly_end_hint_btn_evt
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_hint_mesuring_btn_evt
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostSettings_btn_evt
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostHdr_btn_evt
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostHdr_SNR_btn_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskKey
</UL>

<P><STRONG><a name="[384]"></a>KeyEventHandlerScreenAutoBackHome</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, task_key.o(i.KeyEventHandlerScreenAutoBackHome))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = KeyEventHandlerScreenAutoBackHome &rArr; timer_app_auto_back_home_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_auto_back_home_start
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_auto_back_home
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskKey
</UL>

<P><STRONG><a name="[387]"></a>KeyEventHandlerScreenSportRecord</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, task_key.o(i.KeyEventHandlerScreenSportRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = KeyEventHandlerScreenSportRecord &rArr; timer_app_sport_record_detail_stop &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_sport_record_detail_stop
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_sport_record_detail_start
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_sport_record_detail_screen
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskKey
</UL>

<P><STRONG><a name="[38b]"></a>LCD_DisplayGTString</STRONG> (Thumb, 650 bytes, Stack size 256 bytes, drv_lcd.o(i.LCD_DisplayGTString))
<BR><BR>[Stack]<UL><LI>Max Depth = 1284<LI>Call Chain = LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcdram_map
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_gb_getdata
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_ascii_getdata
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_system
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_paint
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_set_sound_N_viberate
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_set_repition
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_set
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_monitor_and_tools
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_type_content_paint
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_paint
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_paint
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_hint_paint
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_sw_hint_paint
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_run_select_paint
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_up_down_paint
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_inter_paint
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_iscomplete_paint
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_app_msg_paint
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_paint
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_info_paint
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_paint
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_tools_hint_paint
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_yesterday_tommorow_paint
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_content_paint
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_title_paint
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_morethran_paint
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_hint_paint
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_enddays_paint
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_beforedays_paint
</UL>

<P><STRONG><a name="[390]"></a>LCD_DisplayOff</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, drv_lcd.o(i.LCD_DisplayOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = LCD_DisplayOff &rArr; drv_lcd_ctrl_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_enable
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_disable
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_ctrl_write
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Poweroff
</UL>

<P><STRONG><a name="[394]"></a>LCD_DisplaySomeLine</STRONG> (Thumb, 292 bytes, Stack size 24 bytes, drv_lcd.o(i.LCD_DisplaySomeLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_lcd_start
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_lcd_te_high
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_switch_lpm_to_hpm
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_enable
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_disable
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_data_write
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_ctrl_write
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_block_data_write
</UL>
<BR>[Called By]<UL><LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationStackOverflowHook
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_currenttask
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_hwt_paint
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_error_handler
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_faultisr_collect_data
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_save_and_stop
</UL>

<P><STRONG><a name="[39a]"></a>LCD_Init</STRONG> (Thumb, 1096 bytes, Stack size 8 bytes, drv_lcd.o(i.LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 364 + Unknown Stack Size
<LI>Call Chain = LCD_Init &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplaySomeLine
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;whether_lcd_te_high
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_reset
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_enable
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_discharge
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_disable
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_data_write
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_ctrl_write
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_te_irq_init
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[3a1]"></a>LCD_Poweroff</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, drv_lcd.o(i.LCD_Poweroff))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = LCD_Poweroff &rArr; LCD_DisplayOff &rArr; drv_lcd_ctrl_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayOff
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
</UL>

<P><STRONG><a name="[3a2]"></a>LCD_Poweron</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, drv_lcd.o(i.LCD_Poweron))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_Poweron &rArr; am_util_delay_ms &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[3a3]"></a>LCD_SetArc</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, drv_lcd.o(i.LCD_SetArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = LCD_SetArc &rArr; draw_arc &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCircle
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_arc
</UL>
<BR>[Called By]<UL><LI><a href="#[857]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_option
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_display
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_walk_atuocircle_paint
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_run_atuocircle_paint
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_cycling_atuocircle_paint
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_climb_atuocircle_paint
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_pause_hint_paint
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_hint_paint
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_inter_paint
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_paint
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_time_paint
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_paint
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_paint
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_utc_get_paint
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_done_hint_paint
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_paint
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_delete_notify_paint
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_pause_paint
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_paint
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_cancel_paint
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_paint
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_second_change_paint
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_paint
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_pause_paint
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_first_change_paint
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_finish_paint
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_paint
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cancel_paint
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_pause_paint
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_select_paint
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_saving_paint
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_saved_paint
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_pause_paint
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_pause_paint
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_paint
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_cancel_paint
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_pause_paint
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_paint
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_cancel_paint
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_pause_paint
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_pause_paint
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_pause_paint
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_pause_paint
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_paint
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_recovery_time_paint
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_train_step_paint
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_time_paint
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_speed_paint
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_pace_paint
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_height_paint
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_distance_paint
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_circle_paint
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_calory_paint
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_locatin_ok_paint
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_bat_chg_paint
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_countdown_paint
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_display
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_battery
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_6
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_progress_loop
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_progress_circle
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_progress_circle_1
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_progress_circle_0
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_histogram_step_paint
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_display
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_ready_menu
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_hint_paint
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_1_paint
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_compass
</UL>

<P><STRONG><a name="[15a]"></a>LCD_SetBackgroundColor</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, drv_lcd.o(i.LCD_SetBackgroundColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = LCD_SetBackgroundColor
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationStackOverflowHook
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_currenttask
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_two
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_one
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_2_paint
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_1_paint
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cycling_sport_detail_2_paint
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_hike_sport_detail_2_paint
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_sport_detail_2_paint
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_track_paint
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_realtime_paint
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_heart_paint
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_2_paint
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_1_paint
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_1_paint
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_track_paint
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_realtime_paint
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_heart_paint
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_data_paint
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_2_paint
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_1_paint
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_walk_atuocircle_paint
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_run_atuocircle_paint
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_cycling_atuocircle_paint
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_climb_atuocircle_paint
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_watch_info_paint
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_view_motion_trail_paint
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_screen_hint_paint
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_screen_data_paint
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_update_cod_dial_paint
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_type_content_paint
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_paint
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_paint
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_hint_paint
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_sw_hint_paint
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_run_select_paint
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_up_down_paint
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_inter_paint
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_iscomplete_paint
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_start_remind_paint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_press_remind_paint
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_pause_paint
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_paint
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_end_remind_paint
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_track__trail_load_paint
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_record_paint
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_paint
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_select_paint
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_gps_paint
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_paint
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_time_paint
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_setting_paint
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_menu_paint
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_finish_paint
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_exit_paint
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_paint
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_cali_paint
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_paint
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_paint
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_pressure_paint
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_paint
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_menu_paint
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_paint
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_calibration_paint
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_utc_get_paint
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_paint
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_done_hint_paint
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_status_test_paint
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_realtime_test_paint
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_time_paint
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_sound_N_viberate_paint
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_repition_paint
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_paint
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_paint
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_preview_paint
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_paint
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_invalid_paint
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_sound_paint
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_silent_time_paint
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_silent_paint
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_paint
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_language_paint
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_base_heartrate_paint
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_backlight_paint
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_autolight_time_paint
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_autolight_paint
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_week_steps_paint
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_week_mileage_paint
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_paint
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_show_paint
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_hint_paint
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_confirm_save_paint
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_track_paint
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_paint
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_detail_paint
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_delete_paint
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_delete_notify_paint
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_second_change_paint
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_ready_paint
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_paint
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_ready_paint
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_first_change_paint
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_finish_paint
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_paint
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_ready_paint
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_paint
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_pause_paint
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_select_paint
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_saving_paint
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_saved_paint
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_pause_paint
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_time_paint
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_swimpool_paint
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_speed_paint
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_paint
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_pace_paint
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_indoorleng_paint
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_heart_paint
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_goalkcal_paint
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_goalcircle_paint
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_distance_paint
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_autocircle_paint
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_altitude_paint
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_ready_paint
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_pause_paint
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_recovery_paint
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_feel_paint
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_set_paint
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_preview_paint
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_bar_display_paint
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_pause_paint
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_pause_paint
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_pause_paint
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cast_pause_paint
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_paint
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_recovery_time_paint
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_projection_paint
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_watch_info_paint
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_auto_back_home_paint
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_warning_paint
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_train_step_paint
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_train_calory_paint
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_time_paint
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_speed_paint
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_pace_paint
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_height_paint
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_distance_paint
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_circle_paint
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_calory_paint
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_on_bind_device_paint
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_heartrate_warning_paint
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_find_watch_piant
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_passkey_paint
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_disconnect_paint
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_connect_paint
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_bond_paint
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_bind_status_paint
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_app_msg_paint
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_alarm_paint
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_paint
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_info_paint
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_trail_paint
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_paint
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_del_paint
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motionsrecord_last_paint
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_paint
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_detail_paint
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_hdr_time_paint
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_hdr_time_explain_paint
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_bat_low_paint
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_bat_chg_paint
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_menu_paint
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_threshold_value_paint
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_threshold_hint_paint
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_mesuring_paint
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_hwt_paint
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_lock_hint_paint
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_stable_paint
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_paint
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_hint_measuring_paint
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_average_based_paint
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_gps_trail_remind_paint
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_gps_detail_paint
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_end_unfinished_sport_hint_paint
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dfu_paint
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_tools_paint
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_tools_hint_paint
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_sports_paint
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cloud_navigation_paint
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_week_sports_paint
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_sports_foundation_paint
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_running_paint
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_paint
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_heartrate_paint
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_cycling_wheel_paint
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_cycling_cadence_paint
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_value_paint
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_mesuring_paint
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_lactate_eraly_end_hint_paint
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_hint_mesuring_paint
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_countdown_paint
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayTestGPSDetail
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayTestGPS
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostSettings
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostHdr_SNR
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostHdr
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_error_handler
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_background
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;List_None
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_realtime_paint
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_heart_paint
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_data_paint
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_2_paint
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_1_paint
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_save_detail_2_paint
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_save_detail_1_paint
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_track_paint
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_1_paint
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_1_paint
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_2_paint
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_1_paint
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_2_paint
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_1_paint
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_hike_detail_2_paint
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_hike_detail_1_paint
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_2_paint
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_1_paint
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_2_paint
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_1_paint
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_heart_paint
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_track_paint
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_track_paint
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_track_paint
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_track_paint
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_track_paint
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_walk_detail_2_paint
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_walk_detail_1_paint
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_2_paint
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_1_paint
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_2_paint
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_1_paint
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_2_paint
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_1_paint
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_paint
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_detail_track_paint
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_detail_heartratezone_paint
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_faultisr_collect_data
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_save_and_stop
</UL>

<P><STRONG><a name="[3a4]"></a>LCD_SetCircle</STRONG> (Thumb, 338 bytes, Stack size 64 bytes, drv_lcd.o(i.LCD_SetCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_SetCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[857]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_option
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_pause_hint_paint
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_paint
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_select_paint
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_locatin_ok_paint
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_time
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_status
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_battery
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_progress_loop
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_hint_paint
</UL>

<P><STRONG><a name="[3a8]"></a>LCD_SetDialScale</STRONG> (Thumb, 422 bytes, Stack size 96 bytes, drv_lcd.o(i.LCD_SetDialScale))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = LCD_SetDialScale &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_circle_point
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_paint
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_progress_circle_2
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_progress_circle_0
</UL>

<P><STRONG><a name="[3aa]"></a>LCD_SetErrCode</STRONG> (Thumb, 188 bytes, Stack size 64 bytes, drv_lcd.o(i.LCD_SetErrCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = LCD_SetErrCode &rArr; LCD_SetChar &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChar
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationStackOverflowHook
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_currenttask
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_error_handler
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_faultisr_collect_data
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_save_and_stop
</UL>

<P><STRONG><a name="[24a]"></a>LCD_SetLine</STRONG> (Thumb, 182 bytes, Stack size 48 bytes, drv_lcd.o(i.LCD_SetLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = LCD_SetLine &rArr; line_draw
</UL>
<BR>[Calls]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;line_draw
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTriangle
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPolygon_7
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPolygon
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPentagon
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_paint
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cloud_navigation_paint
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_7
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_4
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_1
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLoadALLTrack
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSaveTrack
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawViewTrack
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLoadViewTrack
</UL>

<P><STRONG><a name="[3ac]"></a>LCD_SetNumber</STRONG> (Thumb, 1832 bytes, Stack size 136 bytes, drv_lcd.o(i.LCD_SetNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber_Char
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChar
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString_ExtFlash
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_base_heartrate
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_two
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_one
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_2_paint
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_1_paint
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cycling_sport_detail_2_paint
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_hike_sport_detail_2_paint
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_sport_detail_2_paint
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;List_Down
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;List_Current
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_set_time
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_set
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_track_time
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_2_paint
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_1_paint
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_2_speed
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_1_time
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_1_distance
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_heart_paint
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_data_paint
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_2_paint
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_1_paint
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_1_time
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_walk_atuocircle_paint
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_run_atuocircle_paint
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_cycling_atuocircle_paint
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_climb_atuocircle_paint
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_time_paint
<LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_heart_paint
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_train_pause_time
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_screen_data_paint
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_update_cod_dial_paint
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_up_down_paint
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_pause_paint
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_paint
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_end_remind_paint
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_time
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_record_paint
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_time_paint
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_setting_paint
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_menu_paint
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_paint
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_paint
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_value
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_calibration_paint
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_silent_time_paint
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_autolight_time_paint
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_show_paint
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_confirm_save_paint
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_time_paint
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_swimpool_paint
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_speed_paint
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_pace_paint
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_indoorleng_paint
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_heart_paint
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_goalkcal_paint
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_goalcircle_paint
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_distance_paint
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_autocircle_paint
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_altitude_paint
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_recovery_paint
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_preview_paint
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cast_pause_paint
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_recovery_time_paint
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_time_paint
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_speed_paint
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_pace_paint
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_height_paint
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_distance_paint
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_circle_paint
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_calory_paint
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_heartrate_warning_paint
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_passkey_paint
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_alarm_paint
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_bat_chg_paint
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_stable_paint
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_paint
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_average_based_paint
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dfu_paint
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_value_paint
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_countdown_paint
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_weather
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_time
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_status
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_kcal
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_heart
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_date
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_ambient
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_bottom_time
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_histogram
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_time_paint
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_pace_paint
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_distance_paint
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_bpm_paint
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clactate_threshold_value_title_paint
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sidebar_calories_paint
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_sports_foundation_title_paint
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motionsrecord_title_paint
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motionsrecord_mile_time_pace_paint
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_total_time_paint
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_total_distance_paint
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_realtime_pace_paint
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_value_paint
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sidebar_step_paint
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_data_paint
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_pressure_chart
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_chart
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_date
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_beforedays_paint
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_heart_paint
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_2_paint
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_1_paint
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_save_detail_2_paint
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_save_detail_1_paint
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_1_time
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_8
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_7
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_6
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_5
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_4
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_3
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_2
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_1_paint
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_1
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_time
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_time
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_1_speed
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_1_distance
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_speed
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_pause_time
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_speed
<LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_distance
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_2_paint
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_1_paint
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_2_paint
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_1_paint
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_1_time
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_1_time
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_hike_detail_2_paint
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_hike_detail_1_paint
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_2_paint
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_1_paint
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_1_time
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_2_paint
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_1_paint
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_walk_detail_2_paint
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_walk_detail_1_paint
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_2_paint
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_1_paint
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_2_paint
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_1_paint
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_2_paint
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_1_paint
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_time
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_acttime
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_1_paint
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_dottrack_nums
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_detail_heartratezone_paint
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_four_bar_display_paint
</UL>

<P><STRONG><a name="[3af]"></a>LCD_SetNumber_ExtFlash</STRONG> (Thumb, 444 bytes, Stack size 120 bytes, drv_lcd.o(i.LCD_SetNumber_ExtFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 900 + Unknown Stack Size
<LI>Call Chain = LCD_SetNumber_ExtFlash &rArr; LCD_SetPicture_ExtFlash &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture_ExtFlash
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber_Char
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_time
</UL>

<P><STRONG><a name="[3b1]"></a>LCD_SetPentagon</STRONG> (Thumb, 584 bytes, Stack size 88 bytes, drv_lcd.o(i.LCD_SetPentagon))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = LCD_SetPentagon &rArr; LCD_SetLine &rArr; line_draw
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLine
</UL>
<BR>[Called By]<UL><LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_7
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_6
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_5
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_4
</UL>

<P><STRONG><a name="[3ae]"></a>LCD_SetPicture</STRONG> (Thumb, 690 bytes, Stack size 104 bytes, drv_lcd.o(i.LCD_SetPicture))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber_Char
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_base_heartrate
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_two
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_one
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_2_paint
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_1_paint
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cycling_sport_detail_2_paint
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_hike_sport_detail_2_paint
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_sport_detail_2_paint
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;List_Current
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_set_sound_N_viberate
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_set_repition
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_set
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_1_start
<LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_walk_prompt_paint
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_heart_paint
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_walk_atuocircle_paint
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_run_atuocircle_paint
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_cycling_atuocircle_paint
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_climb_atuocircle_paint
<LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_heart_paint
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_monitor_and_tools
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_screen_hint_paint
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_pause_hint_paint
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_sw_hint_paint
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_run_select_paint
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_start_remind_paint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_press_remind_paint
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_pause_paint
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_end_remind_paint
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_record_paint
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_paint
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_select_paint
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_gps_paint
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_time_paint
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_finish_paint
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_paint
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_paint
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_paint
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_value
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_paint
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_calibration_paint
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_utc_get_paint
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_paint
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_done_hint_paint
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_success_paint
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_sound_paint
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_paint
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_backlight_paint
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_paint
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_show_paint
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_hint_paint
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_track_paint
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_paint
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_delete_notify_paint
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_ready_paint
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_ready_paint
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_ready_paint
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_select_paint
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_saved_paint
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_time_paint
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_speed_paint
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_paint
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_pace_paint
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_heart_paint
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_goalcircle_paint
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_distance_paint
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_autocircle_paint
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_altitude_paint
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_feel_paint
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_set_paint
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_preview_paint
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_bar_display_paint
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_paint
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_projection_paint
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_train_step_paint
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_train_calory_paint
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_on_bind_device_paint
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_heartrate_warning_paint
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_passkey_paint
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_disconnect_paint
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_connect_paint
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_bond_paint
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_app_msg_paint
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_alarm_paint
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_paint
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_info_paint
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_paint
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_del_paint
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_paint
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_hdr_time_paint
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_bat_low_paint
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_bat_chg_paint
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_lock_hint_paint
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_paint
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_average_based_paint
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_gps_detail_paint
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_end_unfinished_sport_hint_paint
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_tools_hint_paint
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cloud_navigation_paint
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_paint
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_value_paint
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_lactate_eraly_end_hint_paint
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_hint_mesuring_paint
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_widget_type_1
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_weather
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_status
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_kcal
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_heart
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_date
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_battery
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_ambient
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_page_up
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_page_down
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_daysofweek_paint
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_button_up
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_button_middle
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_button_back
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_bottom_time
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_histogram
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_threshold_hint_content_paint
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clactate_threshold_value_title_paint
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_daysofweek_calories_paint
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_sports_foundation_title_paint
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motionsrecord_title_paint
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_histogram_step_paint
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tick_cross
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_point_direction
<LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_cail_update
<LI><a href="#[867]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_bubble
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trail_distance_paint
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_data_paint
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_realtime_battery_trail_paint
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_realtime_battery_paint_gps
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_distance_paint_gps
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_pressure_chart
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_chart
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_no_info
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_date
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_title_paint
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_heart_paint
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_indoorrun_prompt_paint
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_save_detail_2_paint
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_save_detail_1_paint
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_2_paint
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_1_paint
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_2_paint
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_1_paint
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_hike_prompt_paint
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_hike_detail_2_paint
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_hike_detail_1_paint
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_2_paint
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_1_paint
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_2_paint
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_1_paint
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_heart_paint
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_track_paint
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_track_paint
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_track_paint
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_track_paint
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_track_paint
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_track_mark
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_ready_menu
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_walk_detail_2_paint
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_walk_detail_1_paint
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_2_paint
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_1_paint
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_2_paint
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_1_paint
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_2_paint
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_1_paint
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_hint_paint
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_index_circle_vert_paint
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_index_circle_paint
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_1_paint
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_dottrack_nums
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_detail_track_paint
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_detail_heartratezone_paint
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_compass
</UL>

<P><STRONG><a name="[3b0]"></a>LCD_SetPicture_ExtFlash</STRONG> (Thumb, 830 bytes, Stack size 328 bytes, drv_lcd.o(i.LCD_SetPicture_ExtFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 780<LI>Call Chain = LCD_SetPicture_ExtFlash &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber_ExtFlash
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_widget_type_1
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_weather
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_status
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_background
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_ambient
</UL>

<P><STRONG><a name="[24b]"></a>LCD_SetPoint</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, drv_lcd.o(i.LCD_SetPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LCD_SetPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLoadALLTrack
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTrack
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSaveTrack
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLoadTrack
</UL>

<P><STRONG><a name="[3b2]"></a>LCD_SetPolygon</STRONG> (Thumb, 434 bytes, Stack size 88 bytes, drv_lcd.o(i.LCD_SetPolygon))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = LCD_SetPolygon &rArr; LCD_SetLine &rArr; line_draw
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLine
</UL>
<BR>[Called By]<UL><LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_6
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_5
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_4
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_3
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_1
</UL>

<P><STRONG><a name="[3b3]"></a>LCD_SetPolygon_7</STRONG> (Thumb, 454 bytes, Stack size 88 bytes, drv_lcd.o(i.LCD_SetPolygon_7))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = LCD_SetPolygon_7 &rArr; LCD_SetLine &rArr; line_draw
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLine
</UL>
<BR>[Called By]<UL><LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_7
</UL>

<P><STRONG><a name="[160]"></a>LCD_SetRectangle</STRONG> (Thumb, 346 bytes, Stack size 40 bytes, drv_lcd.o(i.LCD_SetRectangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = LCD_SetRectangle
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber_Char
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_base_heartrate
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_system
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_one
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_1_paint
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_paint
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_set_time
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_set_sound_N_viberate
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_set_repition
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_1_paint
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_1_paint
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_heart_paint
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_data_paint
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_1_paint
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_walk_atuocircle_paint
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_run_atuocircle_paint
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_cycling_atuocircle_paint
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_climb_atuocircle_paint
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_monitor_and_tools
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_screen_data_paint
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_paint
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_paint
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_run_select_paint
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_pause_paint
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_time
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_menu_paint
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_gps_paint
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_setting_paint
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_menu_paint
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_exit_paint
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_paint
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_paint
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_value
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_menu_paint
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_calibration_paint
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_status_test_paint
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_paint
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_preview_paint
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_silent_time_paint
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_autolight_time_paint
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_show_paint
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_hint_paint
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_paint
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_pause_paint
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_cancel_paint
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_second_change_paint
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_paint
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_pause_paint
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_first_change_paint
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_paint
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cancel_paint
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_pause_paint
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_cancel_paint
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_pause_paint
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_cancel_paint
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_time_paint
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_swimpool_paint
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_speed_paint
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_paint
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_pace_paint
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_indoorleng_paint
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_heart_paint
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_goalkcal_paint
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_goalcircle_paint
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_distance_paint
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_autocircle_paint
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_altitude_paint
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_pause_paint
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_cancel_paint
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_pause_paint
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_cancel_paint
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_pause_paint
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_cancel_paint
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_recovery_paint
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_feel_paint
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_set_paint
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_preview_paint
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_bar_display_paint
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_pause_paint
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_cancel_paint
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_pause_paint
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_cancel_paint
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_pause_paint
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_cancel_paint
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cast_pause_paint
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_paint
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_recovery_time_paint
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_projection_paint
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_auto_back_home_paint
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_on_bind_device_paint
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_app_msg_paint
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_alarm_paint
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_info_paint
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_paint
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_del_paint
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_paint
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_hdr_time_paint
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_hdr_time_explain_paint
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_mesuring_paint
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_paint
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_hint_measuring_paint
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_gps_detail_paint
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cloud_navigation_paint
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_value_paint
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_mesuring_paint
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_lactate_eraly_end_hint_paint
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_hint_mesuring_paint
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayTestGPSDetail
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayTestGPS
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostSettings
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_widget_type_1
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_weather
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_status
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_heart
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_date
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_battery
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_distance_histogram
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_histogram
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_12h_pressure
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_progress_circle_1
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_threshold_hint_content_paint
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clactate_threshold_value_title_paint
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_week_sports_title_paint
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_histogram_paint
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_histogram_step_paint
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_wave_paint
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_histogram_hdr_paint
<LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_cail_update
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_realtime_battery_trail_paint
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_realtime_battery_paint_gps
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_pressure_chart
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_chart
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_date
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_yesterday_tommorow_paint
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_beforedays_paint
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_record
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_menu
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_heart_paint
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_data_paint
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_indoorrun_prompt_paint
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_1_paint
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_save_detail_1_paint
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_1_paint
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_1_paint
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_1_paint
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_1_paint
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_hike_detail_1_paint
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_1_paint
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_1_paint
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_heart_paint
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_ready_menu
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_walk_detail_1_paint
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_1_paint
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_1_paint
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_1_paint
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_1_paint
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_detail_heartratezone_paint
</UL>

<P><STRONG><a name="[15b]"></a>LCD_SetString</STRONG> (Thumb, 330 bytes, Stack size 80 bytes, drv_lcd.o(i.LCD_SetString))
<BR><BR>[Stack]<UL><LI>Max Depth = 1364<LI>Call Chain = LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChinese
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChar
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString_ExtFlash
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_base_heartrate
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_two
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_one
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_2_paint
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_1_paint
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cycling_sport_detail_2_paint
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_hike_sport_detail_2_paint
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_sport_detail_2_paint
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;List_Up
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;List_Current
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_set
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm
<LI><a href="#[857]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_option
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_pause_options
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_2_paint
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_1_paint
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_2_speed
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_1_start
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_1_distance
<LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_walk_prompt_paint
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_data_paint
<LI><a href="#[845]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_pause_options
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_2_paint
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_1_paint
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_warning_index_watch_info_ble_off
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_warning_index_accessory_ble_off
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_walk_atuocircle_paint
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_run_atuocircle_paint
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_cycling_atuocircle_paint
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_climb_atuocircle_paint
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_title_paint
<LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_heart_paint
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_train_pause_time
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_train_options
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watch_info_page_one
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_screen_hint_paint
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_update_cod_dial_paint
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_up_down_paint
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_inter_paint
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_start_remind_paint
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_press_remind_paint
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_paint
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_end_remind_paint
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_track__trail_load_paint
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_record_paint
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_select_paint
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_gps_paint
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_paint
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_setting_paint
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_menu_paint
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_finish_paint
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_exit_paint
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_paint
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_cali_paint
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_paint
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_pressure_paint
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_menu_paint
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_paint
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_calibration_paint
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_utc_get_paint
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_done_hint_paint
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_status_test_paint
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_realtime_test_paint
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_time_paint
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_preview_paint
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_invalid_paint
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_silent_time_paint
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_autolight_time_paint
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_show_paint
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_hint_paint
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_confirm_save_paint
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_track_paint
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_delete_paint
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_delete_notify_paint
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_cancel_paint
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_second_change_paint
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_ready_paint
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_ready_paint
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_first_change_paint
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_finish_paint
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_ready_paint
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cancel_paint
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_cancel_paint
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_select_paint
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_saving_paint
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_saved_paint
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_cancel_paint
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_time_paint
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_swimpool_paint
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_speed_paint
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_paint
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_pace_paint
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_indoorleng_paint
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_heart_paint
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_goalkcal_paint
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_goalcircle_paint
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_distance_paint
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_autocircle_paint
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_altitude_paint
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_cancel_paint
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_cancel_paint
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_cancel_paint
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_recovery_paint
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_set_paint
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_bar_display_paint
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_cancel_paint
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_cancel_paint
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_cancel_paint
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_recovery_time_paint
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_projection_paint
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_watch_info_paint
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_auto_back_home_paint
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_train_step_paint
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_train_calory_paint
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_time_paint
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_speed_paint
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_pace_paint
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_height_paint
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_distance_paint
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_circle_paint
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_calory_paint
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_on_bind_device_paint
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_locatin_ok_paint
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_heartrate_warning_paint
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_find_watch_piant
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_passkey_paint
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_disconnect_paint
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_connect_paint
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_bond_paint
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_bind_status_paint
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_app_msg_paint
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_alarm_paint
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_paint
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_info_paint
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_paint
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_paint
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_detail_paint
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_hdr_time_paint
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_hdr_time_explain_paint
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_bat_low_paint
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_bat_chg_paint
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_hwt_paint
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_lock_hint_paint
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_stable_paint
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_hint_measuring_paint
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_average_based_paint
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_gps_trail_remind_paint
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_gps_detail_paint
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_end_unfinished_sport_hint_paint
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dfu_paint
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cloud_navigation_paint
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_value_paint
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_lactate_eraly_end_hint_paint
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_hint_mesuring_paint
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_countdown_paint
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayTestGPSDetail
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayTestGPS
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostSettings
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostHdr_SNR
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostHdr
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_weather
<LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_distance_histogram
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_time_paint
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_pace_paint
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_distance_paint
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_bpm_paint
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_threshold_hint_content_paint
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clactate_threshold_value_title_paint
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_week_sports_title_paint
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_sports_foundation_title_paint
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;List_None
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motionsrecord_mile_time_pace_paint
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_total_distance_paint
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_realtime_pace_paint
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_value_paint
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sidebar_step_paint
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_histogram_hdr_paint
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trail_distance_paint
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_gps_detail_options_paint
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_data_paint
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_data_detail_options_paint
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_realtime_battery_trail_paint
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_realtime_battery_paint_gps
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_projection_options_paint
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_ops_paint
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_del_options_paint
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_del_caption_paint
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_distance_paint_gps
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cloud_navigation_options_paint
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_no_info
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_date
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_record
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_menu
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_heart_paint
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_indoorrun_prompt_paint
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_pause_options
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_2_paint
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_1_paint
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_save_detail_2_paint
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_save_detail_1_paint
<LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_pause_options
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_track_paint
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_8
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_7
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_5
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_4
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_2
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_1_paint
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_1
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_1_speed
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_1_distance
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_speed
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_pause_time
<LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_pause_options
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_speed
<LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_distance
<LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cancel_options
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_2_paint
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_1_paint
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_pause_options
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_2_paint
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_1_paint
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_pause_options
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_hike_prompt_paint
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_pause_options
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_hike_detail_2_paint
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_hike_detail_1_paint
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_pause_options
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_2_paint
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_1_paint
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_1_distance
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_2_paint
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_1_paint
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_pause_options
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_track_distance
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_heart_paint
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_track_mark
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_ready_menu
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_walk_detail_2_paint
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_walk_detail_1_paint
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_2_paint
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_1_paint
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_2_paint
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_1_paint
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_2_paint
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_1_paint
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_time
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_1_paint
<LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_feel_options_paint
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_every_1_distance
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_dot_draw_prompt
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_detail_track_paint
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_detail_heartratezone_paint
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_four_bar_display_paint
<LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_options_paint
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_options
<LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_caption_paint
</UL>

<P><STRONG><a name="[3b4]"></a>LCD_SetString_ExtFlash</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, drv_lcd.o(i.LCD_SetString_ExtFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388 + Unknown Stack Size
<LI>Call Chain = LCD_SetString_ExtFlash &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
</UL>
<BR>[Called By]<UL><LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_widget_type_1
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_weather
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_status
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_date
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_battery
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_ambient
</UL>

<P><STRONG><a name="[3b5]"></a>LCD_SetTriangle</STRONG> (Thumb, 290 bytes, Stack size 64 bytes, drv_lcd.o(i.LCD_SetTriangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = LCD_SetTriangle &rArr; LCD_SetLine &rArr; line_draw
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLine
</UL>
<BR>[Called By]<UL><LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_7
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_5
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_1
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_arrows
</UL>

<P><STRONG><a name="[3b6]"></a>LSM6DSL_ACC_GYRO_GetRawAccData</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_GetRawAccData))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = LSM6DSL_ACC_GYRO_GetRawAccData &rArr; LSM6DSL_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; am_hal_iom_i2c_read &rArr; am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_axes_raw
</UL>

<P><STRONG><a name="[3b8]"></a>LSM6DSL_ACC_GYRO_GetRawGyroData</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_GetRawGyroData))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = LSM6DSL_ACC_GYRO_GetRawGyroData &rArr; LSM6DSL_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; am_hal_iom_i2c_read &rArr; am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_gyro_axes_raw
</UL>

<P><STRONG><a name="[3b9]"></a>LSM6DSL_ACC_GYRO_Get_GetFIFOData</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_Get_GetFIFOData))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = LSM6DSL_ACC_GYRO_Get_GetFIFOData &rArr; LSM6DSL_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; am_hal_iom_i2c_read &rArr; am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_acc_gyro_clear_fifo
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_swim_acc_fifo__data
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_hrt_acc_fifo_data
</UL>

<P><STRONG><a name="[3ba]"></a>LSM6DSL_ACC_GYRO_R_FIFONumOfEntries</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_R_FIFONumOfEntries))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LSM6DSL_ACC_GYRO_R_FIFONumOfEntries &rArr; LSM6DSL_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; am_hal_iom_i2c_read &rArr; am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_acc_gyro_clear_fifo
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_swim_acc_fifo__data
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_hrt_acc_fifo_data
</UL>

<P><STRONG><a name="[3bb]"></a>LSM6DSL_ACC_GYRO_R_FIFOPattern</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_R_FIFOPattern))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LSM6DSL_ACC_GYRO_R_FIFOPattern &rArr; LSM6DSL_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; am_hal_iom_i2c_read &rArr; am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_swim_acc_fifo__data
</UL>

<P><STRONG><a name="[3bc]"></a>LSM6DSL_ACC_GYRO_R_SPI_Mode</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_R_SPI_Mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = LSM6DSL_ACC_GYRO_R_SPI_Mode &rArr; LSM6DSL_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; am_hal_iom_i2c_read &rArr; am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStep
</UL>

<P><STRONG><a name="[3bd]"></a>LSM6DSL_ACC_GYRO_R_WHO_AM_I</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_R_WHO_AM_I))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = LSM6DSL_ACC_GYRO_R_WHO_AM_I &rArr; LSM6DSL_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; am_hal_iom_i2c_read &rArr; am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_hrt_acc_init
</UL>

<P><STRONG><a name="[3b7]"></a>LSM6DSL_ACC_GYRO_ReadReg</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_ReadReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = LSM6DSL_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; am_hal_iom_i2c_read &rArr; am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_acc_init
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_init
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_WK_THS
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_WAKE_DUR
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_SW_RESET
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_STOP_ON_FTH
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_SLEEP_DUR
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_PedoStepReset
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_PULL_UP_EN
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_ODR_XL
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_ODR_G
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_ODR_FIFO
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_LowPower_XL
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_LP_Mode
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_IF_Addr_Incr
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_FS_XL
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_FS_G
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_FIFO_Watermark
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_FIFO_MODE
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_DEC_FIFO_XL
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_DEC_FIFO_G
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_BDU
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_R_WHO_AM_I
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_R_SPI_Mode
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_R_FIFOPattern
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_R_FIFONumOfEntries
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_Get_GetFIFOData
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_GetRawGyroData
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_GetRawAccData
</UL>

<P><STRONG><a name="[3bf]"></a>LSM6DSL_ACC_GYRO_W_BDU</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_W_BDU))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LSM6DSL_ACC_GYRO_W_BDU &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_WriteReg
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_hrt_acc_init
</UL>

<P><STRONG><a name="[3c1]"></a>LSM6DSL_ACC_GYRO_W_DEC_FIFO_G</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_W_DEC_FIFO_G))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LSM6DSL_ACC_GYRO_W_DEC_FIFO_G &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_WriteReg
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_fifo_uninit
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_fifo_init
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_fifo_init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_fifo_init
</UL>

<P><STRONG><a name="[3c2]"></a>LSM6DSL_ACC_GYRO_W_DEC_FIFO_XL</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_W_DEC_FIFO_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LSM6DSL_ACC_GYRO_W_DEC_FIFO_XL &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_WriteReg
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_fifo_uninit
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_fifo_init
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_fifo_init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_fifo_init
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_hrt_acc_pwron
</UL>

<P><STRONG><a name="[3c3]"></a>LSM6DSL_ACC_GYRO_W_FIFO_MODE</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_W_FIFO_MODE))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LSM6DSL_ACC_GYRO_W_FIFO_MODE &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_WriteReg
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_fifo_uninit
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_fifo_init
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_fifo_init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_fifo_init
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_hrt_acc_pwron
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_hrt_acc_init
</UL>

<P><STRONG><a name="[3c4]"></a>LSM6DSL_ACC_GYRO_W_FIFO_Watermark</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_W_FIFO_Watermark))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = LSM6DSL_ACC_GYRO_W_FIFO_Watermark &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_WriteReg
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_fifo_uninit
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_fifo_init
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_fifo_init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_fifo_init
</UL>

<P><STRONG><a name="[3c5]"></a>LSM6DSL_ACC_GYRO_W_FS_G</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_W_FS_G))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LSM6DSL_ACC_GYRO_W_FS_G &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_WriteReg
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_gyro_init
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_gyro_init
</UL>

<P><STRONG><a name="[3c6]"></a>LSM6DSL_ACC_GYRO_W_FS_XL</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_W_FS_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LSM6DSL_ACC_GYRO_W_FS_XL &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_WriteReg
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_hrt_acc_init
</UL>

<P><STRONG><a name="[3c7]"></a>LSM6DSL_ACC_GYRO_W_IF_Addr_Incr</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_W_IF_Addr_Incr))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LSM6DSL_ACC_GYRO_W_IF_Addr_Incr &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_WriteReg
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_hrt_acc_init
</UL>

<P><STRONG><a name="[3c8]"></a>LSM6DSL_ACC_GYRO_W_LP_Mode</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_W_LP_Mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LSM6DSL_ACC_GYRO_W_LP_Mode &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_WriteReg
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_gyro_lowpower
</UL>

<P><STRONG><a name="[3c9]"></a>LSM6DSL_ACC_GYRO_W_LowPower_XL</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_W_LowPower_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LSM6DSL_ACC_GYRO_W_LowPower_XL &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_WriteReg
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_lowpower
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_hrt_acc_pwron
</UL>

<P><STRONG><a name="[3ca]"></a>LSM6DSL_ACC_GYRO_W_ODR_FIFO</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_W_ODR_FIFO))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LSM6DSL_ACC_GYRO_W_ODR_FIFO &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_WriteReg
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_fifo_uninit
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_fifo_init
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_fifo_init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_fifo_init
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_hrt_acc_pwron
</UL>

<P><STRONG><a name="[3cb]"></a>LSM6DSL_ACC_GYRO_W_ODR_G</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_W_ODR_G))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LSM6DSL_ACC_GYRO_W_ODR_G &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_WriteReg
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_gyro_powerdown
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_gyro_init
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_gyro_init
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_hrt_acc_init
</UL>

<P><STRONG><a name="[3cc]"></a>LSM6DSL_ACC_GYRO_W_ODR_XL</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_W_ODR_XL))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LSM6DSL_ACC_GYRO_W_ODR_XL &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_WriteReg
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_powerdown
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_hrt_acc_pwron
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_hrt_acc_init
</UL>

<P><STRONG><a name="[3cd]"></a>LSM6DSL_ACC_GYRO_W_PULL_UP_EN</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_W_PULL_UP_EN))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LSM6DSL_ACC_GYRO_W_PULL_UP_EN &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_WriteReg
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_reset
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_acc_init
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_init
</UL>

<P><STRONG><a name="[3ce]"></a>LSM6DSL_ACC_GYRO_W_PedoStepReset</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_W_PedoStepReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LSM6DSL_ACC_GYRO_W_PedoStepReset &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_WriteReg
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_clear_stepcount
</UL>

<P><STRONG><a name="[3cf]"></a>LSM6DSL_ACC_GYRO_W_SLEEP_DUR</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_W_SLEEP_DUR))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LSM6DSL_ACC_GYRO_W_SLEEP_DUR &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_WriteReg
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_acc_init
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_init
</UL>

<P><STRONG><a name="[3d0]"></a>LSM6DSL_ACC_GYRO_W_STOP_ON_FTH</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_W_STOP_ON_FTH))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LSM6DSL_ACC_GYRO_W_STOP_ON_FTH &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_WriteReg
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_fifo_uninit
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_fifo_init
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_fifo_init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_fifo_init
</UL>

<P><STRONG><a name="[3d1]"></a>LSM6DSL_ACC_GYRO_W_SW_RESET</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_W_SW_RESET))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LSM6DSL_ACC_GYRO_W_SW_RESET &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_WriteReg
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_reset
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_acc_init
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_init
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_hrt_acc_init
</UL>

<P><STRONG><a name="[3d2]"></a>LSM6DSL_ACC_GYRO_W_WAKE_DUR</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_W_WAKE_DUR))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LSM6DSL_ACC_GYRO_W_WAKE_DUR &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_WriteReg
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_acc_init
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_init
</UL>

<P><STRONG><a name="[3d3]"></a>LSM6DSL_ACC_GYRO_W_WK_THS</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_W_WK_THS))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = LSM6DSL_ACC_GYRO_W_WK_THS &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_WriteReg
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_acc_init
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_init
</UL>

<P><STRONG><a name="[3c0]"></a>LSM6DSL_ACC_GYRO_WriteReg</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, lsm6dsl_acc_gyro_driver.o(i.LSM6DSL_ACC_GYRO_WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_acc_init
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_init
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_WK_THS
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_WAKE_DUR
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_SW_RESET
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_STOP_ON_FTH
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_SLEEP_DUR
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_PedoStepReset
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_PULL_UP_EN
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_ODR_XL
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_ODR_G
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_ODR_FIFO
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_LowPower_XL
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_LP_Mode
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_IF_Addr_Incr
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_FS_XL
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_FS_G
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_FIFO_Watermark
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_FIFO_MODE
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_DEC_FIFO_XL
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_DEC_FIFO_G
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_BDU
</UL>

<P><STRONG><a name="[3d5]"></a>LengthCount</STRONG> (Thumb, 768 bytes, Stack size 136 bytes, algo_hf_swimming_main.o(i.LengthCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 812 + Unknown Stack Size
<LI>Call Chain = LengthCount &rArr; BR_Only_omega_x_a_z_DynamicBoundForDurationTest(BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, int*, int*, int*, int*, bool*, float*, float*, float*) &rArr; RemoveOutliers(float*, int, bool*, int*) &rArr; median(float*, int) &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitialPreparationForLengthCount
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BR_Only_omega_x_a_z_DynamicBoundForDurationTest(BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, int*, int*, int*, int*, bool*, float*, float*, float*)
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmoothDurationTest_omega_x_DynamicBound(float, int, int, int, float*, int*, int*, int*, int*, int*, int*, float*, float*, float*, int, int)
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Average_acc_z_Peak_Valley(BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, bool*)
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmoothDurationTest_omega_x(float, int, int, int, float*, int*, int*, int*, int*, int*, int*, int, int)
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AbruptChangeProcessing_a_z(float, int, int, int, int*, int*, int*, int*, int*, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwimmingAlgorithmsAll
</UL>

<P><STRONG><a name="[49f]"></a>LengthCountPostProcessing</STRONG> (Thumb, 410 bytes, Stack size 60 bytes, algo_hf_swimming_main.o(i.LengthCountPostProcessing))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = LengthCountPostProcessing
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwimResultsPostProcessing
</UL>

<P><STRONG><a name="[3de]"></a>List_None</STRONG> (Thumb, 244 bytes, Stack size 16 bytes, gui_sports_record.o(i.List_None))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380 + Unknown Stack Size
<LI>Call Chain = List_None &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_paint
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motionsrecord_last_paint
</UL>

<P><STRONG><a name="[3e0]"></a>LoadGpsToXY</STRONG> (Thumb, 432 bytes, Stack size 64 bytes, com_sport.o(i.LoadGpsToXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = LoadGpsToXY &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadNavigation
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMotiontTrail
</UL>

<P><STRONG><a name="[3e3]"></a>LoadMotiontTrail</STRONG> (Thumb, 530 bytes, Stack size 72 bytes, com_sport.o(i.LoadMotiontTrail))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = LoadMotiontTrail &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadGpsToXY
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
</UL>

<P><STRONG><a name="[3e5]"></a>LoadNavigation</STRONG> (Thumb, 430 bytes, Stack size 56 bytes, com_sport.o(i.LoadNavigation))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = LoadNavigation &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadGpsToXY
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
</UL>

<P><STRONG><a name="[513]"></a>MatAdd</STRONG> (Thumb, 82 bytes, Stack size 12 bytes, algo_matfun.o(i.MatAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = MatAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButterworthFilter1(float, const Mat*, const Mat*, const Mat*, float, Mat*, float*)
</UL>

<P><STRONG><a name="[3ef]"></a>MatCopy</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, algo_matfun.o(i.MatCopy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MatCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatMulMatElementwisePower
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButterworthFilter1(float, const Mat*, const Mat*, const Mat*, float, Mat*, float*)
</UL>

<P><STRONG><a name="[3e8]"></a>MatCreate</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, algo_matfun.o(i.MatCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 492 + Unknown Stack Size
<LI>Call Chain = MatCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParameterInitialization
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatMulMatElementwisePower
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatVar
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatMean
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrokeStyleIdentification
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButterworthFilter1(float, const Mat*, const Mat*, const Mat*, float, Mat*, float*)
</UL>

<P><STRONG><a name="[3eb]"></a>MatDelete</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, algo_matfun.o(i.MatDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = MatDelete &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwimmingAlgorithmsEnd
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatMulMatElementwisePower
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatVar
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatMean
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrokeStyleIdentification
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButterworthFilter1(float, const Mat*, const Mat*, const Mat*, float, Mat*, float*)
</UL>

<P><STRONG><a name="[49c]"></a>MatMax</STRONG> (Thumb, 200 bytes, Stack size 12 bytes, algo_matfun.o(i.MatMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = MatMax
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrokeStyleIdentification
</UL>

<P><STRONG><a name="[3ec]"></a>MatMean</STRONG> (Thumb, 194 bytes, Stack size 40 bytes, algo_matfun.o(i.MatMean))
<BR><BR>[Stack]<UL><LI>Max Depth = 532 + Unknown Stack Size
<LI>Call Chain = MatMean &rArr; MatCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatSum
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatDelete
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatVar
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrokeStyleIdentification
</UL>

<P><STRONG><a name="[49b]"></a>MatMin</STRONG> (Thumb, 200 bytes, Stack size 12 bytes, algo_matfun.o(i.MatMin))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = MatMin
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrokeStyleIdentification
</UL>

<P><STRONG><a name="[512]"></a>MatMul</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, algo_matfun.o(i.MatMul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MatMul
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButterworthFilter1(float, const Mat*, const Mat*, const Mat*, float, Mat*, float*)
</UL>

<P><STRONG><a name="[3f0]"></a>MatMulMatElementwise</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, algo_matfun.o(i.MatMulMatElementwise))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = MatMulMatElementwise
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatMulMatElementwisePower
</UL>

<P><STRONG><a name="[3ee]"></a>MatMulMatElementwisePower</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, algo_matfun.o(i.MatMulMatElementwisePower))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = MatMulMatElementwisePower &rArr; MatCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatMulMatElementwise
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatDelete
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatCreate
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatVar
</UL>

<P><STRONG><a name="[3f2]"></a>MatMulNum</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, algo_matfun.o(i.MatMulNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MatMulNum
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatVar
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButterworthFilter1(float, const Mat*, const Mat*, const Mat*, float, Mat*, float*)
</UL>

<P><STRONG><a name="[407]"></a>MatSetVal</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, algo_matfun.o(i.MatSetVal))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MatSetVal
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParameterInitialization
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrokeStyleIdentification
</UL>

<P><STRONG><a name="[3ed]"></a>MatSum</STRONG> (Thumb, 174 bytes, Stack size 12 bytes, algo_matfun.o(i.MatSum))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = MatSum
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatMean
</UL>

<P><STRONG><a name="[3f1]"></a>MatVar</STRONG> (Thumb, 406 bytes, Stack size 80 bytes, algo_matfun.o(i.MatVar))
<BR><BR>[Stack]<UL><LI>Max Depth = 612 + Unknown Stack Size
<LI>Call Chain = MatVar &rArr; MatMean &rArr; MatCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatMulMatElementwisePower
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatZeros
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatMulNum
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatMean
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatDelete
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrokeStyleIdentification
</UL>

<P><STRONG><a name="[3f3]"></a>MatZeros</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, algo_matfun.o(i.MatZeros))
<BR><BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParameterInitialization
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatVar
</UL>

<P><STRONG><a name="[4cf]"></a>MeanSpeedResult</STRONG> (Thumb, 328 bytes, Stack size 0 bytes, algo_trackoptimizing.o(i.MeanSpeedResult))
<BR><BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[103]"></a>MonthMaxDay</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, bsp_rtc.o(i.MonthMaxDay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MonthMaxDay
</UL>
<BR>[Called By]<UL><LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_date
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddTimetoOffSide
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayMainData_Init
</UL>

<P><STRONG><a name="[3f6]"></a>NMEA_Comma_Pos</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, drv_ublox.o(i.NMEA_Comma_Pos))
<BR><BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPRMC_Analysis
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPGSV_Analysis
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPGSA_Analysis
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPGGA_Analysis
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GBGSV_Analysis
</UL>

<P><STRONG><a name="[3f4]"></a>NMEA_GBGSV_Analysis</STRONG> (Thumb, 436 bytes, Stack size 48 bytes, drv_ublox.o(i.NMEA_GBGSV_Analysis))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = NMEA_GBGSV_Analysis &rArr; NMEA_Str2num &rArr; NMEA_Pow
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Str2num
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Comma_Pos
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
</UL>

<P><STRONG><a name="[3f8]"></a>NMEA_GPGGA_Analysis</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, drv_ublox.o(i.NMEA_GPGGA_Analysis))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = NMEA_GPGGA_Analysis &rArr; NMEA_Str2num &rArr; NMEA_Pow
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Str2num
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Comma_Pos
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
</UL>

<P><STRONG><a name="[3f9]"></a>NMEA_GPGSA_Analysis</STRONG> (Thumb, 272 bytes, Stack size 40 bytes, drv_ublox.o(i.NMEA_GPGSA_Analysis))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = NMEA_GPGSA_Analysis &rArr; NMEA_Str2num &rArr; NMEA_Pow
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Str2num
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Comma_Pos
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
</UL>

<P><STRONG><a name="[3fa]"></a>NMEA_GPGSV_Analysis</STRONG> (Thumb, 390 bytes, Stack size 48 bytes, drv_ublox.o(i.NMEA_GPGSV_Analysis))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = NMEA_GPGSV_Analysis &rArr; NMEA_Str2num &rArr; NMEA_Pow
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Str2num
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Comma_Pos
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
</UL>

<P><STRONG><a name="[3fb]"></a>NMEA_GPRMC_Analysis</STRONG> (Thumb, 724 bytes, Stack size 40 bytes, drv_ublox.o(i.NMEA_GPRMC_Analysis))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = NMEA_GPRMC_Analysis &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_nmea_rmc_data_valid
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Str2num
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Pow
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Comma_Pos
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGNRMCCrc
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
</UL>

<P><STRONG><a name="[3fd]"></a>NMEA_Pow</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, drv_ublox.o(i.NMEA_Pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NMEA_Pow
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Str2num
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPRMC_Analysis
</UL>

<P><STRONG><a name="[3f7]"></a>NMEA_Str2num</STRONG> (Thumb, 234 bytes, Stack size 48 bytes, drv_ublox.o(i.NMEA_Str2num))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = NMEA_Str2num &rArr; NMEA_Pow
</UL>
<BR>[Calls]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_Pow
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPRMC_Analysis
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPGSV_Analysis
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPGSA_Analysis
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPGGA_Analysis
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GBGSV_Analysis
</UL>

<P><STRONG><a name="[46e]"></a>NoGPSSpeedParamInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, algo_trackoptimizing.o(i.NoGPSSpeedParamInit))
<BR><BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportsCalculateDistSpeed
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedOptimizingDataCollection
</UL>

<P><STRONG><a name="[3fe]"></a>OpenSensor</STRONG> (Thumb, 246 bytes, Stack size 8 bytes, task_sport.o(i.OpenSensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 604 + Unknown Stack Size
<LI>Call Chain = OpenSensor &rArr; ParameterInitialization &rArr; MatCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_alarm_interval_set
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_reset
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_status_set
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_status_get
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_dev_para_init
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateGPSTask
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_gyro_init
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_get_stepcount
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_fifo_init
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_sport_cycling_init
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportContinueLaterFlagClr
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParameterInitialization
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_cyclingsta
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SwimSta
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Sport_Altitude
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_start
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_continue_later_end
</UL>

<P><STRONG><a name="[403]"></a>ParameterInitialization</STRONG> (Thumb, 888 bytes, Stack size 104 bytes, algo_hf_swimming_main.o(i.ParameterInitialization))
<BR><BR>[Stack]<UL><LI>Max Depth = 596 + Unknown Stack Size
<LI>Call Chain = ParameterInitialization &rArr; MatCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatZeros
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatSetVal
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatCreate
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSensor
</UL>

<P><STRONG><a name="[408]"></a>PhyParamCalculateDistSpeed</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, algo_trackoptimizing.o(i.PhyParamCalculateDistSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = PhyParamCalculateDistSpeed &rArr; gps_raw_data_rn_receive &rArr; gps_raw_data_process_rn &rArr; calculateDistanceFromPoint &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_sm_data_distance_receive
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_rn_data_sm_receive
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_raw_data_rn_receive
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedOptimizingDataCollection
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhysicalParamCalDataAccept
</UL>

<P><STRONG><a name="[40d]"></a>PhysicalParamCalDataAccept</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, algo_trackoptimizing.o(i.PhysicalParamCalDataAccept))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = PhysicalParamCalDataAccept &rArr; PhyParamCalculateDistSpeed &rArr; gps_raw_data_rn_receive &rArr; gps_raw_data_process_rn &rArr; calculateDistanceFromPoint &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhyParamCalculateDistSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSteptoAlgo
</UL>

<P><STRONG><a name="[2a2]"></a>PhysicalParamCalculateInit</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, algo_trackoptimizing.o(i.PhysicalParamCalculateInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PhysicalParamCalculateInit &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_hint_btn_evt
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDistanceAlgo_VO2maxLactate
</UL>

<P><STRONG><a name="[40e]"></a>ReadCalibrationValueAndConfigAdjValue</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, algo_time_calibration.o(i.ReadCalibrationValueAndConfigAdjValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = ReadCalibrationValueAndConfigAdjValue &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_status_test_evt
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_status_test_paint
</UL>

<P><STRONG><a name="[40f]"></a>ReadSeaLevelPressure</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, com_data.o(i.ReadSeaLevelPressure))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = ReadSeaLevelPressure &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_drv_init
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDayMainData
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
</UL>

<P><STRONG><a name="[410]"></a>ReadySport</STRONG> (Thumb, 334 bytes, Stack size 8 bytes, task_sport.o(i.ReadySport))
<BR><BR>[Stack]<UL><LI>Max Depth = 564 + Unknown Stack Size
<LI>Call Chain = ReadySport &rArr; CreateGPSTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_status_get
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_clearHdrValue
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_value_clear
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateGPSTask
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IsTrainPlanOnGoing
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTrack
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IsInSportMode
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_start
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_btn_evt
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_sport_today_hint_btn_evt
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_run_select_btn_evt
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_home_today_hint_btn_evt
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_btn_evt
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_btn_evt
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_detail_btn_evt
</UL>

<P><STRONG><a name="[413]"></a>ReadySportBack</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, task_sport.o(i.ReadySportBack))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ReadySportBack &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IsTrainPlanOnGoing
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IsInSportMode
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_btn_evt
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_sport_today_hint_btn_evt
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_run_select_btn_evt
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_home_today_hint_btn_evt
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_btn_evt
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_ready_btn_evt
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_ready_btn_evt
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_btn_evt
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_btn_evt
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_btn_evt
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_btn_evt
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_btn_evt
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_btn_evt
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
</UL>

<P><STRONG><a name="[414]"></a>Remind_Altitude</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, com_sport.o(i.Remind_Altitude))
<BR><BR>[Stack]<UL><LI>Max Depth = 532 + Unknown Stack Size
<LI>Call Chain = Remind_Altitude &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[4d1]"></a>Remind_CircleDistance</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, com_sport.o(i.Remind_CircleDistance))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Remind_CircleDistance
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[418]"></a>Remind_DailyKcal</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, com_sport.o(i.Remind_DailyKcal))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = Remind_DailyKcal &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
</UL>

<P><STRONG><a name="[419]"></a>Remind_DailyStep</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, com_sport.o(i.Remind_DailyStep))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = Remind_DailyStep &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
</UL>

<P><STRONG><a name="[41a]"></a>Remind_GoalCircle</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, com_sport.o(i.Remind_GoalCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 532 + Unknown Stack Size
<LI>Call Chain = Remind_GoalCircle &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[41b]"></a>Remind_GoalDistance</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, com_sport.o(i.Remind_GoalDistance))
<BR><BR>[Stack]<UL><LI>Max Depth = 532 + Unknown Stack Size
<LI>Call Chain = Remind_GoalDistance &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[41c]"></a>Remind_GoalKcal</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, com_sport.o(i.Remind_GoalKcal))
<BR><BR>[Stack]<UL><LI>Max Depth = 532 + Unknown Stack Size
<LI>Call Chain = Remind_GoalKcal &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[41d]"></a>Remind_GoalTime</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, com_sport.o(i.Remind_GoalTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 532 + Unknown Stack Size
<LI>Call Chain = Remind_GoalTime &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[41e]"></a>Remind_Heartrate</STRONG> (Thumb, 306 bytes, Stack size 24 bytes, com_sport.o(i.Remind_Heartrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = Remind_Heartrate &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[422]"></a>Remind_Pace</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, com_sport.o(i.Remind_Pace))
<BR><BR>[Stack]<UL><LI>Max Depth = 532 + Unknown Stack Size
<LI>Call Chain = Remind_Pace &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[423]"></a>Remind_Pace_TrainPlan</STRONG> (Thumb, 620 bytes, Stack size 40 bytes, com_sport.o(i.Remind_Pace_TrainPlan))
<BR><BR>[Stack]<UL><LI>Max Depth = 636 + Unknown Stack Size
<LI>Call Chain = Remind_Pace_TrainPlan &rArr; get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trainplan_valid_flag
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_TodayTimeTrainPlan
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IsTrainPlanOnGoing
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanType
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IsCompleteTodayTrainPlan
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Intervals_TrainPlan_Single_Distance
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[427]"></a>Remind_Speed</STRONG> (Thumb, 202 bytes, Stack size 32 bytes, com_sport.o(i.Remind_Speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 532 + Unknown Stack Size
<LI>Call Chain = Remind_Speed &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[428]"></a>Remind_Sport_Init</STRONG> (Thumb, 116 bytes, Stack size 4 bytes, com_sport.o(i.Remind_Sport_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Remind_Sport_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IsTrainPlanOnGoing
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanType
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
</UL>

<P><STRONG><a name="[4f9]"></a>Remind_TodayTrainPlan</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, com_sport.o(i.Remind_TodayTrainPlan))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
</UL>

<P><STRONG><a name="[429]"></a>Remind_TrainPlan_Complete</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, com_sport.o(i.Remind_TrainPlan_Complete))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = Remind_TrainPlan_Complete &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[42a]"></a>RenewOneDay</STRONG> (Thumb, 340 bytes, Stack size 32 bytes, com_data.o(i.RenewOneDay))
<BR><BR>[Stack]<UL><LI>Max Depth = 772<LI>Call Chain = RenewOneDay &rArr; Get_TrainPlanDayRecord &rArr; get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_init
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_SetData
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trainplan_valid_flag
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanDayRecord
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_CommonEnergy
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_day_steps_reinit
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_all_day_time
</UL>
<BR>[Called By]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SatelliteTime
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_current_time_write
</UL>

<P><STRONG><a name="[109]"></a>ResetTimerB2</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, bsp_timer.o(i.ResetTimerB2))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ResetTimerB2 &rArr; am_hal_ctimer_period_set
</UL>
<BR>[Calls]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_stop
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_start
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_period_set
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTimerB2TickHandler
</UL>

<P><STRONG><a name="[431]"></a>Reset_TimeCalibration</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, algo_time_calibration.o(i.Reset_TimeCalibration))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = Reset_TimeCalibration &rArr; dev_extFlash_erase &rArr; drv_extFlash_sector_erase &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_GpsFirstTimingStatus
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CALRC_Config
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_status_test_evt
</UL>

<P><STRONG><a name="[434]"></a>RtcToUtc</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, bsp_rtc.o(i.RtcToUtc))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = RtcToUtc &rArr; GetTimeSecond &rArr; mktime &rArr; _tm_carry
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetYmdhms
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeSecond
</UL>
<BR>[Called By]<UL><LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_is_offline_data_in_flash_uptodate
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_offline_ephemeris
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_utc_time_set
</UL>

<P><STRONG><a name="[435]"></a>SEGGER_RTT_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, segger_rtt.o(i.SEGGER_RTT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SEGGER_RTT_Init &rArr; _DoInit &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtt_init
</UL>

<P><STRONG><a name="[437]"></a>SEGGER_RTT_Write</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, segger_rtt.o(i.SEGGER_RTT_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
</UL>

<P><STRONG><a name="[438]"></a>SEGGER_RTT_WriteNoLock</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, segger_rtt.o(i.SEGGER_RTT_WriteNoLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteNoCheck
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteBlocking
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetAvailWriteSpace
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>

<P><STRONG><a name="[107]"></a>SEGGER_RTT_printf</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, segger_rtt_printf.o(i.SEGGER_RTT_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_init
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_power_off_store_set_value
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_timer_init
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSport
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateStepTask
<LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_tasks
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtt_init
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_disable
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTimerB2TickHandler
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTimerB2
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupTimerB2
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_uninit
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_cb
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_is_offline_data_in_flash_uptodate
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_reset_rtc
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_offline_ephemeris
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_hotstart
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_clodstart
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_VTG
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_RXM_SAVE
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_RMC
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GSV
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GSA
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GNSS
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GLL
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GGA
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPRMC_Analysis
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_btn_evt
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_detail_btn_evt
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_info_btn_evt
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_btn_evt
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_menu_btn_evt
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_stable_btn_evt
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_average_based_btn_evt
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_sports_btn_evt
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_btn_evt
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostSettings_btn_evt
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rtc_flag_reg_read
<LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_pc_uninit
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_pc_init
<LI><a href="#[956]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_task_init
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTools
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_acc_gyro_clear_fifo
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseStepTask
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_task_start
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_close
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_paint
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_paint
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_paint
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motionsrecord_last_paint
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_menu_paint
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_tools_paint
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_sports_paint
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_mac_write
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_mac_read
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_read
<LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_font_read
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_get_watch_face_info
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_flash_write_raw
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_flash_read_raw
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_flash_erase_raw
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_event_handle
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_alarm_handler
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_uninit
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_stop
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_start
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParameterInitialization
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSportTask
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSport
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSensor
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSportRecord
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_start
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_utf8_gbk
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_utf16_gbk
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_timer_stop
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_weekmain_max_distance
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_info_init
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_weekmain_max_steps
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sidebar_step_paint
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_histogram_step_paint
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_histogram_hdr_paint
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSportDetail
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_timer_start
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_display
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_start_init
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_fault_handler
</UL>

<P><STRONG><a name="[43c]"></a>SEGGER_RTT_vprintf</STRONG> (Thumb, 522 bytes, Stack size 136 bytes, segger_rtt_printf.o(i.SEGGER_RTT_vprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintInt
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>

<P><STRONG><a name="[440]"></a>SatelliteTime</STRONG> (Thumb, 294 bytes, Stack size 192 bytes, drv_ublox.o(i.SatelliteTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 964<LI>Call Chain = SatelliteTime &rArr; RenewOneDay &rArr; Get_TrainPlanDayRecord &rArr; get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_set
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_Leap_Year
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CaculateWeekDay
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RenewOneDay
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
</UL>

<P><STRONG><a name="[441]"></a>SaveGpsToXY</STRONG> (Thumb, 690 bytes, Stack size 88 bytes, com_sport.o(i.SaveGpsToXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = SaveGpsToXY &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSport
</UL>

<P><STRONG><a name="[134]"></a>SaveSport</STRONG> (Thumb, 1344 bytes, Stack size 168 bytes, task_sport.o(i.SaveSport))
<BR><BR>[Stack]<UL><LI>Max Depth = 952<LI>Call Chain = SaveSport &rArr; sport_data_end &rArr; sport_data_input &rArr; TrackOptimizingDataAccept &rArr; SportsCalculateDistSpeed &rArr; gps_raw_data_rn_receive &rArr; gps_raw_data_process_rn &rArr; calculateDistanceFromPoint &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetYmdhms
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeSecond
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_SetData
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_boot_setting_read
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_status_set
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_status_get
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_data_get
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IsCompleteTodayTrainPlan
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveGpsToXY
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateSpeed
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateRecoveryTime
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_triathlon_cancel
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSportRecord
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationStackOverflowHook
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSport
</UL>

<P><STRONG><a name="[16a]"></a>Send_Timer_Cmd</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, task_timer.o(i.Send_Timer_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Send_Timer_Cmd &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsTrack
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_btn_load
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cloud_navigation_load
</UL>

<P><STRONG><a name="[3be]"></a>Sensor_IO_Read</STRONG> (Thumb, 80 bytes, Stack size 64 bytes, drv_lsm6dsl.o(i.Sensor_IO_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = Sensor_IO_Read &rArr; am_hal_iom_i2c_read &rArr; am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_read
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_enable
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_disable
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>

<P><STRONG><a name="[3d4]"></a>Sensor_IO_Write</STRONG> (Thumb, 78 bytes, Stack size 64 bytes, drv_lsm6dsl.o(i.Sensor_IO_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_enable
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_disable
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_WriteReg
</UL>

<P><STRONG><a name="[84d]"></a>SetCalDistanceStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_step.o(i.SetCalDistanceStatus))
<BR><BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_hint_btn_evt
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_confirm_save_btn_evt
</UL>

<P><STRONG><a name="[7e4]"></a>SetSubjectiveEvaluate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, com_sport.o(i.SetSubjectiveEvaluate))
<BR><BR>[Called By]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_feel_btn_evt
</UL>

<P><STRONG><a name="[686]"></a>Set_Curr_Home_Num</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_home.o(i.Set_Curr_Home_Num))
<BR><BR>[Called By]<UL><LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_data_init
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_paint
</UL>

<P><STRONG><a name="[278]"></a>Set_Curr_Sport_Index</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gui_sport.o(i.Set_Curr_Sport_Index))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Sport_Index
</UL>

<P><STRONG><a name="[782]"></a>Set_Curr_Tool_Index</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, gui_tool.o(i.Set_Curr_Tool_Index))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
</UL>

<P><STRONG><a name="[433]"></a>Set_GpsFirstTimingStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, algo_time_calibration.o(i.Set_GpsFirstTimingStatus))
<BR><BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_TimeCalibration
</UL>

<P><STRONG><a name="[28e]"></a>Set_IsCompleteTodayTrainPlan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, com_sport.o(i.Set_IsCompleteTodayTrainPlan))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSport
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_is_complete_btn_evt
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanDayRecord
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[137]"></a>Set_IsInSportMode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task_sport.o(i.Set_IsInSportMode))
<BR><BR>[Called By]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySportBack
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySport
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSportTask
</UL>

<P><STRONG><a name="[138]"></a>Set_IsTrainPlanOnGoing</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, com_sport.o(i.Set_IsTrainPlanOnGoing))
<BR><BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_sport_today_hint_btn_evt
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_run_select_btn_evt
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_is_complete_btn_evt
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_home_today_hint_btn_evt
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_ready_btn_evt
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_btn_evt
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySportBack
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySport
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSportTask
</UL>

<P><STRONG><a name="[131]"></a>Set_PauseSta</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, task_sport.o(i.Set_PauseSta))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Set_PauseSta
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_get_stepcount
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_pause_btn_evt
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_btn_evt
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_btn_evt
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_second_change_btn_evt
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_ready_btn_evt
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_btn_evt
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_pause_btn_evt
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_first_change_btn_evt
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_ready_btn_evt
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_btn_evt
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_pause_btn_evt
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_btn_evt
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_pause_btn_evt
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_btn_evt
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_pause_btn_evt
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_btn_evt
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_pause_btn_evt
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_btn_evt
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_pause_btn_evt
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_btn_evt
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_pause_btn_evt
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_btn_evt
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_pause_btn_evt
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_btn_evt
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_pause_btn_evt
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_btn_evt
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_triathlon_change_start
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSport
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_evt
<LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_swich
</UL>

<P><STRONG><a name="[66a]"></a>Set_SaveSta</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task_sport.o(i.Set_SaveSta))
<BR><BR>[Called By]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_cancel_btn_evt
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_btn_evt
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_pause_btn_evt
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cancel_btn_evt
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_cancel_btn_evt
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_cancel_btn_evt
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_cancel_btn_evt
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_cancel_btn_evt
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_cancel_btn_evt
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_recovery_btn_evt
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_feel_btn_evt
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_cancel_btn_evt
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_cancel_btn_evt
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_cancel_btn_evt
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_btn_evt
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_triathlon_change_start
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_heartrate_recovery
</UL>

<P><STRONG><a name="[685]"></a>Set_Select_Home_Index</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui_home.o(i.Set_Select_Home_Index))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Set_Select_Home_Index
</UL>
<BR>[Called By]<UL><LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_data_init
</UL>

<P><STRONG><a name="[451]"></a>Set_Select_Sport_Index</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, gui_sport.o(i.Set_Select_Sport_Index))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Set_Select_Sport_Index
</UL>
<BR>[Calls]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_custom_sport
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
</UL>

<P><STRONG><a name="[453]"></a>Set_Select_Tool_Index</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, gui_tool.o(i.Set_Select_Tool_Index))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Set_Select_Tool_Index
</UL>
<BR>[Calls]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_custom_tool
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
</UL>

<P><STRONG><a name="[12a]"></a>Set_SwimSta</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task_sport.o(i.Set_SwimSta))
<BR><BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSensor
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSport
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSensor
</UL>

<P><STRONG><a name="[47e]"></a>Set_TaskSportSta</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task_sport.o(i.Set_TaskSportSta))
<BR><BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
</UL>

<P><STRONG><a name="[85b]"></a>Set_TimeCalibrationStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, algo_time_calibration.o(i.Set_TimeCalibrationStatus))
<BR><BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_status_test_evt
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_status_test_paint
</UL>

<P><STRONG><a name="[640]"></a>Set_TrainPlan_Notify_IsOpen</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, com_data.o(i.Set_TrainPlan_Notify_IsOpen))
<BR><BR>[Called By]<UL><LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_notify_switch
</UL>

<P><STRONG><a name="[165]"></a>SetupTimerB2</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, bsp_timer.o(i.SetupTimerB2))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = SetupTimerB2 &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_stop
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_start
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_period_set
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_int_register
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_int_enable
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_config_single
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_realtime_difftime_evt
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_status_test_evt
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_auto_back_home_btn_evt
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostSettings_btn_evt
</UL>

<P><STRONG><a name="[458]"></a>ShareTrackDataEraseFlash</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gui_tool_gps.o(i.ShareTrackDataEraseFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = ShareTrackDataEraseFlash &rArr; dev_extFlash_erase &rArr; drv_extFlash_sector_erase &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_del_btn_evt
</UL>

<P><STRONG><a name="[459]"></a>ShareTrackDataGetFlash</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gui_tool_gps.o(i.ShareTrackDataGetFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = ShareTrackDataGetFlash &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShareTrackDataTraverse
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShareTrackDataNUMTraverse
</UL>

<P><STRONG><a name="[45a]"></a>ShareTrackDataNUMTraverse</STRONG> (Thumb, 60 bytes, Stack size 152 bytes, gui_tool_gps.o(i.ShareTrackDataNUMTraverse))
<BR><BR>[Stack]<UL><LI>Max Depth = 620<LI>Call Chain = ShareTrackDataNUMTraverse &rArr; ShareTrackDataGetFlash &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShareTrackDataGetFlash
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsShareTrackDataValid
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_del_btn_evt
</UL>

<P><STRONG><a name="[45c]"></a>ShareTrackDataTraverse</STRONG> (Thumb, 114 bytes, Stack size 168 bytes, gui_tool_gps.o(i.ShareTrackDataTraverse))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = ShareTrackDataTraverse &rArr; ShareTrackDataGetFlash &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShareTrackDataGetFlash
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsShareTrackDataValid
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_del_btn_evt
</UL>

<P><STRONG><a name="[45d]"></a>Si117xBlockRead</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, si117x_functions.o(i.Si117xBlockRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = Si117xBlockRead &rArr; drv_i2c_hw1_read &rArr; am_hal_iom_i2c_read &rArr; am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_read
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xReadFifo
</UL>

<P><STRONG><a name="[45f]"></a>Si117xFlushFIFO</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, si117x_functions.o(i.Si117xFlushFIFO))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = Si117xFlushFIFO &rArr; _sendCmd &rArr; Si117xWriteToRegister &rArr; drv_i2c_hw1_write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sendCmd
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xWriteToRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117x_Start
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xReadFifo
</UL>

<P><STRONG><a name="[462]"></a>Si117xGetIrqStatus</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, si117x_functions.o(i.Si117xGetIrqStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = Si117xGetIrqStatus &rArr; _sendCmd &rArr; Si117xWriteToRegister &rArr; drv_i2c_hw1_write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sendCmd
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xWriteToRegister
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xReadFromRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear1171int
</UL>

<P><STRONG><a name="[464]"></a>Si117xParamSet</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, si117x_functions.o(i.Si117xParamSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = Si117xParamSet &rArr; _sendCmd &rArr; Si117xWriteToRegister &rArr; drv_i2c_hw1_write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sendCmd
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xWriteToRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117x_Start
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setOhrcurrent
</UL>

<P><STRONG><a name="[29c]"></a>Si117xReadFifo</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, si117x_config.o(i.Si117xReadFifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = Si117xReadFifo &rArr; Si117xUpdateFifoCount &rArr; _sendCmd &rArr; Si117xWriteToRegister &rArr; drv_i2c_hw1_write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xUpdateFifoCount
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xFlushFIFO
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xBlockRead
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartRateMonitor_interrupt_handle
</UL>

<P><STRONG><a name="[463]"></a>Si117xReadFromRegister</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, si117x_functions.o(i.Si117xReadFromRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = Si117xReadFromRegister &rArr; drv_i2c_hw1_read &rArr; am_hal_iom_i2c_read &rArr; am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_read
</UL>
<BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117x_checkstart
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117x_Start
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sendCmd
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xUpdateFifoCount
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xGetIrqStatus
</UL>

<P><STRONG><a name="[466]"></a>Si117xSendCmd</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, si117x_functions.o(i.Si117xSendCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = Si117xSendCmd &rArr; _sendCmd &rArr; Si117xWriteToRegister &rArr; drv_i2c_hw1_write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117x_Start
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear1171int
</UL>

<P><STRONG><a name="[467]"></a>Si117xStart</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, si117x_functions.o(i.Si117xStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = Si117xStart &rArr; _sendCmd &rArr; Si117xWriteToRegister &rArr; drv_i2c_hw1_write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117x_Start
</UL>

<P><STRONG><a name="[468]"></a>Si117xStop</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, si117x_functions.o(i.Si117xStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = Si117xStop &rArr; _sendCmd &rArr; Si117xWriteToRegister &rArr; drv_i2c_hw1_write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117x_Stop
</UL>

<P><STRONG><a name="[465]"></a>Si117xUpdateFifoCount</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, si117x_functions.o(i.Si117xUpdateFifoCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = Si117xUpdateFifoCount &rArr; _sendCmd &rArr; Si117xWriteToRegister &rArr; drv_i2c_hw1_write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sendCmd
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xReadFromRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xReadFifo
</UL>

<P><STRONG><a name="[460]"></a>Si117xWriteToRegister</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, si117x_functions.o(i.Si117xWriteToRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = Si117xWriteToRegister &rArr; drv_i2c_hw1_write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_write
</UL>
<BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117x_Start
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sendCmd
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xParamSet
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xGetIrqStatus
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xFlushFIFO
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear1171int
</UL>

<P><STRONG><a name="[46a]"></a>Si117x_Start</STRONG> (Thumb, 458 bytes, Stack size 24 bytes, si117x_config.o(i.Si117x_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = Si117x_Start &rArr; Si117xParamSet &rArr; _sendCmd &rArr; Si117xWriteToRegister &rArr; drv_i2c_hw1_write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xWriteToRegister
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xStart
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xSendCmd
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xReadFromRegister
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xParamSet
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xFlushFIFO
</UL>
<BR>[Called By]<UL><LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_restart
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_enable
</UL>

<P><STRONG><a name="[46b]"></a>Si117x_Stop</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, si117x_config.o(i.Si117x_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = Si117x_Stop &rArr; clear1171int &rArr; Si117xGetIrqStatus &rArr; _sendCmd &rArr; Si117xWriteToRegister &rArr; drv_i2c_hw1_write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xStop
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear1171int
</UL>
<BR>[Called By]<UL><LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_suspend
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_disable
</UL>

<P><STRONG><a name="[46c]"></a>Si117x_checkstart</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, si117x_config.o(i.Si117x_checkstart))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = Si117x_checkstart &rArr; Si117xReadFromRegister &rArr; drv_i2c_hw1_read &rArr; am_hal_iom_i2c_read &rArr; am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xReadFromRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_all_auto_test
</UL>

<P><STRONG><a name="[40a]"></a>SpeedOptimizingDataCollection</STRONG> (Thumb, 1924 bytes, Stack size 64 bytes, algo_trackoptimizing.o(i.SpeedOptimizingDataCollection))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = SpeedOptimizingDataCollection &rArr; GpsDistance &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;track_bubble_sort
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoGPSSpeedParamInit
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportsCalculateDistSpeed
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhyParamCalculateDistSpeed
</UL>

<P><STRONG><a name="[4ac]"></a>SpeedResult</STRONG> (Thumb, 354 bytes, Stack size 0 bytes, algo_trackoptimizing.o(i.SpeedResult))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minuteMeanSpeedCalculate
</UL>

<P><STRONG><a name="[46f]"></a>SportContinueLaterDisplay</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, gui_sport.o(i.SportContinueLaterDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 628 + Unknown Stack Size
<LI>Call Chain = SportContinueLaterDisplay &rArr; sport_continue_later_end &rArr; OpenSensor &rArr; ParameterInitialization &rArr; MatCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_continue_later_end
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Sport_Index
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_btn_evt
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_sport_today_hint_btn_evt
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_run_select_btn_evt
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_home_today_hint_btn_evt
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_end_unfinished_sport_hint_btn_evt
</UL>

<P><STRONG><a name="[3ff]"></a>SportContinueLaterFlagClr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_sport.o(i.SportContinueLaterFlagClr))
<BR><BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_btn_evt
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_continue_later_end
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSensor
</UL>

<P><STRONG><a name="[931]"></a>SportContinueLaterFlagSet</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_sport.o(i.SportContinueLaterFlagSet))
<BR><BR>[Called By]<UL><LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_continue_later_start
</UL>

<P><STRONG><a name="[471]"></a>SportIndexRecAdjust</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui_sport.o(i.SportIndexRecAdjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SportIndexRecAdjust &rArr; sports_menu_index_record &rArr; Get_Curr_Sport_Index
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_menu_index_record
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
</UL>

<P><STRONG><a name="[472]"></a>SportsCalculateDistSpeed</STRONG> (Thumb, 2614 bytes, Stack size 64 bytes, algo_trackoptimizing.o(i.SportsCalculateDistSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 600<LI>Call Chain = SportsCalculateDistSpeed &rArr; gps_raw_data_rn_receive &rArr; gps_raw_data_process_rn &rArr; calculateDistanceFromPoint &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;staticjudgment_cycling_result
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minuteMeanSpeedCalculate
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_sm_data_kf_receive
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_sm_data_distance_receive
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_rn_data_sm_receive
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_raw_data_rn_receive
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_exception
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StaticJudgment
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedOptimizingDataCollection
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoGPSSpeedParamInit
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackOptimizingDataAccept
</UL>

<P><STRONG><a name="[478]"></a>StartSport</STRONG> (Thumb, 1574 bytes, Stack size 48 bytes, task_sport.o(i.StartSport))
<BR><BR>[Stack]<UL><LI>Max Depth = 644 + Unknown Stack Size
<LI>Call Chain = StartSport &rArr; trace_back_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_alarm_interval_set
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_reset
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_dev_para_init
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSeaLevelPressure
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_task_close
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_gyro_init
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_get_stepcount
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_fifo_init
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_back_timer_start
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeout_back_stop
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kf_initial
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_sport_cycling_init
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackOptimizingInit
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Sport_Init
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParameterInitialization
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateAltitude
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_cyclingsta
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_TaskSportSta
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SwimSta
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Sport_Altitude
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatSportTask
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSportRecord
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_btn_evt
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_ready_btn_evt
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_btn_evt
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_btn_evt
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_btn_evt
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_btn_evt
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_btn_evt
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_btn_evt
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_triathlon_change_start
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_start_init
</UL>

<P><STRONG><a name="[473]"></a>StaticJudgment</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, algo_trackoptimizing.o(i.StaticJudgment))
<BR><BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportsCalculateDistSpeed
</UL>

<P><STRONG><a name="[47f]"></a>StopTimerB2</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bsp_timer.o(i.StopTimerB2))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = StopTimerB2 &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_realtime_test_evt
</UL>

<P><STRONG><a name="[480]"></a>StoreDayMainData</STRONG> (Thumb, 284 bytes, Stack size 8 bytes, com_data.o(i.StoreDayMainData))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = StoreDayMainData &rArr; com_dial_festival_init &rArr; com_dial_festival_is_valid &rArr; com_dial_is_valid &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_SetData
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSeaLevelPressure
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_AmbientData
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_weekSteps
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_festival_init
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_day_steps_clear
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimetoClearStepCount
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_all_day_time
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_DayMainData
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[486]"></a>StoreTrackPoint</STRONG> (Thumb, 256 bytes, Stack size 32 bytes, com_sport.o(i.StoreTrackPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = StoreTrackPoint &rArr; transform &rArr; transformLat &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsStatus
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsLon
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsLat
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[105]"></a>Store_AmbientData</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, com_data.o(i.Store_AmbientData))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = Store_AmbientData &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_power_off_store_set_value
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDayMainData
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AmbientData_Init
</UL>

<P><STRONG><a name="[487]"></a>Store_AuotCirclle</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, com_sport.o(i.Store_AuotCirclle))
<BR><BR>[Stack]<UL><LI>Max Depth = 548<LI>Call Chain = Store_AuotCirclle &rArr; Store_KiloMeter &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_CircleTimeData
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_KiloMeter
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[488]"></a>Store_CircleTimeData</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, com_sport.o(i.Store_CircleTimeData))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = Store_CircleTimeData &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_AuotCirclle
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[48b]"></a>Store_DistanceData</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, com_sport.o(i.Store_DistanceData))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = Store_DistanceData &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[48c]"></a>Store_DotTrack</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, com_sport.o(i.Store_DotTrack))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = Store_DotTrack &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_dottrack
</UL>

<P><STRONG><a name="[48d]"></a>Store_EnergyData</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, com_sport.o(i.Store_EnergyData))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = Store_EnergyData &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[48e]"></a>Store_GPSData</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, com_sport.o(i.Store_GPSData))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = Store_GPSData &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_store_gpsdata
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
</UL>

<P><STRONG><a name="[4d6]"></a>Store_HeartRateData</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, com_sport.o(i.Store_HeartRateData))
<BR><BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[489]"></a>Store_KiloMeter</STRONG> (Thumb, 252 bytes, Stack size 32 bytes, com_sport.o(i.Store_KiloMeter))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = Store_KiloMeter &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsLon
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsLat
</UL>
<BR>[Called By]<UL><LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_AuotCirclle
</UL>

<P><STRONG><a name="[42b]"></a>Store_SetData</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, com_data.o(i.Store_SetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = Store_SetData &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_power_off_store_set_value
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSport
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RenewOneDay
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDayMainData
</UL>

<P><STRONG><a name="[48f]"></a>Store_SpeedData</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, com_sport.o(i.Store_SpeedData))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = Store_SpeedData &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[4d5]"></a>Store_StepData</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, com_sport.o(i.Store_StepData))
<BR><BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[490]"></a>Store_TranPlanUploadData</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, com_data.o(i.Store_TranPlanUploadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = Store_TranPlanUploadData &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanType
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SomeDayofTrainPlan
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IsCompleteTodayTrainPlan
</UL>
<BR>[Called By]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_is_complete_btn_evt
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_feel_btn_evt
</UL>

<P><STRONG><a name="[491]"></a>Store_all_day_steps</STRONG> (Thumb, 408 bytes, Stack size 48 bytes, com_data.o(i.Store_all_day_steps))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = Store_all_day_steps &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalEnergy
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_filt_stepcount
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalDistance
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_day_steps_reinit
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[153]"></a>Store_all_day_time</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, com_data.o(i.Store_all_day_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = Store_all_day_time &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RenewOneDay
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDayMainData
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_all_day_steps
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayMainData_Init
</UL>

<P><STRONG><a name="[492]"></a>Store_cod_HeartRateData</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, com_sport.o(i.Store_cod_HeartRateData))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = Store_cod_HeartRateData &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[493]"></a>Store_cod_StepData</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, com_sport.o(i.Store_cod_StepData))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = Store_cod_StepData &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[494]"></a>Stores_Stroke</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, com_sport.o(i.Stores_Stroke))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = Stores_Stroke &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeSecond
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[495]"></a>StrokeCount</STRONG> (Thumb, 158 bytes, Stack size 36 bytes, algo_hf_swimming_main.o(i.StrokeCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = StrokeCount &rArr; StrokeCount2 &rArr; StrokeCount1
</UL>
<BR>[Calls]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrokeCount2
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrokeCount1
</UL>
<BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwimmingAlgorithmsAll
</UL>

<P><STRONG><a name="[496]"></a>StrokeCount1</STRONG> (Thumb, 210 bytes, Stack size 12 bytes, algo_hf_swimming_main.o(i.StrokeCount1))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = StrokeCount1
</UL>
<BR>[Called By]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrokeCount2
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrokeCount
</UL>

<P><STRONG><a name="[497]"></a>StrokeCount2</STRONG> (Thumb, 40 bytes, Stack size 20 bytes, algo_hf_swimming_main.o(i.StrokeCount2))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = StrokeCount2 &rArr; StrokeCount1
</UL>
<BR>[Calls]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrokeCount1
</UL>
<BR>[Called By]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrokeCount
</UL>

<P><STRONG><a name="[498]"></a>StrokeStyleIdentification</STRONG> (Thumb, 1764 bytes, Stack size 368 bytes, algo_hf_swimming_main.o(i.StrokeStyleIdentification))
<BR><BR>[Stack]<UL><LI>Max Depth = 980 + Unknown Stack Size
<LI>Call Chain = StrokeStyleIdentification &rArr; MatVar &rArr; MatMean &rArr; MatCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VecMagnitude
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatVar
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatSetVal
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatMin
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatMean
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatMax
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatDelete
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatCreate
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Deg2Rad(float)
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DecisionTree_C45(Mat*, Mat*, Mat*, Mat*, Mat*, Mat*, Mat*, Mat*, Mat*, Mat*, Mat*, Mat*, Mat*, Mat*)
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwimmingAlgorithmsAll
</UL>

<P><STRONG><a name="[4d9]"></a>SwimResultsOutputPort1_StrokeCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, algo_hf_swimming_main.o(i.SwimResultsOutputPort1_StrokeCount))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[4da]"></a>SwimResultsOutputPort2_LengthCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, algo_hf_swimming_main.o(i.SwimResultsOutputPort2_LengthCount))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[4db]"></a>SwimResultsOutputPort3_SwimmingStyle</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, algo_hf_swimming_main.o(i.SwimResultsOutputPort3_SwimmingStyle))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[49e]"></a>SwimResultsPostProcessing</STRONG> (Thumb, 88 bytes, Stack size 56 bytes, algo_hf_swimming_main.o(i.SwimResultsPostProcessing))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = SwimResultsPostProcessing &rArr; LengthCountPostProcessing
</UL>
<BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LengthCountPostProcessing
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
</UL>

<P><STRONG><a name="[4a0]"></a>SwimmingAlgorithmsAll</STRONG> (Thumb, 506 bytes, Stack size 232 bytes, algo_hf_swimming_main.o(i.SwimmingAlgorithmsAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 1212 + Unknown Stack Size
<LI>Call Chain = SwimmingAlgorithmsAll &rArr; StrokeStyleIdentification &rArr; MatVar &rArr; MatMean &rArr; MatCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrokeStyleIdentification
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrokeCount
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LengthCount
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RawDataPreprocessor(short*, Mat*, Mat*)
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwimDataFilter1(const Mat*, const Mat*, const Mat*, const Mat*, const Mat*, float, Mat*, float*, Mat*, float*, Mat*, float*, Mat*, float*, Mat*, float*, Mat*, float*, Mat*, Mat*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_swim_acc_fifo__data
</UL>

<P><STRONG><a name="[12d]"></a>SwimmingAlgorithmsEnd</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, algo_hf_swimming_main.o(i.SwimmingAlgorithmsEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SwimmingAlgorithmsEnd &rArr; MatDelete &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSport
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSensor
</UL>

<P><STRONG><a name="[3b]"></a>TaskDisplay</STRONG> (Thumb, 1574 bytes, Stack size 232 bytes, task_display.o(i.TaskDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 2244 + Unknown Stack Size
<LI>Call Chain = TaskDisplay &rArr; DisplayScreen &rArr; gui_motion_trail_paint &rArr; gui_sports_data_detail_options_paint &rArr; gui_sports_record_data_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplaySomeLine
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Poweron
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_adc_enable
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_auto_back_home_start
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_auto_back_home
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_getHdrValue
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_task_start
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_compass_angle_get
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_ambient_value_get
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_close
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_sw_hint_paint
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_up_down_paint
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_inter_paint
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_time
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_paint
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_button
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_gps_paint
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_paint
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_cali_paint
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_value
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_realtime_test_paint
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_paint
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_week_steps_paint
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_week_mileage_paint
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_paint
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_show_paint
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_hdr_time_paint
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_mesuring_paint
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_stable_paint
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_paint
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_paint
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_mesuring_paint
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_countdown_paint
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trainplan_valid_flag
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_stable_heartrate
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_all_day_steps
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDayMainData
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedResult
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Timer_Cmd
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanDayRecord
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_CommonEnergy
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DistanceResult
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostHdr_SNR
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostHdr
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_value_get
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task_display.o(i.CreatDisplayTask)
</UL>
<P><STRONG><a name="[3e]"></a>TaskGPSTime</STRONG> (Thumb, 1286 bytes, Stack size 1224 bytes, task_gps.o(i.TaskGPSTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 2240 + Unknown Stack Size
<LI>Call Chain = TaskGPSTime &rArr; vTaskSuspend &rArr; vTaskSwitchContext &rArr; vApplicationStackOverflowHook &rArr; SaveSport &rArr; sport_data_end &rArr; sport_data_input &rArr; TrackOptimizingDataAccept &rArr; SportsCalculateDistSpeed &rArr; gps_raw_data_rn_receive &rArr; gps_raw_data_process_rn &rArr; calculateDistanceFromPoint &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_receive_buffered
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_status_set
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_status_get
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_read
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweron
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweroff
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_enable
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_disable
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_REVERT
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_idle
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_backup_data_save
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SatelliteTime
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPRMC_Analysis
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPGSV_Analysis
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPGSA_Analysis
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPGGA_Analysis
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GBGSV_Analysis
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSteptoAlgo
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_gps_flicker
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_send_gps_test_data
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSportReady
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSportMode
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCalDistanceStatus
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_init
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_gps_hint_motor_flag
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gps_hint_motor_flag
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsStatus
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseGPSTask
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task_gps.o(i.CreateGPSTask)
</UL>
<P><STRONG><a name="[40]"></a>TaskKey</STRONG> (Thumb, 456 bytes, Stack size 16 bytes, task_key.o(i.TaskKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 1420 + Unknown Stack Size
<LI>Call Chain = TaskKey &rArr; KeyEventHandler &rArr; gui_hwt_btn_evt &rArr; gui_hwt_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_power_off_store_set_value
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_enable
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_disable
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_keytone_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_backlight_stop
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_backlight_is_enable
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pon
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandlerScreenSportRecord
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandlerScreenAutoBackHome
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_backlight_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task_key.o(i.CreateKeyTask)
</UL>
<P><STRONG><a name="[3c]"></a>TaskSport</STRONG> (Thumb, 8338 bytes, Stack size 80 bytes, task_sport.o(i.TaskSport))
<BR><BR>[Stack]<UL><LI>Max Depth = 1796 + Unknown Stack Size
<LI>Call Chain = TaskSport &rArr; magn_angle_and_cal &rArr; fit_ellipsoid &rArr; magn_solve_inverse &rArr; magn_solve &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trainplan_valid_flag
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedResult
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DistanceResult
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_gps_flicker
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSportMode
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsStatus
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_get_stepcount
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remind_autocircle_display
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_last_pace_set
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_steps_freq
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_store_gpsdata
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwimResultsOutputPort3_SwimmingStyle
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwimResultsOutputPort2_LengthCount
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwimResultsOutputPort1_StrokeCount
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stores_Stroke
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_cod_StepData
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_cod_HeartRateData
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_StepData
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_SpeedData
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_HeartRateData
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_EnergyData
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_DistanceData
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_CircleTimeData
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_AuotCirclle
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreTrackPoint
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IsCompleteTodayTrainPlan
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_TrainPlan_Complete
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Speed
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Pace_TrainPlan
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Pace
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Heartrate
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_GoalTime
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_GoalKcal
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_GoalDistance
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_GoalCircle
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_CircleDistance
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Altitude
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MeanSpeedResult
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_TodayTimeTrainPlan
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IsTrainPlanOnGoing
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IsCompleteBothTodayTrainPlan
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateWalkEnergy
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateSwolf
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateSwimmingEnergy
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateSpeed
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateRunningEnergy
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateOptimumSpeed
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateOptimumPace
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateMountaineeringEnergy
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateMaxAlt
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateHeartrateParam
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateHeartrateMax
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateFrequency_swimming
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateFrequency
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateCyclingEnergy
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateCadenceParam
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_input
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_cycling_cadence
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marathon_cal_time
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_heartrate_recovery
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Sport_Heart
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSport
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task_sport.o(i.CreatSportTask)
</UL>
<P><STRONG><a name="[41]"></a>TaskStep</STRONG> (Thumb, 406 bytes, Stack size 16 bytes, task_step.o(i.TaskStep))
<BR><BR>[Stack]<UL><LI>Max Depth = 1356 + Unknown Stack Size
<LI>Call Chain = TaskStep &rArr; algo_swim_acc_fifo__data &rArr; SwimmingAlgorithmsAll &rArr; StrokeStyleIdentification &rArr; MatVar &rArr; MatMean &rArr; MatCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TaskSportSta
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rtc_flag_reg_read
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monitor_count_init
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_step_status
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cyclingsta
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brighten_screen_init
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SwimSta
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_filt_stepcount
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_swim_acc_fifo__data
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_reset
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_get_stepcount
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_fifo_init
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SIM
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_R_SPI_Mode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task_step.o(i.CreateStepTask)
</UL>
<P><STRONG><a name="[3d]"></a>TaskTimer</STRONG> (Thumb, 652 bytes, Stack size 16 bytes, task_timer.o(i.TaskTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 652 + Unknown Stack Size
<LI>Call Chain = TaskTimer &rArr; GetTriathionGPSEndAddress &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_data_get
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_track_mark
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_btn_detail
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cloud_navigation_btn_item
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_track_point_startaddress
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_track_point_endaddress
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_navigation_gps_startaddress
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_navigation_gps_endaddress
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_motion_trail_startaddress
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_motion_trail_endaddress
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_TodayTrainPlan
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_DailyStep
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_DailyKcal
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadNavigation
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMotiontTrail
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLoadTrack
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalStep
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalEnergy
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SportTrack_GpsAddress
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTriathionGPSEndAddress
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_filt_stepcount
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_alarm_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task_timer.o(i.CreatTimerTask)
</UL>
<P><STRONG><a name="[42]"></a>TaskTools</STRONG> (Thumb, 992 bytes, Stack size 48 bytes, task_tool.o(i.TaskTools))
<BR><BR>[Stack]<UL><LI>Max Depth = 1764 + Unknown Stack Size
<LI>Call Chain = TaskTools &rArr; magn_angle_and_cal &rArr; fit_ellipsoid &rArr; magn_solve_inverse &rArr; magn_solve &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_standby
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_data_get
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_stopwatch_time_get
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_stopwatch_status_get
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_stopwatch_overtime
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_countdown_target_time_get
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_countdown_real_time_get
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_countdown_finish
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_para_reset
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_cal_flag_get
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_init
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_drv_init
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseGPSTask
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task_tool.o(i.CreateToolTask)
</UL>
<P><STRONG><a name="[482]"></a>TimetoClearStepCount</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, com_data.o(i.TimetoClearStepCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = TimetoClearStepCount &rArr; ClearStepCount &rArr; drv_lsm6dsl_acc_init &rArr; drv_lsm6dsl_acc_lowpower &rArr; LSM6DSL_ACC_GYRO_W_LowPower_XL &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSportMode
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearStepCount
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDayMainData
</UL>

<P><STRONG><a name="[505]"></a>ToolIndexRecAdjust</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, gui_tool.o(i.ToolIndexRecAdjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ToolIndexRecAdjust &rArr; tool_menu_index_record
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_menu_index_record
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
</UL>

<P><STRONG><a name="[7ca]"></a>TrackBackFlag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, com_sport.o(i.TrackBackFlag))
<BR><BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_pause_btn_evt
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_pause_btn_evt
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_pause_btn_evt
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_pause_btn_evt
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_pause_btn_evt
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_pause_btn_evt
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_pause_btn_evt
</UL>

<P><STRONG><a name="[506]"></a>TrackOptimizingDataAccept</STRONG> (Thumb, 396 bytes, Stack size 56 bytes, algo_trackoptimizing.o(i.TrackOptimizingDataAccept))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = TrackOptimizingDataAccept &rArr; SportsCalculateDistSpeed &rArr; gps_raw_data_rn_receive &rArr; gps_raw_data_process_rn &rArr; calculateDistanceFromPoint &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_freq
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_over_or_restart
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_raw_data_rn_receive
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportsCalculateDistSpeed
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_input
</UL>

<P><STRONG><a name="[47c]"></a>TrackOptimizingInit</STRONG> (Thumb, 266 bytes, Stack size 8 bytes, algo_trackoptimizing.o(i.TrackOptimizingInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TrackOptimizingInit &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
</UL>

<P><STRONG><a name="[509]"></a>U2G</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, hfma2ylib.o(i.U2G))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = U2G &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;r_dat_bat
</UL>
<BR>[Called By]<UL><LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_utf8_gbk
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_utf16_gbk
</UL>

<P><STRONG><a name="[50a]"></a>UninitVO2maxMeasing</STRONG> (Thumb, 388 bytes, Stack size 16 bytes, timer_app.o(i.UninitVO2maxMeasing))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = UninitVO2maxMeasing &rArr; task_hrt_close &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_close
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DistanceResult
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseGPSTask
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateVO2max
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_VO2max_stop
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_VO2max_Countdown_stop
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_average_time_hdr
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_show_btn_evt
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_confirm_save_btn_evt
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_lactate_eraly_end_hint_btn_evt
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
</UL>

<P><STRONG><a name="[499]"></a>VecMagnitude</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, algo_matfun.o(i.VecMagnitude))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = VecMagnitude &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrokeStyleIdentification
</UL>

<P><STRONG><a name="[4e5]"></a>Write_SIM</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, drv_lsm6dsl.o(i.Write_SIM))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = Write_SIM &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_read
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_enable
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_disable
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStep
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_reset
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_acc_init
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_init
</UL>

<P><STRONG><a name="[2a5]"></a>std::abs(float)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, algo_hf_swimming_main.o(i._ZSt3absf))
<BR><BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitialPreparationForLengthCount
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BR_Only_omega_x_a_z_DynamicBoundForDurationTest(BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, int*, int*, int*, int*, bool*, float*, float*, float*)
</UL>

<P><STRONG><a name="[97]"></a>__ARM_common_memclr4_10</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ohrdriver.o(i.__ARM_common_memclr4_10))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initial_Pedometer
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
</UL>

<P><STRONG><a name="[e8]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[523]"></a>__ARM_fpclassifyf</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fpclassifyf.o(i.__ARM_fpclassifyf))
<BR><BR>[Called By]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atanf
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_powf
</UL>

<P><STRONG><a name="[298]"></a>__hardfp_acos</STRONG> (Thumb, 738 bytes, Stack size 72 bytes, acos.o(i.__hardfp_acos))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __hardfp_acos &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evalue_judge
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance5Bit
</UL>

<P><STRONG><a name="[b5]"></a>__hardfp_acosf</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, acosf.o(i.__hardfp_acosf))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __hardfp_acosf &rArr; sqrtf &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
</UL>

<P><STRONG><a name="[51b]"></a>__hardfp_asin</STRONG> (Thumb, 770 bytes, Stack size 88 bytes, asin.o(i.__hardfp_asin))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = __hardfp_asin &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_7
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_1
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getangle
</UL>

<P><STRONG><a name="[51f]"></a>__hardfp_atan</STRONG> (Thumb, 622 bytes, Stack size 48 bytes, atan.o(i.__hardfp_atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
</UL>

<P><STRONG><a name="[296]"></a>__hardfp_atan2</STRONG> (Thumb, 432 bytes, Stack size 48 bytes, atan2.o(i.__hardfp_atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = __hardfp_atan2 &rArr; atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atan
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
</UL>
<BR>[Called By]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brighten_screen_entrance
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateDistanceFromPoint
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance
</UL>

<P><STRONG><a name="[522]"></a>__hardfp_atanf</STRONG> (Thumb, 296 bytes, Stack size 16 bytes, atanf.o(i.__hardfp_atanf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __hardfp_atanf
</UL>
<BR>[Calls]<UL><LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
</UL>
<BR>[Called By]<UL><LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_7
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_6
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_5
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_4
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_3
</UL>

<P><STRONG><a name="[b0]"></a>__hardfp_ceil</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, ceil.o(i.__hardfp_ceil))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture_ExtFlash
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber_ExtFlash
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChinese
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChar
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_7
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_6
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_5
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_4
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_3
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_1
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
</UL>

<P><STRONG><a name="[294]"></a>__hardfp_cos</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, cos.o(i.__hardfp_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_circle_point
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_gauss_point_get
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evalue_judge
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateDistanceFromPoint
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getangle
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance5Bit
</UL>

<P><STRONG><a name="[b2]"></a>__hardfp_cosf</STRONG> (Thumb, 280 bytes, Stack size 8 bytes, cosf.o(i.__hardfp_cosf))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __hardfp_cosf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
</UL>

<P><STRONG><a name="[ae]"></a>__hardfp_fabs</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, fabs.o(i.__hardfp_fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __hardfp_fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brighten_screen_entrance
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_store_gpsdata
<LI><a href="#[8dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_descomposition
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_four_point
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedOptimizingDataCollection
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mean_data
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
</UL>

<P><STRONG><a name="[a5]"></a>__hardfp_floor</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, floor.o(i.__hardfp_floor))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __hardfp_floor &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
</UL>

<P><STRONG><a name="[b7]"></a>__hardfp_floorf</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, floorf.o(i.__hardfp_floorf))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
</UL>

<P><STRONG><a name="[b3]"></a>__hardfp_fmaxf</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, fmaxf.o(i.__hardfp_fmaxf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __hardfp_fmaxf &rArr; __ARM_fcmp4
</UL>
<BR>[Calls]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fcmp4
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
</UL>

<P><STRONG><a name="[b1]"></a>__hardfp_fminf</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, fminf.o(i.__hardfp_fminf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __hardfp_fminf &rArr; __ARM_fcmp4
</UL>
<BR>[Calls]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fcmp4
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
</UL>

<P><STRONG><a name="[52a]"></a>__hardfp_log</STRONG> (Thumb, 872 bytes, Stack size 88 bytes, log.o(i.__hardfp_log))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __hardfp_log &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
</UL>

<P><STRONG><a name="[52c]"></a>__hardfp_log10</STRONG> (Thumb, 260 bytes, Stack size 40 bytes, log10.o(i.__hardfp_log10))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = __hardfp_log10 &rArr; log &rArr; __hardfp_log &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_title_paint
</UL>

<P><STRONG><a name="[b6]"></a>__hardfp_log10f</STRONG> (Thumb, 332 bytes, Stack size 8 bytes, log10f.o(i.__hardfp_log10f))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __hardfp_log10f &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_divzero
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
</UL>

<P><STRONG><a name="[118]"></a>__hardfp_pow</STRONG> (Thumb, 3044 bytes, Stack size 184 bytes, pow.o(i.__hardfp_pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_to_batt_voltage
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_rel_altitude
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_altitude_to_press
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveGpsToXY
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateSwimmingEnergy
<LI><a href="#[8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;min_track_mark
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evalue_judge
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VecMagnitude
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_track_mark
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadGpsToXY
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawViewTrack
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLoadViewTrack
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std_seconds_data
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findtrackindex
</UL>

<P><STRONG><a name="[531]"></a>__hardfp_powf</STRONG> (Thumb, 1518 bytes, Stack size 16 bytes, powf.o(i.__hardfp_powf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __hardfp_powf &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_overflow
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan2
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_divzero
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_CalcPT2nd
</UL>

<P><STRONG><a name="[9da]"></a>__mathlib_powf</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, powf.o(i.__hardfp_powf), UNUSED)

<P><STRONG><a name="[10e]"></a>__hardfp_round</STRONG> (Thumb, 194 bytes, Stack size 64 bytes, round.o(i.__hardfp_round))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __hardfp_round &rArr; __aeabi_cdcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateFrequency_swimming
</UL>

<P><STRONG><a name="[ad]"></a>__hardfp_roundf</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, roundf.o(i.__hardfp_roundf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __hardfp_roundf &rArr; _frnd &rArr; __fpl_fnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frnd
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
</UL>

<P><STRONG><a name="[293]"></a>__hardfp_sin</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, sin.o(i.__hardfp_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_circle_point
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_gauss_point_get
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evalue_judge
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateDistanceFromPoint
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance
<LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLon
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLat
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getangle
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance5Bit
</UL>

<P><STRONG><a name="[b4]"></a>__hardfp_sinf</STRONG> (Thumb, 344 bytes, Stack size 16 bytes, sinf.o(i.__hardfp_sinf))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
</UL>

<P><STRONG><a name="[295]"></a>__hardfp_sqrt</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, sqrt.o(i.__hardfp_sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brighten_screen_entrance
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_swim_acc_fifo__data
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveGpsToXY
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_gauss_point_get
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_cal_auto
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_four_point
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_ellipsoid
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evector_judge
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_point_dis
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VecMagnitude
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kalmanFilter
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateDistanceFromPoint
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance
<LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLon
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLat
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadGpsToXY
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std_seconds_data
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getangle
</UL>

<P><STRONG><a name="[ab]"></a>__hardfp_sqrtf</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, sqrtf.o(i.__hardfp_sqrtf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __hardfp_sqrtf &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_7
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_6
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_5
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_4
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_3
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
</UL>

<P><STRONG><a name="[537]"></a>__hardfp_tan</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, tan.o(i.__hardfp_tan))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = __hardfp_tan &rArr; __kernel_tan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_gauss_point_get
</UL>

<P><STRONG><a name="[525]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 938 bytes, Stack size 120 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_tan
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>

<P><STRONG><a name="[527]"></a>__kernel_cos</STRONG> (Thumb, 322 bytes, Stack size 64 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>

<P><STRONG><a name="[516]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[526]"></a>__kernel_sin</STRONG> (Thumb, 280 bytes, Stack size 72 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>

<P><STRONG><a name="[538]"></a>__kernel_tan</STRONG> (Thumb, 764 bytes, Stack size 128 bytes, tan_i.o(i.__kernel_tan))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __kernel_tan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_tan
</UL>

<P><STRONG><a name="[52b]"></a>__mathlib_dbl_divzero</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_divzero))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_divzero &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log10
</UL>

<P><STRONG><a name="[514]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_infnan &rArr; __aeabi_dadd
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_tan
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log10
</UL>

<P><STRONG><a name="[520]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[515]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_tan
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log10
</UL>

<P><STRONG><a name="[52f]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_overflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_overflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[51c]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_underflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[52e]"></a>__mathlib_flt_divzero</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_divzero))
<BR><BR>[Called By]<UL><LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_powf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log10f
</UL>

<P><STRONG><a name="[519]"></a>__mathlib_flt_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_infnan))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atanf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosf
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log10f
</UL>

<P><STRONG><a name="[533]"></a>__mathlib_flt_infnan2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_infnan2))
<BR><BR>[Called By]<UL><LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_powf
</UL>

<P><STRONG><a name="[51a]"></a>__mathlib_flt_invalid</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_invalid))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosf
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_powf
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log10f
</UL>

<P><STRONG><a name="[532]"></a>__mathlib_flt_overflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_overflow))
<BR><BR>[Called By]<UL><LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_powf
</UL>

<P><STRONG><a name="[524]"></a>__mathlib_flt_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_underflow))
<BR><BR>[Called By]<UL><LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atanf
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_powf
</UL>

<P><STRONG><a name="[528]"></a>__mathlib_rredf2</STRONG> (Thumb, 316 bytes, Stack size 20 bytes, rredf.o(i.__mathlib_rredf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __mathlib_rredf2
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
</UL>

<P><STRONG><a name="[cb]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[461]"></a>_sendCmd</STRONG> (Thumb, 240 bytes, Stack size 32 bytes, si117x_functions.o(i._sendCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = _sendCmd &rArr; Si117xWriteToRegister &rArr; drv_i2c_hw1_write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xWriteToRegister
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xReadFromRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xUpdateFifoCount
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xStop
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xStart
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xSendCmd
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xParamSet
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xGetIrqStatus
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xFlushFIFO
</UL>

<P><STRONG><a name="[53d]"></a>agps_compare_time</STRONG> (Thumb, 296 bytes, Stack size 144 bytes, task_gps.o(i.agps_compare_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = agps_compare_time &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetYmdhms
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeSecond
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_lle_import
</UL>

<P><STRONG><a name="[53e]"></a>agps_lle_import</STRONG> (Thumb, 1038 bytes, Stack size 208 bytes, task_gps.o(i.agps_lle_import))
<BR><BR>[Stack]<UL><LI>Max Depth = 660 + Unknown Stack Size
<LI>Call Chain = agps_lle_import &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_receive_buffered
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweron
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweroff
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_idle
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_write
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_search
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_header
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_footer
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_erase
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_date
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_check
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_compare_time
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_start
</UL>

<P><STRONG><a name="[54b]"></a>algo_altitude_to_press</STRONG> (Thumb, 126 bytes, Stack size 64 bytes, drv_ms5837.o(i.algo_altitude_to_press))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = algo_altitude_to_press &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_store_gpsdata
</UL>

<P><STRONG><a name="[54c]"></a>algo_gauss_init</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, algo_gauss.o(i.algo_gauss_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = algo_gauss_init &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_gps_paint
</UL>

<P><STRONG><a name="[54d]"></a>algo_gauss_number_get</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, algo_gauss.o(i.algo_gauss_number_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = algo_gauss_number_get &rArr; __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_gps_paint
</UL>

<P><STRONG><a name="[54e]"></a>algo_gauss_point_get</STRONG> (Thumb, 1928 bytes, Stack size 320 bytes, algo_gauss.o(i.algo_gauss_point_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = algo_gauss_point_get &rArr; __hardfp_tan &rArr; __kernel_tan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Degree2Rad
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_tan
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_gps_paint
</UL>

<P><STRONG><a name="[406]"></a>algo_sport_cycling_init</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, algo_sport_cycling.o(i.algo_sport_cycling_init))
<BR><BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSensor
</UL>

<P><STRONG><a name="[54f]"></a>algo_sport_cycling_start</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, algo_sport_cycling.o(i.algo_sport_cycling_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = algo_sport_cycling_start &rArr; staticjudgment_diff
</UL>
<BR>[Calls]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;staticjudgment_diff
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;staticjudgment_cycling
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_swim_acc_fifo__data
</UL>

<P><STRONG><a name="[4ee]"></a>algo_swim_acc_fifo__data</STRONG> (Thumb, 3956 bytes, Stack size 128 bytes, task_step.o(i.algo_swim_acc_fifo__data))
<BR><BR>[Stack]<UL><LI>Max Depth = 1340 + Unknown Stack Size
<LI>Call Chain = algo_swim_acc_fifo__data &rArr; SwimmingAlgorithmsAll &rArr; StrokeStyleIdentification &rArr; MatVar &rArr; MatMean &rArr; MatCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_raiselight_mode_get
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;step_count_entrance
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_space_left
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_cyclingsta
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brighten_screen_entrance
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_sport_cycling_start
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwimmingAlgorithmsAll
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncidentPreprocessing
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_PauseSta
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;range_in_half
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_acc_gyro_clear_fifo
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_gyro_sensitivity_conv
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_acc_sensitivity_conv
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_put
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_is_full
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_get
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_data_left
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_R_FIFOPattern
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_R_FIFONumOfEntries
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_Get_GetFIFOData
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStep
</UL>

<P><STRONG><a name="[483]"></a>all_day_steps_clear</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, com_data.o(i.all_day_steps_clear))
<BR><BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDayMainData
</UL>

<P><STRONG><a name="[152]"></a>all_day_steps_reinit</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, com_data.o(i.all_day_steps_reinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = all_day_steps_reinit &rArr; Get_TotalEnergy &rArr; Get_CommonEnergy
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalEnergy
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_filt_stepcount
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalDistance
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RenewOneDay
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_all_day_steps
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_all_day_steps
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayMainData_Init
</UL>

<P><STRONG><a name="[23]"></a>am_adc_isr</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, drv_battery.o(i.am_adc_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = am_adc_isr &rArr; adc_disable &rArr; am_hal_pwrctrl_periph_disable &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_adc_int_status_get
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_adc_int_clear
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_adc_fifo_pop
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[5f6]"></a>am_bootloader_fast_crc32</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, am_bootloader.o(i.am_bootloader_fast_crc32))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = am_bootloader_fast_crc32
</UL>
<BR>[Called By]<UL><LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_info_read_response
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_presonse_application_ble_info
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_sports_param_read
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_calculate_param_write
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_calculate_param_read
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_dev_name_update
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_current_time_write
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_ios
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_android
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_boot_jump_to_bootloader
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_flash_write_raw
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_flash_read_raw
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extFlash_sector
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_app_data_crc_check_bootsetting
<LI><a href="#[8d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_boot_setting_crc_check_bootsetting
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_boot_setting_crc_check_bootloader
</UL>

<P><STRONG><a name="[15]"></a>am_clkgen_isr</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, isr_clkgen.o(i.am_clkgen_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 420 + Unknown Stack Size
<LI>Call Chain = am_clkgen_isr &rArr; error_currenttask &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TaskSportSta
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_int_clear
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_currenttask
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_int_status_get
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_int_enable_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>am_ctimer_isr</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, isr_ctimer.o(i.am_ctimer_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = am_ctimer_isr &rArr; am_hal_ctimer_int_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_int_status_get
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_int_service
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_int_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[56b]"></a>am_freertos_sleep</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, rtos.o(i.am_freertos_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = am_freertos_sleep &rArr; am_hal_sysctrl_sleep &rArr; am_hal_ctimer_period_set
</UL>
<BR>[Calls]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_sysctrl_sleep
</UL>
<BR>[Called By]<UL><LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSuppressTicksAndSleep
</UL>

<P><STRONG><a name="[964]"></a>am_freertos_wakeup</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtos.o(i.am_freertos_wakeup))
<BR><BR>[Called By]<UL><LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSuppressTicksAndSleep
</UL>

<P><STRONG><a name="[1f]"></a>am_gpio_isr</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, isr_gpio.o(i.am_gpio_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = am_gpio_isr &rArr; am_hal_gpio_int_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_status_get
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_service
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[570]"></a>am_hal_adc_config</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, am_hal_adc.o(i.am_hal_adc_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = am_hal_adc_config &rArr; am_hal_flash_load_ui32
</UL>
<BR>[Calls]<UL><LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_flash_load_ui32
</UL>
<BR>[Called By]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_adc_enable
</UL>

<P><STRONG><a name="[53a]"></a>am_hal_adc_disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, am_hal_adc.o(i.am_hal_adc_disable))
<BR><BR>[Called By]<UL><LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_disable
</UL>

<P><STRONG><a name="[6a3]"></a>am_hal_adc_enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, am_hal_adc.o(i.am_hal_adc_enable))
<BR><BR>[Called By]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_adc_enable
</UL>

<P><STRONG><a name="[562]"></a>am_hal_adc_fifo_pop</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, am_hal_adc.o(i.am_hal_adc_fifo_pop))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_adc_isr
</UL>

<P><STRONG><a name="[561]"></a>am_hal_adc_int_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, am_hal_adc.o(i.am_hal_adc_int_clear))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_adc_isr
</UL>

<P><STRONG><a name="[6a1]"></a>am_hal_adc_int_enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, am_hal_adc.o(i.am_hal_adc_int_enable))
<BR><BR>[Called By]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_adc_enable
</UL>

<P><STRONG><a name="[560]"></a>am_hal_adc_int_status_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, am_hal_adc.o(i.am_hal_adc_int_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_adc_isr
</UL>

<P><STRONG><a name="[6a2]"></a>am_hal_adc_slot_config</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, am_hal_adc.o(i.am_hal_adc_slot_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = am_hal_adc_slot_config
</UL>
<BR>[Called By]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_adc_enable
</UL>

<P><STRONG><a name="[6a4]"></a>am_hal_adc_trigger</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, am_hal_adc.o(i.am_hal_adc_trigger))
<BR><BR>[Called By]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_adc_enable
</UL>

<P><STRONG><a name="[572]"></a>am_hal_cachectrl_enable</STRONG> (Thumb, 228 bytes, Stack size 16 bytes, am_hal_cachectrl.o(i.am_hal_cachectrl_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = am_hal_cachectrl_enable &rArr; am_hal_pwrctrl_memory_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_memory_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[936]"></a>am_hal_clkgen_osc_start</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, am_hal_clkgen.o(i.am_hal_clkgen_osc_start))
<BR><BR>[Called By]<UL><LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[582]"></a>am_hal_clkgen_sysclk_get</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, am_hal_clkgen.o(i.am_hal_clkgen_sysclk_get))
<BR><BR>[Called By]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_config
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_config
</UL>

<P><STRONG><a name="[933]"></a>am_hal_clkgen_sysclk_select</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, am_hal_clkgen.o(i.am_hal_clkgen_sysclk_select))
<BR><BR>[Called By]<UL><LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[574]"></a>am_hal_clkgen_uarten_set</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, am_hal_clkgen.o(i.am_hal_clkgen_uarten_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = am_hal_clkgen_uarten_set
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_clock_enable
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_clock_disable
</UL>

<P><STRONG><a name="[42e]"></a>am_hal_ctimer_clear</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, am_hal_ctimer.o(i.am_hal_ctimer_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = am_hal_ctimer_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_sysctrl_sleep
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupTimerB2
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetTimerB2
</UL>

<P><STRONG><a name="[455]"></a>am_hal_ctimer_config_single</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, am_hal_ctimer.o(i.am_hal_ctimer_config_single))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = am_hal_ctimer_config_single &rArr; timers_use_hfrc &rArr; ctimer_source_hfrc
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timers_use_hfrc
</UL>
<BR>[Called By]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_create
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupTimerB2
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_enable
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_buzzer_enable
</UL>

<P><STRONG><a name="[569]"></a>am_hal_ctimer_int_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, am_hal_ctimer.o(i.am_hal_ctimer_int_clear))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_ctimer_isr
</UL>

<P><STRONG><a name="[456]"></a>am_hal_ctimer_int_enable</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, am_hal_ctimer.o(i.am_hal_ctimer_int_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = am_hal_ctimer_int_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_create
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupTimerB2
</UL>

<P><STRONG><a name="[457]"></a>am_hal_ctimer_int_register</STRONG> (Thumb, 172 bytes, Stack size 0 bytes, am_hal_ctimer.o(i.am_hal_ctimer_int_register))
<BR><BR>[Called By]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_create
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupTimerB2
</UL>

<P><STRONG><a name="[56a]"></a>am_hal_ctimer_int_service</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, am_hal_ctimer.o(i.am_hal_ctimer_int_service))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = am_hal_ctimer_int_service
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_ctimer_isr
</UL>

<P><STRONG><a name="[568]"></a>am_hal_ctimer_int_status_get</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, am_hal_ctimer.o(i.am_hal_ctimer_int_status_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = am_hal_ctimer_int_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_ctimer_isr
</UL>

<P><STRONG><a name="[42f]"></a>am_hal_ctimer_period_set</STRONG> (Thumb, 156 bytes, Stack size 48 bytes, am_hal_ctimer.o(i.am_hal_ctimer_period_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = am_hal_ctimer_period_set
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_sysctrl_sleep
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupTimerB2
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetTimerB2
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_enable
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_buzzer_enable
</UL>

<P><STRONG><a name="[430]"></a>am_hal_ctimer_start</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, am_hal_ctimer.o(i.am_hal_ctimer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = am_hal_ctimer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_sysctrl_sleep
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupTimerB2
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetTimerB2
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_enable
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_buzzer_enable
</UL>

<P><STRONG><a name="[42d]"></a>am_hal_ctimer_stop</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, am_hal_ctimer.o(i.am_hal_ctimer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = am_hal_ctimer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTimerB2
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupTimerB2
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetTimerB2
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_disable
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_buzzer_disable
</UL>

<P><STRONG><a name="[577]"></a>am_hal_flash_delay</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, am_hal_flash.o(i.am_hal_flash_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = am_hal_flash_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_sysctrl_sleep
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_bucks_init
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_periph_enable
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_periph_disable
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_i2c_bit_bang_send
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_i2c_bit_bang_receive
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_send_byte
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_receive_byte
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_pull_and_wait_scl_hi
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_flash_delay_status_change
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_bucks_disable
</UL>

<P><STRONG><a name="[576]"></a>am_hal_flash_delay_status_change</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, am_hal_flash.o(i.am_hal_flash_delay_status_change))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_flash_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_iom_wait_i2c_scl_hi
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write_nq
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_read_nq
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_read_nb
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write_nq
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_read_nq
</UL>

<P><STRONG><a name="[571]"></a>am_hal_flash_load_ui32</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, am_hal_flash.o(i.am_hal_flash_load_ui32))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = am_hal_flash_load_ui32
</UL>
<BR>[Called By]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_adc_config
</UL>

<P><STRONG><a name="[6cd]"></a>am_hal_flash_page_erase</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, am_hal_flash.o(i.am_hal_flash_page_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = am_hal_flash_page_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_intFlash_erase_page
</UL>

<P><STRONG><a name="[6d0]"></a>am_hal_flash_program_main</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, am_hal_flash.o(i.am_hal_flash_program_main))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = am_hal_flash_program_main
</UL>
<BR>[Called By]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_intFlash_write_page
</UL>

<P><STRONG><a name="[953]"></a>am_hal_gpio_input_read</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, am_hal_gpio.o(i.am_hal_gpio_input_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = am_hal_gpio_input_read
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_handle
</UL>

<P><STRONG><a name="[56e]"></a>am_hal_gpio_int_clear</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, am_hal_gpio.o(i.am_hal_gpio_int_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = am_hal_gpio_int_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_apollo2_gpio_int_init
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_te_irq_init
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_gpio_isr
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close_on_ble_sys_off
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_init
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_init
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_irq_init
</UL>

<P><STRONG><a name="[578]"></a>am_hal_gpio_int_disable</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, am_hal_gpio.o(i.am_hal_gpio_int_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = am_hal_gpio_int_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close_on_ble_sys_off
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_irq_disable
</UL>

<P><STRONG><a name="[681]"></a>am_hal_gpio_int_enable</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, am_hal_gpio.o(i.am_hal_gpio_int_enable))
<BR><BR>[Called By]<UL><LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_apollo2_gpio_int_init
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_te_irq_init
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_init
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_init
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_irq_enable
</UL>

<P><STRONG><a name="[6a6]"></a>am_hal_gpio_int_register</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, am_hal_gpio.o(i.am_hal_gpio_int_register))
<BR><BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_key_init
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_te_irq_init
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_init
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_init
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_irq_init
</UL>

<P><STRONG><a name="[56f]"></a>am_hal_gpio_int_service</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, am_hal_gpio.o(i.am_hal_gpio_int_service))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = am_hal_gpio_int_service
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_gpio_isr
</UL>

<P><STRONG><a name="[56d]"></a>am_hal_gpio_int_status_get</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, am_hal_gpio.o(i.am_hal_gpio_int_status_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = am_hal_gpio_int_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_gpio_isr
</UL>

<P><STRONG><a name="[579]"></a>am_hal_i2c_bit_bang_receive</STRONG> (Thumb, 238 bytes, Stack size 40 bytes, am_hal_i2c_bit_bang.o(i.am_hal_i2c_bit_bang_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = am_hal_i2c_bit_bang_receive &rArr; i2c_receive_byte &rArr; i2c_pull_and_wait_scl_hi &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_flash_delay
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_send_byte
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_receive_byte
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_pull_and_wait_scl_hi
</UL>
<BR>[Called By]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_read
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_read_nq
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_read_nb
</UL>

<P><STRONG><a name="[57d]"></a>am_hal_i2c_bit_bang_send</STRONG> (Thumb, 252 bytes, Stack size 56 bytes, am_hal_i2c_bit_bang.o(i.am_hal_i2c_bit_bang_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = am_hal_i2c_bit_bang_send &rArr; i2c_send_byte &rArr; i2c_pull_and_wait_scl_hi &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_flash_delay
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_send_byte
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_pull_and_wait_scl_hi
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write_nq
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write_nb
</UL>

<P><STRONG><a name="[666]"></a>am_hal_interrupt_enable</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, am_hal_interrupt.o(i.am_hal_interrupt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_interrupt
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_enable
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bus_enable
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweron
<LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
</UL>

<P><STRONG><a name="[707]"></a>am_hal_interrupt_priority_set</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, am_hal_interrupt.o(i.am_hal_interrupt_priority_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = am_hal_interrupt_priority_set
</UL>
<BR>[Called By]<UL><LI><a href="#[8e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;priority_init
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweron
<LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
</UL>

<P><STRONG><a name="[57e]"></a>am_hal_iom_config</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, am_hal_iom.o(i.am_hal_iom_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = am_hal_iom_config &rArr; iom_get_interface_clock_cfg &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_clkgen_sysclk_get
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isRevB2
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iom_get_interface_clock_cfg
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iom_get_i2c_workaround_clock_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_enable
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_enable
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_init
</UL>

<P><STRONG><a name="[583]"></a>am_hal_iom_disable</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, am_hal_iom.o(i.am_hal_iom_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = am_hal_iom_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_poll_complete
</UL>
<BR>[Called By]<UL><LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_disable
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_disable
</UL>

<P><STRONG><a name="[65a]"></a>am_hal_iom_enable</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, am_hal_iom.o(i.am_hal_iom_enable))
<BR><BR>[Called By]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_enable
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_enable
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_init
</UL>

<P><STRONG><a name="[593]"></a>am_hal_iom_fifo_empty_slots</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, am_hal_iom.o(i.am_hal_iom_fifo_empty_slots))
<BR><BR>[Called By]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_int_service
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write_nq
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write_nq
</UL>

<P><STRONG><a name="[58c]"></a>am_hal_iom_fifo_full_slots</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, am_hal_iom.o(i.am_hal_iom_fifo_full_slots))
<BR><BR>[Called By]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_int_service
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_read_nq
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_read_nq
</UL>

<P><STRONG><a name="[58d]"></a>am_hal_iom_fifo_read</STRONG> (Thumb, 108 bytes, Stack size 28 bytes, am_hal_iom.o(i.am_hal_iom_fifo_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = am_hal_iom_fifo_read
</UL>
<BR>[Called By]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_int_service
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_read_nq
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_read_nq
</UL>

<P><STRONG><a name="[592]"></a>am_hal_iom_fifo_write</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, am_hal_iom.o(i.am_hal_iom_fifo_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = am_hal_iom_fifo_write
</UL>
<BR>[Called By]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_int_service
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_workaround_word_write
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write_nq
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write_nb
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write_nq
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write_nb
</UL>

<P><STRONG><a name="[585]"></a>am_hal_iom_frequency_get</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, am_hal_iom.o(i.am_hal_iom_frequency_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = am_hal_iom_frequency_get &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_freq
</UL>
<BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_workaround_word_write
</UL>

<P><STRONG><a name="[587]"></a>am_hal_iom_i2c_cmd_run</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, am_hal_iom.o(i.am_hal_iom_i2c_cmd_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_iom_wait_i2c_scl_hi
</UL>
<BR>[Called By]<UL><LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write_nq
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write_nb
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_read_nq
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_read_nb
</UL>

<P><STRONG><a name="[44a]"></a>am_hal_iom_i2c_read</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, am_hal_iom.o(i.am_hal_iom_i2c_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = am_hal_iom_i2c_read &rArr; am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_i2c_bit_bang_receive
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_queue_i2c_read
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_poll_complete
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_read_nq
</UL>
<BR>[Called By]<UL><LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_data
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis3mdl_reg_read
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_read
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_read
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rtc_flag_reg_read
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SIM
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_read
</UL>

<P><STRONG><a name="[58b]"></a>am_hal_iom_i2c_read_nb</STRONG> (Thumb, 280 bytes, Stack size 48 bytes, am_hal_iom.o(i.am_hal_iom_i2c_read_nb))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_i2c_bit_bang_receive
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_poll_complete
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_cmd_run
</UL>
<BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_queue_i2c_read
</UL>

<P><STRONG><a name="[58a]"></a>am_hal_iom_i2c_read_nq</STRONG> (Thumb, 492 bytes, Stack size 72 bytes, am_hal_iom.o(i.am_hal_iom_i2c_read_nq))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = am_hal_iom_i2c_read_nq &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_iom_get_int_err
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_i2c_bit_bang_receive
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_flash_delay_status_change
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_poll_complete
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_cmd_run
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_fifo_read
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_fifo_full_slots
</UL>
<BR>[Called By]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_read
</UL>

<P><STRONG><a name="[44c]"></a>am_hal_iom_i2c_write</STRONG> (Thumb, 230 bytes, Stack size 40 bytes, am_hal_iom.o(i.am_hal_iom_i2c_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_i2c_bit_bang_send
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_queue_i2c_write
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_poll_complete
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write_nq
</UL>
<BR>[Called By]<UL><LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis3mdl_reg_write
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_write
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_read
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_reset_rtc
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_offline_ephemeris
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_hotstart
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_clodstart
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_VTG
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_RXM_SAVE
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_RMC
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_REVERT
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GSV
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GSA
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GNSS
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GLL
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GGA
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SIM
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_write
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis3mdl_reg_write
</UL>

<P><STRONG><a name="[591]"></a>am_hal_iom_i2c_write_nb</STRONG> (Thumb, 386 bytes, Stack size 56 bytes, am_hal_iom.o(i.am_hal_iom_i2c_write_nb))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_i2c_bit_bang_send
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_poll_complete
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_cmd_run
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_fifo_write
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_queue_i2c_write
</UL>

<P><STRONG><a name="[590]"></a>am_hal_iom_i2c_write_nq</STRONG> (Thumb, 484 bytes, Stack size 64 bytes, am_hal_iom.o(i.am_hal_iom_i2c_write_nq))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = am_hal_iom_i2c_write_nq &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_iom_get_int_err
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_i2c_bit_bang_send
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_flash_delay_status_change
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_poll_complete
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_cmd_run
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_fifo_write
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_fifo_empty_slots
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write
</UL>

<P><STRONG><a name="[5c1]"></a>am_hal_iom_int_clear</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, am_hal_iom.o(i.am_hal_iom_int_clear))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_iomaster3_isr
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_iomaster2_isr
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_iomaster1_isr
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_iomaster0_isr
</UL>

<P><STRONG><a name="[594]"></a>am_hal_iom_int_service</STRONG> (Thumb, 370 bytes, Stack size 32 bytes, am_hal_iom.o(i.am_hal_iom_int_service))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = am_hal_iom_int_service &rArr; am_hal_iom_fifo_read
</UL>
<BR>[Calls]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_iom_get_int_err
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_fifo_write
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_fifo_read
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_fifo_full_slots
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_fifo_empty_slots
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_iomaster3_isr
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_iomaster2_isr
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_iomaster1_isr
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_iomaster0_isr
</UL>

<P><STRONG><a name="[5c0]"></a>am_hal_iom_int_status_get</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, am_hal_iom.o(i.am_hal_iom_int_status_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = am_hal_iom_int_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_iomaster3_isr
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_iomaster2_isr
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_iomaster1_isr
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_iomaster0_isr
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_iom_get_int_err
</UL>

<P><STRONG><a name="[584]"></a>am_hal_iom_poll_complete</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, am_hal_iom.o(i.am_hal_iom_poll_complete))
<BR><BR>[Called By]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_disable
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_read
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write_nq
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write_nb
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_read_nq
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_read_nb
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write_nq
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write_nb
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_read_nq
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_read_nb
</UL>

<P><STRONG><a name="[595]"></a>am_hal_iom_power_off_save</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, am_hal_iom.o(i.am_hal_iom_power_off_save))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = am_hal_iom_power_off_save &rArr; am_hal_pwrctrl_periph_disable &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_periph_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_disable
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_init
</UL>

<P><STRONG><a name="[596]"></a>am_hal_iom_power_on_restore</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, am_hal_iom.o(i.am_hal_iom_power_on_restore))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = am_hal_iom_power_on_restore &rArr; am_hal_pwrctrl_periph_enable &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_periph_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_enable
</UL>

<P><STRONG><a name="[598]"></a>am_hal_iom_pwrctrl_disable</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, am_hal_iom.o(i.am_hal_iom_pwrctrl_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = am_hal_iom_pwrctrl_disable &rArr; am_hal_pwrctrl_periph_disable &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_periph_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_disable
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_disable
</UL>

<P><STRONG><a name="[599]"></a>am_hal_iom_pwrctrl_enable</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, am_hal_iom.o(i.am_hal_iom_pwrctrl_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = am_hal_iom_pwrctrl_enable &rArr; am_hal_pwrctrl_periph_enable &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_periph_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_enable
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_enable
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_init
</UL>

<P><STRONG><a name="[589]"></a>am_hal_iom_queue_i2c_read</STRONG> (Thumb, 158 bytes, Stack size 64 bytes, am_hal_iom.o(i.am_hal_iom_queue_i2c_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_queue_item_add
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_read_nb
</UL>
<BR>[Called By]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_read
</UL>

<P><STRONG><a name="[58f]"></a>am_hal_iom_queue_i2c_write</STRONG> (Thumb, 158 bytes, Stack size 64 bytes, am_hal_iom.o(i.am_hal_iom_queue_i2c_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_queue_item_add
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write_nb
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write
</UL>

<P><STRONG><a name="[59b]"></a>am_hal_iom_queue_spi_read</STRONG> (Thumb, 158 bytes, Stack size 64 bytes, am_hal_iom.o(i.am_hal_iom_queue_spi_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_queue_item_add
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_read_nb
</UL>
<BR>[Called By]<UL><LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_read
</UL>

<P><STRONG><a name="[59d]"></a>am_hal_iom_queue_spi_write</STRONG> (Thumb, 158 bytes, Stack size 64 bytes, am_hal_iom.o(i.am_hal_iom_queue_spi_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_queue_item_add
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write_nb
</UL>
<BR>[Called By]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write
</UL>

<P><STRONG><a name="[b]"></a>am_hal_iom_sleeping_queue_flush</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, am_hal_iom.o(i.am_hal_iom_sleeping_queue_flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = am_hal_iom_sleeping_queue_flush &rArr; am_hal_sysctrl_sleep &rArr; am_hal_ctimer_period_set
</UL>
<BR>[Calls]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_sysctrl_sleep
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> am_hal_iom.o(.data)
</UL>
<P><STRONG><a name="[59f]"></a>am_hal_iom_spi_cmd_run</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, am_hal_iom.o(i.am_hal_iom_spi_cmd_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = am_hal_iom_spi_cmd_run &rArr; internal_am_hal_iom_spi_cmd_construct
</UL>
<BR>[Calls]<UL><LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_am_hal_iom_spi_cmd_construct
</UL>
<BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write_nq
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write_nb
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_read_nq
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_read_nb
</UL>

<P><STRONG><a name="[5a1]"></a>am_hal_iom_spi_read</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, am_hal_iom.o(i.am_hal_iom_spi_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_read_nq
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_queue_spi_read
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;r_dat_bat
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_status
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_read
</UL>

<P><STRONG><a name="[59c]"></a>am_hal_iom_spi_read_nb</STRONG> (Thumb, 298 bytes, Stack size 40 bytes, am_hal_iom.o(i.am_hal_iom_spi_read_nb))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_flash_delay_status_change
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isRevB0
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_workaround_word_write
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_cmd_run
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_poll_complete
</UL>
<BR>[Called By]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_queue_spi_read
</UL>

<P><STRONG><a name="[5a2]"></a>am_hal_iom_spi_read_nq</STRONG> (Thumb, 460 bytes, Stack size 48 bytes, am_hal_iom.o(i.am_hal_iom_spi_read_nq))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = am_hal_iom_spi_read_nq &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_iom_get_int_err
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_flash_delay_status_change
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isRevB0
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_workaround_word_write
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_cmd_run
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_poll_complete
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_fifo_read
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_fifo_full_slots
</UL>
<BR>[Called By]<UL><LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_read
</UL>

<P><STRONG><a name="[5a5]"></a>am_hal_iom_spi_write</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, am_hal_iom.o(i.am_hal_iom_spi_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write_nq
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_queue_spi_write
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;r_dat_bat
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_wakeup
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_sleep
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_self_test
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_data_write
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_ctrl_write
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_block_data_write
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_sector_erase
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_read
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_pwr_up
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_pwr_down
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_page_write
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_64K_erase
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_32K_erase
</UL>

<P><STRONG><a name="[59e]"></a>am_hal_iom_spi_write_nb</STRONG> (Thumb, 388 bytes, Stack size 48 bytes, am_hal_iom.o(i.am_hal_iom_spi_write_nb))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isRevB0
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_workaround_word_write
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_cmd_run
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_poll_complete
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_fifo_write
</UL>
<BR>[Called By]<UL><LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_queue_spi_write
</UL>

<P><STRONG><a name="[5a6]"></a>am_hal_iom_spi_write_nq</STRONG> (Thumb, 386 bytes, Stack size 48 bytes, am_hal_iom.o(i.am_hal_iom_spi_write_nq))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = am_hal_iom_spi_write_nq &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_iom_get_int_err
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_flash_delay_status_change
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isRevB0
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_workaround_word_write
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_cmd_run
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_poll_complete
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_fifo_write
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_fifo_empty_slots
</UL>
<BR>[Called By]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write
</UL>

<P><STRONG><a name="[5a4]"></a>am_hal_iom_workaround_word_write</STRONG> (Thumb, 598 bytes, Stack size 112 bytes, am_hal_iom.o(i.am_hal_iom_workaround_word_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iom_get_workaround_fsel
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iom_calc_gpio
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_iom_workaround_critical
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;internal_am_hal_iom_spi_cmd_construct
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_frequency_get
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_fifo_write
</UL>
<BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write_nq
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write_nb
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_read_nq
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_read_nb
</UL>

<P><STRONG><a name="[5ca]"></a>am_hal_mcuctrl_fault_status</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, am_hal_mcuctrl.o(i.am_hal_mcuctrl_fault_status))
<BR><BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_faultisr_collect_data
</UL>

<P><STRONG><a name="[5aa]"></a>am_hal_pwrctrl_bucks_disable</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, am_hal_pwrctrl.o(i.am_hal_pwrctrl_bucks_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = am_hal_pwrctrl_bucks_disable &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_flash_delay
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isRev_ADC
</UL>
<BR>[Called By]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_sysctrl_sleep
</UL>

<P><STRONG><a name="[5ad]"></a>am_hal_pwrctrl_bucks_enable</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, am_hal_pwrctrl.o(i.am_hal_pwrctrl_bucks_enable))
<BR><BR>[Called By]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_sysctrl_sleep
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_bucks_init
</UL>

<P><STRONG><a name="[5ac]"></a>am_hal_pwrctrl_bucks_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, am_hal_pwrctrl.o(i.am_hal_pwrctrl_bucks_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = am_hal_pwrctrl_bucks_init &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_bucks_enable
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_flash_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[934]"></a>am_hal_pwrctrl_low_power_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, am_hal_pwrctrl.o(i.am_hal_pwrctrl_low_power_init))
<BR><BR>[Called By]<UL><LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[573]"></a>am_hal_pwrctrl_memory_enable</STRONG> (Thumb, 368 bytes, Stack size 20 bytes, am_hal_pwrctrl.o(i.am_hal_pwrctrl_memory_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = am_hal_pwrctrl_memory_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_cachectrl_enable
<LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[53b]"></a>am_hal_pwrctrl_periph_disable</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, am_hal_pwrctrl.o(i.am_hal_pwrctrl_periph_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = am_hal_pwrctrl_periph_disable &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_flash_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_pwrctrl_disable
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_pwrctrl_disable
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_disable
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_power_off_save
</UL>

<P><STRONG><a name="[597]"></a>am_hal_pwrctrl_periph_enable</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, am_hal_pwrctrl.o(i.am_hal_pwrctrl_periph_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = am_hal_pwrctrl_periph_enable &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_flash_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_pwrctrl_enable
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_pwrctrl_enable
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_adc_enable
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_power_on_restore
</UL>

<P><STRONG><a name="[5bc]"></a>am_hal_queue_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, am_hal_queue.o(i.am_hal_queue_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = am_hal_queue_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_init_buffered
</UL>

<P><STRONG><a name="[59a]"></a>am_hal_queue_item_add</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, am_hal_queue.o(i.am_hal_queue_item_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_service_buffered_timeout_save
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_transmit_buffered
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_queue_spi_write
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_queue_spi_read
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_queue_i2c_write
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_queue_i2c_read
</UL>

<P><STRONG><a name="[5ae]"></a>am_hal_queue_item_get</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, am_hal_queue.o(i.am_hal_queue_item_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = am_hal_queue_item_get
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_service_buffered_timeout_save
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_receive_buffered
</UL>

<P><STRONG><a name="[257]"></a>am_hal_reset_por</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, am_hal_reset.o(i.am_hal_reset_por))
<BR><BR>[Called By]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pon
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_app_ble_dfu_finish
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_boot_jump_to_bootloader
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Reset
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_event_handle
</UL>

<P><STRONG><a name="[922]"></a>am_hal_reset_status_clear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, am_hal_reset.o(i.am_hal_reset_status_clear))
<BR><BR>[Called By]<UL><LI><a href="#[8e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_handle
</UL>

<P><STRONG><a name="[921]"></a>am_hal_reset_status_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, am_hal_reset.o(i.am_hal_reset_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[8e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_handle
</UL>

<P><STRONG><a name="[130]"></a>am_hal_rtc_alarm_interval_set</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, am_hal_rtc.o(i.am_hal_rtc_alarm_interval_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = am_hal_rtc_alarm_interval_set
</UL>
<BR>[Called By]<UL><LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rtc_interrupt_set
<LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSensor
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSport
</UL>

<P><STRONG><a name="[564]"></a>am_hal_rtc_int_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, am_hal_rtc.o(i.am_hal_rtc_int_clear))
<BR><BR>[Called By]<UL><LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rtc_interrupt_set
<LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_clkgen_isr
</UL>

<P><STRONG><a name="[65c]"></a>am_hal_rtc_int_enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, am_hal_rtc.o(i.am_hal_rtc_int_enable))
<BR><BR>[Called By]<UL><LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rtc_interrupt_set
<LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[565]"></a>am_hal_rtc_int_enable_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, am_hal_rtc.o(i.am_hal_rtc_int_enable_get))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_clkgen_isr
</UL>

<P><STRONG><a name="[563]"></a>am_hal_rtc_int_status_get</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, am_hal_rtc.o(i.am_hal_rtc_int_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_clkgen_isr
</UL>

<P><STRONG><a name="[937]"></a>am_hal_rtc_osc_enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, am_hal_rtc.o(i.am_hal_rtc_osc_enable))
<BR><BR>[Called By]<UL><LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[935]"></a>am_hal_rtc_osc_select</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, am_hal_rtc.o(i.am_hal_rtc_osc_select))
<BR><BR>[Called By]<UL><LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
</UL>

<P><STRONG><a name="[14b]"></a>am_hal_rtc_time_get</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, am_hal_rtc.o(i.am_hal_rtc_time_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = am_hal_rtc_time_get
</UL>
<BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bcd_to_dec
</UL>
<BR>[Called By]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcToUtc
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_power_off_store_set_value
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSport
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_clkgen_isr
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_detect_hdl
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_stable_btn_evt
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_screen_data_paint
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_update_cod_dial_paint
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_paint
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_realtime_test_paint
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_week_steps_paint
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_week_mileage_paint
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_show_paint
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_hint_paint
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_confirm_save_paint
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_preview_paint
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_alarm_paint
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_average_based_paint
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_paint
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dfu_paint
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_week_sports_paint
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_weather_info_request
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_update_apgs_time
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_astro_sync_request
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_current_time_write
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_current_time_read
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_alarm_handler
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanResult
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_preview
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_get_weather
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_bottom_time
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_SportsCaloriesWeekData
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_SportsStepWeekData
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_SportsDistanceWeekData
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_CommonStepWeekData
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_CommonDistanceWeekData
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_BasedHDRWeekData
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_realtime_battery_trail_paint
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_realtime_battery_paint_gps
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_date
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanTotalDays
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanBeforeDays
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SomeDayofTrainPlan
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_stop
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_start
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_elapsed_get
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_clear
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_1_paint
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_festival_is_valid
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;First_Run_Config
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayMainData_Init
</UL>

<P><STRONG><a name="[14f]"></a>am_hal_rtc_time_set</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, am_hal_rtc.o(i.am_hal_rtc_time_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = am_hal_rtc_time_set
</UL>
<BR>[Calls]<UL><LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dec_to_bcd
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rtc_init
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SatelliteTime
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_current_time_write
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayMainData_Init
</UL>

<P><STRONG><a name="[5b1]"></a>am_hal_stimer_compare_delta_set</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, am_hal_stimer.o(i.am_hal_stimer_compare_delta_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = am_hal_stimer_compare_delta_set
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSuppressTicksAndSleep
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStimerTickHandler
<LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
</UL>

<P><STRONG><a name="[961]"></a>am_hal_stimer_config</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, am_hal_stimer.o(i.am_hal_stimer_config))
<BR><BR>[Called By]<UL><LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSuppressTicksAndSleep
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStimerTickHandler
<LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
</UL>

<P><STRONG><a name="[962]"></a>am_hal_stimer_counter_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, am_hal_stimer.o(i.am_hal_stimer_counter_get))
<BR><BR>[Called By]<UL><LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSuppressTicksAndSleep
</UL>

<P><STRONG><a name="[5c2]"></a>am_hal_stimer_int_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, am_hal_stimer.o(i.am_hal_stimer_int_clear))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_stimer_cmpr0_isr
</UL>

<P><STRONG><a name="[960]"></a>am_hal_stimer_int_enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, am_hal_stimer.o(i.am_hal_stimer_int_enable))
<BR><BR>[Called By]<UL><LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
</UL>

<P><STRONG><a name="[56c]"></a>am_hal_sysctrl_sleep</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, am_hal_sysctrl.o(i.am_hal_sysctrl_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = am_hal_sysctrl_sleep &rArr; am_hal_ctimer_period_set
</UL>
<BR>[Calls]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_bucks_enable
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_start
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_period_set
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_clear
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_flash_delay
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setBuckZX
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buckZX_chk
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_bucks_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_freertos_sleep
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSuppressTicksAndSleep
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_sleeping_queue_flush
</UL>

<P><STRONG><a name="[4b3]"></a>am_hal_uart_char_receive_buffered</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, am_hal_uart.o(i.am_hal_uart_char_receive_buffered))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = am_hal_uart_char_receive_buffered &rArr; am_hal_queue_item_get
</UL>
<BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_queue_item_get
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_uart_isr
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_uart1_isr
<LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_start
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_lle_import
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
</UL>

<P><STRONG><a name="[5b4]"></a>am_hal_uart_char_transmit_buffered</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, am_hal_uart.o(i.am_hal_uart_char_transmit_buffered))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_queue_item_add
</UL>
<BR>[Called By]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_utc_time_set
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_positioning_algo
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_operation_mode
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_idle
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_hotstart
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_clodstart
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_backup_data_save
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_NMEA_RMC_GSA_GSV
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_NMEA_RMC_GSA
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_NMEA_RMC_GGA_GSA
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_NMEA_RMC
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_GNSS_mode
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_write
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_search
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_header
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_footer
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_erase
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_date
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_check
</UL>

<P><STRONG><a name="[5b5]"></a>am_hal_uart_clock_disable</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, am_hal_uart.o(i.am_hal_uart_clock_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = am_hal_uart_clock_disable &rArr; am_hal_clkgen_uarten_set
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_clkgen_uarten_set
</UL>
<BR>[Called By]<UL><LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_disable
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_disable
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bus_disable
</UL>

<P><STRONG><a name="[5b6]"></a>am_hal_uart_clock_enable</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, am_hal_uart.o(i.am_hal_uart_clock_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = am_hal_uart_clock_enable &rArr; am_hal_clkgen_uarten_set
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_clkgen_uarten_set
</UL>
<BR>[Called By]<UL><LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_enable
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bus_enable
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweron
</UL>

<P><STRONG><a name="[5b7]"></a>am_hal_uart_config</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, am_hal_uart.o(i.am_hal_uart_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = am_hal_uart_config &rArr; config_baudrate
</UL>
<BR>[Calls]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_clkgen_sysclk_get
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_baudrate
</UL>
<BR>[Called By]<UL><LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_enable
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bus_enable
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweron
</UL>

<P><STRONG><a name="[5b9]"></a>am_hal_uart_disable</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, am_hal_uart.o(i.am_hal_uart_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = am_hal_uart_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_disable
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_enable
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_disable
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bus_enable
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bus_disable
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweron
</UL>

<P><STRONG><a name="[5ba]"></a>am_hal_uart_enable</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, am_hal_uart.o(i.am_hal_uart_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = am_hal_uart_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_enable
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bus_enable
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweron
</UL>

<P><STRONG><a name="[664]"></a>am_hal_uart_fifo_config</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, am_hal_uart.o(i.am_hal_uart_fifo_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = am_hal_uart_fifo_config
</UL>
<BR>[Called By]<UL><LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_enable
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bus_enable
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweron
</UL>

<P><STRONG><a name="[6ec]"></a>am_hal_uart_flags_get</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, am_hal_uart.o(i.am_hal_uart_flags_get))
<BR><BR>[Called By]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_utc_time_set
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_positioning_algo
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_operation_mode
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_idle
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_hotstart
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_clodstart
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_backup_data_save
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_NMEA_RMC_GSA_GSV
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_NMEA_RMC_GSA
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_NMEA_RMC_GGA_GSA
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_NMEA_RMC
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_GNSS_mode
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_write
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_search
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_header
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_footer
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_erase
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_date
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_check
</UL>

<P><STRONG><a name="[5c7]"></a>am_hal_uart_get_status_buffered</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, am_hal_uart.o(i.am_hal_uart_get_status_buffered))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = am_hal_uart_get_status_buffered
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_uart_isr
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_uart1_isr
</UL>

<P><STRONG><a name="[5bb]"></a>am_hal_uart_init_buffered</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, am_hal_uart.o(i.am_hal_uart_init_buffered))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = am_hal_uart_init_buffered &rArr; am_hal_queue_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_queue_init
</UL>
<BR>[Called By]<UL><LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_enable
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bus_enable
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweron
</UL>

<P><STRONG><a name="[5c6]"></a>am_hal_uart_int_clear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, am_hal_uart.o(i.am_hal_uart_int_clear))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_uart_isr
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_disable
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_uart1_isr
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_enable
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_disable
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bus_enable
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bus_disable
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweron
</UL>

<P><STRONG><a name="[65e]"></a>am_hal_uart_int_disable</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, am_hal_uart.o(i.am_hal_uart_int_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = am_hal_uart_int_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_disable
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_disable
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bus_disable
</UL>

<P><STRONG><a name="[665]"></a>am_hal_uart_int_enable</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, am_hal_uart.o(i.am_hal_uart_int_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = am_hal_uart_int_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_enable
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bus_enable
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweron
</UL>

<P><STRONG><a name="[5c5]"></a>am_hal_uart_int_status_get</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, am_hal_uart.o(i.am_hal_uart_int_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_uart_isr
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_uart1_isr
</UL>

<P><STRONG><a name="[5bd]"></a>am_hal_uart_pwrctrl_disable</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, am_hal_uart.o(i.am_hal_uart_pwrctrl_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = am_hal_uart_pwrctrl_disable &rArr; am_hal_pwrctrl_periph_disable &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_periph_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_disable
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_disable
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bus_disable
</UL>

<P><STRONG><a name="[5be]"></a>am_hal_uart_pwrctrl_enable</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, am_hal_uart.o(i.am_hal_uart_pwrctrl_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = am_hal_uart_pwrctrl_enable &rArr; am_hal_pwrctrl_periph_enable &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_periph_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_enable
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bus_enable
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweron
</UL>

<P><STRONG><a name="[5bf]"></a>am_hal_uart_service_buffered_timeout_save</STRONG> (Thumb, 252 bytes, Stack size 32 bytes, am_hal_uart.o(i.am_hal_uart_service_buffered_timeout_save))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = am_hal_uart_service_buffered_timeout_save &rArr; am_hal_queue_item_get
</UL>
<BR>[Calls]<UL><LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_queue_item_get
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_queue_item_add
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_uart_isr
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_uart1_isr
</UL>

<P><STRONG><a name="[19]"></a>am_iomaster0_isr</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, isr_iom.o(i.am_iomaster0_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = am_iomaster0_isr &rArr; am_hal_iom_int_service &rArr; am_hal_iom_fifo_read
</UL>
<BR>[Calls]<UL><LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_int_status_get
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_int_service
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_int_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>am_iomaster1_isr</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, isr_iom.o(i.am_iomaster1_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = am_iomaster1_isr &rArr; am_hal_iom_int_service &rArr; am_hal_iom_fifo_read
</UL>
<BR>[Calls]<UL><LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_int_status_get
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_int_service
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_int_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>am_iomaster2_isr</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, isr_iom.o(i.am_iomaster2_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = am_iomaster2_isr &rArr; am_hal_iom_int_service &rArr; am_hal_iom_fifo_read
</UL>
<BR>[Calls]<UL><LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_int_status_get
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_int_service
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_int_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>am_iomaster3_isr</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, isr_iom.o(i.am_iomaster3_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = am_iomaster3_isr &rArr; am_hal_iom_int_service &rArr; am_hal_iom_fifo_read
</UL>
<BR>[Calls]<UL><LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_int_status_get
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_int_service
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_int_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>am_stimer_cmpr0_isr</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, port.o(i.am_stimer_cmpr0_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = am_stimer_cmpr0_isr &rArr; xPortStimerTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_stimer_int_clear
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStimerTickHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>am_systick_isr</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, port.o(i.am_systick_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = am_systick_isr &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>am_uart1_isr</STRONG> (Thumb, 306 bytes, Stack size 24 bytes, drv_ble.o(i.am_uart1_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = am_uart1_isr &rArr; am_hal_uart_service_buffered_timeout_save &rArr; am_hal_queue_item_get
</UL>
<BR>[Calls]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_service_buffered_timeout_save
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_int_status_get
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_get_status_buffered
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_receive_buffered
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_int_clear
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>am_uart_isr</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, isr_uart.o(i.am_uart_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = am_uart_isr &rArr; am_hal_uart_service_buffered_timeout_save &rArr; am_hal_queue_item_get
</UL>
<BR>[Calls]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_service_buffered_timeout_save
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_int_status_get
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_get_status_buffered
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_receive_buffered
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_int_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_keil.o(RESET)
</UL>
<P><STRONG><a name="[11e]"></a>am_util_delay_ms</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, am_util_delay.o(i.am_util_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = am_util_delay_ms &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_flash_delay
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_clkgen_sysclk_get
</UL>
<BR>[Called By]<UL><LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_enable
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_switch_lpm_to_hpm
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_switch_hpm_to_lpm
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_reset
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_discharge
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Poweron
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Poweroff
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayOff
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_te_irq_init
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_enable
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_data_get
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117x_Start
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_enable
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_all_auto_test
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_drv_init
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_clear_stepcount
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSensor
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sendCmd
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xFlushFIFO
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearStepCount
</UL>

<P><STRONG><a name="[92]"></a>am_util_faultisr_collect_data</STRONG> (Thumb, 732 bytes, Stack size 104 bytes, am_util_faultisr.o(i.am_util_faultisr_collect_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = am_util_faultisr_collect_data &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetErrCode
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplaySomeLine
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_mcuctrl_fault_status
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getStackedReg
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_fault_isr
</UL>

<P><STRONG><a name="[5cb]"></a>am_util_stopwatch_clear</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, am_util_stopwatch.o(i.am_util_stopwatch_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = am_util_stopwatch_clear &rArr; am_hal_rtc_time_get
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
</UL>
<BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_init
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_start
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_restart
</UL>

<P><STRONG><a name="[5cc]"></a>am_util_stopwatch_elapsed_get</STRONG> (Thumb, 72 bytes, Stack size 64 bytes, am_util_stopwatch.o(i.am_util_stopwatch_elapsed_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = am_util_stopwatch_elapsed_get &rArr; elapsed_time_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_format
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elapsed_time_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_btn_evt
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_stopwatch_time_get
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_countdown_real_time_get
</UL>

<P><STRONG><a name="[86b]"></a>am_util_stopwatch_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, am_util_stopwatch.o(i.am_util_stopwatch_init))
<BR><BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_btn_evt
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_menu_btn_evt
</UL>

<P><STRONG><a name="[5cf]"></a>am_util_stopwatch_restart</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, am_util_stopwatch.o(i.am_util_stopwatch_restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = am_util_stopwatch_restart &rArr; am_util_stopwatch_start &rArr; elapsed_time_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_start
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_btn_evt
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_menu_btn_evt
</UL>

<P><STRONG><a name="[5d0]"></a>am_util_stopwatch_start</STRONG> (Thumb, 80 bytes, Stack size 56 bytes, am_util_stopwatch.o(i.am_util_stopwatch_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = am_util_stopwatch_start &rArr; elapsed_time_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_clear
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elapsed_time_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_menu_btn_evt
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_btn_evt
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_exit_btn_evt
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_restart
</UL>

<P><STRONG><a name="[5d1]"></a>am_util_stopwatch_stop</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, am_util_stopwatch.o(i.am_util_stopwatch_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = am_util_stopwatch_stop &rArr; am_hal_rtc_time_get
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_btn_evt
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_time_btn_evt
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_stopwatch_overtime
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_countdown_finish
</UL>

<P><STRONG><a name="[14d]"></a>am_util_time_computeDayofWeek</STRONG> (Thumb, 210 bytes, Stack size 20 bytes, am_util_time.o(i.am_util_time_computeDayofWeek))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = am_util_time_computeDayofWeek
</UL>
<BR>[Called By]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_alarm_handler
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayMainData_Init
</UL>

<P><STRONG><a name="[75a]"></a>ambient_value_get</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, drv_ms5837.o(i.ambient_value_get))
<BR><BR>[Called By]<UL><LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_ambient
</UL>

<P><STRONG><a name="[521]"></a>atan</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, atan.o(i.atan))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = atan &rArr; __hardfp_atan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
</UL>

<P><STRONG><a name="[5de]"></a>back_remaindistance</STRONG> (Thumb, 308 bytes, Stack size 56 bytes, algo_trackjudge.o(i.back_remaindistance))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = back_remaindistance &rArr; trackjudge &rArr; findtrackindex &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trackjudge
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;partdistancerate
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findtrackindex
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance5Bit
</UL>
<BR>[Called By]<UL><LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_back_trackjudge
</UL>

<P><STRONG><a name="[5e6]"></a>ble_cod_sensor_data_trains</STRONG> (Thumb, 254 bytes, Stack size 304 bytes, task_ble.o(i.ble_cod_sensor_data_trains))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = ble_cod_sensor_data_trains &rArr; ble_uart_response_application_sensor_data_trains &rArr; drv_ble_send_data &rArr; drv_ble_timer_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_sensor_data_trains
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_cod_sensor
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
</UL>

<P><STRONG><a name="[5e8]"></a>ble_error_handler</STRONG> (Thumb, 256 bytes, Stack size 48 bytes, lib_error.o(i.ble_error_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 404 + Unknown Stack Size
<LI>Call Chain = ble_error_handler &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetErrCode
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplaySomeLine
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[626]"></a>ble_uart_ccommand_application_phone_call_ctrl</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, task_ble.o(i.ble_uart_ccommand_application_phone_call_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = ble_uart_ccommand_application_phone_call_ctrl &rArr; drv_ble_send_data &rArr; drv_ble_timer_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_app_msg_btn_evt
</UL>

<P><STRONG><a name="[4c2]"></a>ble_uart_ccommand_application_send_gps_test_data</STRONG> (Thumb, 132 bytes, Stack size 80 bytes, task_ble.o(i.ble_uart_ccommand_application_send_gps_test_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = ble_uart_ccommand_application_send_gps_test_data &rArr; drv_ble_send_data &rArr; drv_ble_timer_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
</UL>

<P><STRONG><a name="[64e]"></a>ble_uart_response_application_on_bind_device</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, task_ble.o(i.ble_uart_response_application_on_bind_device))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = ble_uart_response_application_on_bind_device &rArr; drv_ble_send_data &rArr; drv_ble_timer_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_on_bind_device_btn_evt
</UL>

<P><STRONG><a name="[3e7]"></a>ble_uart_response_application_real_time_log_trains</STRONG> (Thumb, 76 bytes, Stack size 288 bytes, task_ble.o(i.ble_uart_response_application_real_time_log_trains))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = ble_uart_response_application_real_time_log_trains &rArr; drv_ble_send_data &rArr; drv_ble_timer_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_sendout
</UL>

<P><STRONG><a name="[5e7]"></a>ble_uart_response_application_sensor_data_trains</STRONG> (Thumb, 76 bytes, Stack size 288 bytes, task_ble.o(i.ble_uart_response_application_sensor_data_trains))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = ble_uart_response_application_sensor_data_trains &rArr; drv_ble_send_data &rArr; drv_ble_timer_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_cod_sensor_data_trains
</UL>

<P><STRONG><a name="[650]"></a>ble_uart_response_application_sport_ctrl</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, task_ble.o(i.ble_uart_response_application_sport_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = ble_uart_response_application_sport_ctrl &rArr; drv_ble_send_data &rArr; drv_ble_timer_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_btn_evt
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_pause_btn_evt
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_btn_evt
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cast_pause_btn_evt
</UL>

<P><STRONG><a name="[55e]"></a>brighten_screen_entrance</STRONG> (Thumb, 1320 bytes, Stack size 80 bytes, algo_step_count.o(i.brighten_screen_entrance))
<BR><BR>[Stack]<UL><LI>Max Depth = 548 + Unknown Stack Size
<LI>Call Chain = brighten_screen_entrance &rArr; timer_notify_backlight_start &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_backlight_stop
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_backlight_start
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_swim_acc_fifo__data
</UL>

<P><STRONG><a name="[4e8]"></a>brighten_screen_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, algo_step_count.o(i.brighten_screen_init))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStep
</UL>

<P><STRONG><a name="[655]"></a>bsp_init</STRONG> (Thumb, 1474 bytes, Stack size 8 bytes, bsp.o(i.bsp_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bsp_init &rArr; bsp_iom_disable &rArr; am_hal_iom_pwrctrl_disable &rArr; am_hal_pwrctrl_periph_disable &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_5v_disable
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_3v3_disable
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_disable
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[658]"></a>bsp_iom_disable</STRONG> (Thumb, 740 bytes, Stack size 16 bytes, bsp_iom.o(i.bsp_iom_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = bsp_iom_disable &rArr; am_hal_iom_pwrctrl_disable &rArr; am_hal_pwrctrl_periph_disable &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_pwrctrl_disable
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_disable
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_disable
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_disable
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_disable
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_disable
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_disable
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rtc_i2c_disable
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_disable
</UL>

<P><STRONG><a name="[659]"></a>bsp_iom_enable</STRONG> (Thumb, 832 bytes, Stack size 32 bytes, bsp_iom.o(i.bsp_iom_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = bsp_iom_enable &rArr; am_hal_iom_config &rArr; iom_get_interface_clock_cfg &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_pwrctrl_enable
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_enable
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_config
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_enable
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_enable
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_enable
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_enable
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_enable
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rtc_i2c_enable
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_enable
</UL>

<P><STRONG><a name="[258]"></a>bsp_rtc_init</STRONG> (Thumb, 58 bytes, Stack size 48 bytes, bsp_rtc.o(i.bsp_rtc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = bsp_rtc_init &rArr; bsp_rtc_interrupt_set &rArr; am_hal_rtc_alarm_interval_set
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_set
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rtc_interrupt_set
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CaculateWeekDay
</UL>
<BR>[Called By]<UL><LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;First_Run_Config
</UL>

<P><STRONG><a name="[65b]"></a>bsp_rtc_interrupt_set</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bsp_rtc.o(i.bsp_rtc_interrupt_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = bsp_rtc_interrupt_set &rArr; am_hal_rtc_alarm_interval_set
</UL>
<BR>[Calls]<UL><LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_int_enable
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_int_clear
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_alarm_interval_set
</UL>
<BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_rtc_init
</UL>

<P><STRONG><a name="[65d]"></a>bsp_uart_disable</STRONG> (Thumb, 322 bytes, Stack size 16 bytes, bsp_uart.o(i.bsp_uart_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = bsp_uart_disable &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_pwrctrl_disable
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_int_disable
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_int_clear
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_disable
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_clock_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweroff
</UL>

<P><STRONG><a name="[667]"></a>cal_point_dis</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, algo_magn_cal.o(i.cal_point_dis))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = cal_point_dis &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_four_point
</UL>

<P><STRONG><a name="[4a8]"></a>cal_stable_heartrate</STRONG> (Thumb, 96 bytes, Stack size 20 bytes, algo_hdr.o(i.cal_stable_heartrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = cal_stable_heartrate
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[668]"></a>calculateDistanceFromPoint</STRONG> (Thumb, 1384 bytes, Stack size 264 bytes, algo_trackoptimizing.o(i.calculateDistanceFromPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = calculateDistanceFromPoint &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_raw_data_process_rn
</UL>

<P><STRONG><a name="[4e4]"></a>calculate_heartrate_recovery</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, task_sport.o(i.calculate_heartrate_recovery))
<BR><BR>[Stack]<UL><LI>Max Depth = 508 + Unknown Stack Size
<LI>Call Chain = calculate_heartrate_recovery &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TaskSportSta
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_start
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_10s_heartrate
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SaveSta
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSportTask
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[5e4]"></a>charging_timer_delete</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, drv_battery.o(i.charging_timer_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = charging_timer_delete &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_voltage_to_percent_charge
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[93b]"></a>charging_timer_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, drv_battery.o(i.charging_timer_get))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[5e3]"></a>charging_timer_start</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, drv_battery.o(i.charging_timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 596 + Unknown Stack Size
<LI>Call Chain = charging_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_voltage_to_percent_charge
</UL>

<P><STRONG><a name="[8dc]"></a>check_point</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, algo_magn_cal.o(i.check_point))
<BR><BR>[Called By]<UL><LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_cal_auto
</UL>

<P><STRONG><a name="[29b]"></a>clear1171int</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, si117x_config.o(i.clear1171int))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = clear1171int &rArr; Si117xGetIrqStatus &rArr; _sendCmd &rArr; Si117xWriteToRegister &rArr; drv_i2c_hw1_write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xWriteToRegister
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xSendCmd
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xGetIrqStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117x_Stop
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartRateMonitor_interrupt_handle
</UL>

<P><STRONG><a name="[676]"></a>close_difftime_rtc_gps_time</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, algo_time_calibration.o(i.close_difftime_rtc_gps_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = close_difftime_rtc_gps_time &rArr; CloseGPSTask &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseGPSTask
</UL>
<BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_realtime_difftime_evt
</UL>

<P><STRONG><a name="[554]"></a>cod_acc_sensitivity_conv</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, task_step.o(i.cod_acc_sensitivity_conv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = cod_acc_sensitivity_conv &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_swim_acc_fifo__data
</UL>

<P><STRONG><a name="[679]"></a>cod_bubble_sort</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, com_sport.o(i.cod_bubble_sort))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = cod_bubble_sort
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_store_gpsdata
</UL>

<P><STRONG><a name="[553]"></a>cod_gyro_sensitivity_conv</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, task_step.o(i.cod_gyro_sensitivity_conv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = cod_gyro_sensitivity_conv &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_swim_acc_fifo__data
</UL>

<P><STRONG><a name="[4d3]"></a>cod_store_gpsdata</STRONG> (Thumb, 2602 bytes, Stack size 144 bytes, com_sport.o(i.cod_store_gpsdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 652<LI>Call Chain = cod_store_gpsdata &rArr; Store_GPSData &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeSecond
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_data_get
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_altitude_to_press
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpspdop
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsStatus
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsLon
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsLat
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsAlt
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_GPSData
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_bubble_sort
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[5fe]"></a>cod_user_sensor_close</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, task_ble.o(i.cod_user_sensor_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = cod_user_sensor_close &rArr; drv_lsm6dsl_cod_close &rArr; drv_lsm6dsl_acc_init &rArr; drv_lsm6dsl_acc_lowpower &rArr; LSM6DSL_ACC_GYRO_W_LowPower_XL &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_close
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_close
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cod_sensor_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_sensor_data_trans
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_reset
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_disconnect
</UL>

<P><STRONG><a name="[631]"></a>cod_user_sensor_open</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, task_ble.o(i.cod_user_sensor_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = cod_user_sensor_open &rArr; drv_lsm6dsl_cod_open &rArr; drv_lsm6dsl_cod_fifo_init &rArr; LSM6DSL_ACC_GYRO_W_FIFO_Watermark &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_open
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cod_sensor_start
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_start
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_sensor_data_trans
</UL>

<P><STRONG><a name="[682]"></a>com_data_init</STRONG> (Thumb, 126 bytes, Stack size 96 bytes, com_data.o(i.com_data_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 836 + Unknown Stack Size
<LI>Call Chain = com_data_init &rArr; Get_TrainPlanDayRecord &rArr; get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanDayRecord
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_info_init
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Curr_Home_Num
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_m_AutoBackScreen
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_weekSteps
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Select_Home_Index
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modify_data_config
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_sport_data_del
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;First_Run_Config
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AmbientData_Read
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayMainData_Init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[688]"></a>com_dial_custom_delete</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, com_dial.o(i.com_dial_custom_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = com_dial_custom_delete &rArr; dev_extFlash_erase &rArr; drv_extFlash_sector_erase &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_btn_evt
</UL>

<P><STRONG><a name="[689]"></a>com_dial_custom_write</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, com_dial.o(i.com_dial_custom_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = com_dial_custom_write &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_btn_evt
</UL>

<P><STRONG><a name="[68a]"></a>com_dial_delete</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, com_dial.o(i.com_dial_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = com_dial_delete &rArr; dev_extFlash_erase &rArr; drv_extFlash_sector_erase &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_sport_data_del
</UL>

<P><STRONG><a name="[485]"></a>com_dial_festival_init</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, com_dial.o(i.com_dial_festival_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = com_dial_festival_init &rArr; com_dial_festival_is_valid &rArr; com_dial_is_valid &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_set_invalid
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_get
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_festival_is_valid
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDayMainData
</UL>

<P><STRONG><a name="[68b]"></a>com_dial_festival_is_valid</STRONG> (Thumb, 208 bytes, Stack size 72 bytes, com_dial.o(i.com_dial_festival_is_valid))
<BR><BR>[Stack]<UL><LI>Max Depth = 548<LI>Call Chain = com_dial_festival_is_valid &rArr; com_dial_is_valid &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_is_valid
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_init
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_festival_init
</UL>

<P><STRONG><a name="[63a]"></a>com_dial_get</STRONG> (Thumb, 1342 bytes, Stack size 16 bytes, com_dial.o(i.com_dial_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = com_dial_get &rArr; com_dial_is_valid &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_is_valid
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_read
</UL>
<BR>[Called By]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_init
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_btn_evt
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_btn_evt
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_update_bp_start
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_update_bp_finish
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_festival_init
</UL>

<P><STRONG><a name="[42c]"></a>com_dial_init</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, com_dial.o(i.com_dial_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = com_dial_init &rArr; com_dial_festival_is_valid &rArr; com_dial_is_valid &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_get
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_festival_is_valid
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RenewOneDay
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_face_finish
</UL>

<P><STRONG><a name="[639]"></a>com_dial_is_valid</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, com_dial.o(i.com_dial_is_valid))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = com_dial_is_valid &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_btn_evt
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_btn_evt
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_paint
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_update_bp_finish
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_get
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_festival_is_valid
</UL>

<P><STRONG><a name="[68d]"></a>com_dial_read</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, com_dial.o(i.com_dial_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = com_dial_read &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_get
</UL>

<P><STRONG><a name="[68c]"></a>com_dial_set_invalid</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, com_dial.o(i.com_dial_set_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = com_dial_set_invalid &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_btn_evt
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_festival_init
</UL>

<P><STRONG><a name="[684]"></a>com_sport_data_del</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, com_data.o(i.com_sport_data_del))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = com_sport_data_del &rArr; com_dial_delete &rArr; dev_extFlash_erase &rArr; drv_extFlash_sector_erase &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_data_init
</UL>

<P><STRONG><a name="[8f7]"></a>cross_mean</STRONG> (Thumb, 272 bytes, Stack size 16 bytes, algo_step_count.o(i.cross_mean))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cross_mean
</UL>
<BR>[Called By]<UL><LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedometer
</UL>

<P><STRONG><a name="[68e]"></a>decompressbmp16</STRONG> (Thumb, 418 bytes, Stack size 72 bytes, hfma2ylib.o(i.decompressbmp16))
<BR><BR>[Stack]<UL><LI>Max Depth = 628<LI>Call Chain = decompressbmp16 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;r_dat_bat
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unziphfmex
</UL>
<BR>[Called By]<UL><LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzbmp16
</UL>

<P><STRONG><a name="[690]"></a>decompressbmp24</STRONG> (Thumb, 492 bytes, Stack size 336 bytes, hfma2ylib.o(i.decompressbmp24))
<BR><BR>[Stack]<UL><LI>Max Depth = 892<LI>Call Chain = decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;r_dat_bat
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unziphfmex
</UL>
<BR>[Called By]<UL><LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzbmp24
</UL>

<P><STRONG><a name="[607]"></a>delete_all_day_steps</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, com_data.o(i.delete_all_day_steps))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = delete_all_day_steps &rArr; Store_all_day_time &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_day_steps_reinit
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_all_day_time
</UL>
<BR>[Called By]<UL><LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_delete_data
</UL>

<P><STRONG><a name="[691]"></a>dev_ble_init</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, task_ble.o(i.dev_ble_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dev_ble_init
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_tasks
</UL>

<P><STRONG><a name="[253]"></a>dev_ble_system_off</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, task_ble.o(i.dev_ble_system_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = dev_ble_system_off &rArr; task_ble_uninit &rArr; vTaskDelete &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ble_uninit
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pon
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_btn_evt
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Reset
<LI><a href="#[8c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_disable
</UL>

<P><STRONG><a name="[66c]"></a>dev_ble_system_on</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, task_ble.o(i.dev_ble_system_on))
<BR><BR>[Stack]<UL><LI>Max Depth = 580 + Unknown Stack Size
<LI>Call Chain = dev_ble_system_on &rArr; task_ble_init &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ble_init
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_btn_evt
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_enable
</UL>

<P><STRONG><a name="[fc]"></a>dev_extFlash_disable</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, drv_extflash.o(i.dev_extFlash_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = dev_extFlash_disable &rArr; drv_extFlash_pwr_down &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_pwr_down
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSport
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_data_init
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture_ExtFlash
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RenewOneDay
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_offline_ephemeris
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_detail_btn_evt
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_info_btn_evt
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteActivityRecord
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_set_invalid
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_custom_write
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_custom_delete
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_SetData
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSeaLevelPressure
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_track_mark
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadNavigation
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMotiontTrail
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SportTrack_GpsAddress
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTriathionGPSEndAddress
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trainplan_valid_flag
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_all_day_steps
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDayMainData
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanDayRecord
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_lle_import
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_plan_result_request_uuid
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_plan_request_uuid
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_weather_info_request
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_location_info
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_face_info_2
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_face_info
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_shard_track_header_write
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_shard_track_address_request
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_main_day_data_request
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_activity_address_request
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_ios
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_android
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Reset
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_get_watch_face_info_2
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_get_watch_face_info
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_flash_write_raw
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_flash_read_raw
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_flash_erase_raw
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extFlash_sector
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stores_Stroke
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_cod_StepData
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_cod_HeartRateData
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_SpeedData
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_GPSData
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_EnergyData
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_DistanceData
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_CircleTimeData
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_triathlon_cancel
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_all_day_steps
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_info_init
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_init
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_all_day_steps
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_is_valid
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsOpen_TrainPlan_Settings
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanResult
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_TimeCalibration
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCalibrationValueAndConfigAdjValue
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_AmbientData
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_SportsCaloriesWeekData
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_unread_msg_recogn
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_unread_msg_get
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_info_init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sport_detail_record
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_SportsStepWeekData
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_SportsDistanceWeekData
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_CommonStepWeekData
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_CommonDistanceWeekData
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_BasedHDRWeekData
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_sport_record
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSportDetail
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShareTrackDataGetFlash
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShareTrackDataEraseFlash
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityDataGetFlash
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_TranPlanUploadData
<LI><a href="#[8d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_magn_calibration_paremeter
<LI><a href="#[8de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_magn_calibration_paremeter
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_DotTrack
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_read
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_festival_is_valid
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_KiloMeter
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_delete
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_sport_data_del
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_all_day_time
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;First_Run_Config
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AmbientData_Read
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_ExFlash_DayMainData
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayMainData_Init
</UL>

<P><STRONG><a name="[fa]"></a>dev_extFlash_enable</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, drv_extflash.o(i.dev_extFlash_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = dev_extFlash_enable &rArr; drv_extFlash_pwr_up &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_pwr_up
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSport
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_data_init
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture_ExtFlash
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RenewOneDay
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_offline_ephemeris
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_detail_btn_evt
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_info_btn_evt
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteActivityRecord
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_set_invalid
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_custom_write
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_custom_delete
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_SetData
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSeaLevelPressure
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_track_mark
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadNavigation
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMotiontTrail
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SportTrack_GpsAddress
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTriathionGPSEndAddress
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trainplan_valid_flag
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_all_day_steps
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDayMainData
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanDayRecord
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_lle_import
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_plan_result_request_uuid
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_plan_request_uuid
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_weather_info_request
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_location_info
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_face_info_2
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_face_info
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_shard_track_header_write
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_shard_track_address_request
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_main_day_data_request
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_activity_address_request
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_ios
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_android
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Reset
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_get_watch_face_info_2
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_get_watch_face_info
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_flash_write_raw
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_flash_read_raw
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_flash_erase_raw
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extFlash_sector
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stores_Stroke
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_cod_StepData
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_cod_HeartRateData
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_SpeedData
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_GPSData
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_EnergyData
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_DistanceData
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_CircleTimeData
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_triathlon_cancel
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_all_day_steps
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_info_init
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_init
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_all_day_steps
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_is_valid
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsOpen_TrainPlan_Settings
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanResult
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_TimeCalibration
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCalibrationValueAndConfigAdjValue
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_AmbientData
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_SportsCaloriesWeekData
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_unread_msg_recogn
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_unread_msg_get
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_info_init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sport_detail_record
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_SportsStepWeekData
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_SportsDistanceWeekData
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_CommonStepWeekData
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_CommonDistanceWeekData
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_BasedHDRWeekData
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_sport_record
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSportDetail
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShareTrackDataGetFlash
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShareTrackDataEraseFlash
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityDataGetFlash
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_TranPlanUploadData
<LI><a href="#[8d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_magn_calibration_paremeter
<LI><a href="#[8de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_magn_calibration_paremeter
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_DotTrack
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_read
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_festival_is_valid
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_KiloMeter
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_delete
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_sport_data_del
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_all_day_time
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;First_Run_Config
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AmbientData_Read
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_ExFlash_DayMainData
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayMainData_Init
</UL>

<P><STRONG><a name="[698]"></a>dev_extFlash_enter_deep_sleep</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, drv_extflash.o(i.dev_extFlash_enter_deep_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = dev_extFlash_enter_deep_sleep &rArr; drv_extFlash_pwr_down &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_pwr_down
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_enable
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[150]"></a>dev_extFlash_erase</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, drv_extflash.o(i.dev_extFlash_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = dev_extFlash_erase &rArr; drv_extFlash_sector_erase &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_sector_erase
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_64K_erase
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_32K_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RenewOneDay
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_custom_write
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_custom_delete
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_SetData
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDayMainData
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_weather_info_request
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_location_info
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_ios
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_android
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Reset
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_flash_erase_raw
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extFlash_sector
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stores_Stroke
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_cod_StepData
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_cod_HeartRateData
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_SpeedData
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_GPSData
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_EnergyData
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_DistanceData
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_CircleTimeData
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_all_day_steps
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_TimeCalibration
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_AmbientData
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShareTrackDataEraseFlash
<LI><a href="#[8d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_magn_calibration_paremeter
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_DotTrack
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_KiloMeter
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_delete
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_sport_data_del
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;First_Run_Config
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayMainData_Init
</UL>

<P><STRONG><a name="[fb]"></a>dev_extFlash_read</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, drv_extflash.o(i.dev_extFlash_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_data_init
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture_ExtFlash
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_offline_ephemeris
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_detail_btn_evt
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteActivityRecord
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSeaLevelPressure
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_track_mark
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadNavigation
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMotiontTrail
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SportTrack_GpsAddress
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTriathionGPSEndAddress
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trainplan_valid_flag
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanDayRecord
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_lle_import
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_plan_result_request_uuid
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_plan_request_uuid
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_weather_info_request
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_location_info
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_face_info_2
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_face_info
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_shard_track_address_request
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_main_day_data_request
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_activity_address_request
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_ios
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_android
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_get_watch_face_info_2
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_get_watch_face_info
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_flash_write_raw
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_flash_read_raw
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extFlash_sector
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_triathlon_cancel
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_all_day_steps
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_info_init
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_init
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_is_valid
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsOpen_TrainPlan_Settings
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanResult
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCalibrationValueAndConfigAdjValue
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_SportsCaloriesWeekData
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_unread_msg_recogn
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_unread_msg_get
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_info_init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sport_detail_record
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_SportsStepWeekData
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_SportsDistanceWeekData
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_CommonStepWeekData
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_CommonDistanceWeekData
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_BasedHDRWeekData
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_sport_record
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSportDetail
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShareTrackDataGetFlash
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityDataGetFlash
<LI><a href="#[8de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_magn_calibration_paremeter
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_read
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_festival_is_valid
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AmbientData_Read
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayMainData_Init
</UL>

<P><STRONG><a name="[151]"></a>dev_extFlash_write</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, drv_extflash.o(i.dev_extFlash_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_write
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSport
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RenewOneDay
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_info_btn_evt
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteActivityRecord
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_set_invalid
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_custom_write
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_SetData
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_all_day_steps
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDayMainData
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanDayRecord
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_weather_info_request
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_location_info
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_shard_track_header_write
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_ios
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_android
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_flash_write_raw
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extFlash_sector
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Stores_Stroke
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_cod_StepData
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_cod_HeartRateData
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_SpeedData
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_GPSData
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_EnergyData
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_DistanceData
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_CircleTimeData
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_triathlon_cancel
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_AmbientData
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_TranPlanUploadData
<LI><a href="#[8d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_magn_calibration_paremeter
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_DotTrack
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_KiloMeter
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_all_day_time
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;First_Run_Config
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_ExFlash_DayMainData
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayMainData_Init
</UL>

<P><STRONG><a name="[29e]"></a>dev_hrt_acc_fifo_data</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, drv_lsm6dsl.o(i.dev_hrt_acc_fifo_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = dev_hrt_acc_fifo_data &rArr; LSM6DSL_ACC_GYRO_R_FIFONumOfEntries &rArr; LSM6DSL_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; am_hal_iom_i2c_read &rArr; am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_put
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_is_full
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_get
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_data_left
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_R_FIFONumOfEntries
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_Get_GetFIFOData
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartRateMonitor_interrupt_handle
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[69d]"></a>dev_hrt_acc_init</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, drv_lsm6dsl.o(i.dev_hrt_acc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = dev_hrt_acc_init &rArr; LSM6DSL_ACC_GYRO_W_SW_RESET &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_SW_RESET
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_ODR_XL
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_ODR_G
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_IF_Addr_Incr
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_FS_XL
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_FIFO_MODE
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_BDU
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_R_WHO_AM_I
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[69e]"></a>dev_hrt_acc_pwron</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, drv_lsm6dsl.o(i.dev_hrt_acc_pwron))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = dev_hrt_acc_pwron &rArr; LSM6DSL_ACC_GYRO_W_ODR_XL &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_ODR_XL
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_ODR_FIFO
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_LowPower_XL
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_FIFO_MODE
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_DEC_FIFO_XL
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[69f]"></a>draw_track_mark</STRONG> (Thumb, 388 bytes, Stack size 56 bytes, com_sport.o(i.draw_track_mark))
<BR><BR>[Stack]<UL><LI>Max Depth = 1420<LI>Call Chain = draw_track_mark &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_marathon_track_update_paint
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_walk_track_update_paint
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_track_update_paint
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_track_update_paint
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_hike_track_update_paint
<LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_1_track
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_track_update_paint
</UL>

<P><STRONG><a name="[552]"></a>drv_acc_gyro_clear_fifo</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, task_step.o(i.drv_acc_gyro_clear_fifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = drv_acc_gyro_clear_fifo &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_R_FIFONumOfEntries
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_Get_GetFIFOData
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_swim_acc_fifo__data
</UL>

<P><STRONG><a name="[4f8]"></a>drv_alarm_handler</STRONG> (Thumb, 692 bytes, Stack size 48 bytes, drv_alarm.o(i.drv_alarm_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 596 + Unknown Stack Size
<LI>Call Chain = drv_alarm_handler &rArr; timer_notify_remind_start &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_start
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_time_computeDayofWeek
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
</UL>

<P><STRONG><a name="[4a5]"></a>drv_bat_adc_enable</STRONG> (Thumb, 276 bytes, Stack size 32 bytes, drv_battery.o(i.drv_bat_adc_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = drv_bat_adc_enable &rArr; am_hal_pwrctrl_periph_enable &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_periph_enable
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_adc_trigger
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_adc_slot_config
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_adc_int_enable
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_adc_enable
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_adc_config
</UL>
<BR>[Called By]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[6a5]"></a>drv_bat_init</STRONG> (Thumb, 766 bytes, Stack size 48 bytes, drv_battery.o(i.drv_bat_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = drv_bat_init &rArr; timer_battery_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_register
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_enable
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_clear
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_battery_start
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_voltage_flag_set
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_adc_enable
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_battery_init
</UL>

<P><STRONG><a name="[6a8]"></a>drv_bat_management</STRONG> (Thumb, 614 bytes, Stack size 32 bytes, drv_battery.o(i.drv_bat_management))
<BR><BR>[Stack]<UL><LI>Max Depth = 684 + Unknown Stack Size
<LI>Call Chain = drv_bat_management &rArr; batt_voltage_to_percent_charge &rArr; charging_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_voltage_flag_get
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bubble_sort
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_voltage_to_percent_release
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_voltage_to_percent_charge
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_to_batt_voltage
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[6ab]"></a>drv_ble_init</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, drv_ble.o(i.drv_ble_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = drv_ble_init &rArr; am_hal_gpio_int_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_register
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_enable
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ble_init
</UL>

<P><STRONG><a name="[6ac]"></a>drv_ble_on_cts_high</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, drv_ble.o(i.drv_ble_on_cts_high))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = drv_ble_on_cts_high &rArr; drv_ble_timer_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_timer_stop
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_timer_start
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_enable
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[6b1]"></a>drv_ble_on_cts_low</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, drv_ble.o(i.drv_ble_on_cts_low))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = drv_ble_on_cts_low &rArr; drv_ble_timer_stop &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_timer_stop
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[5d6]"></a>drv_ble_send_data</STRONG> (Thumb, 188 bytes, Stack size 8 bytes, drv_ble.o(i.drv_ble_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = drv_ble_send_data &rArr; drv_ble_timer_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_timer_stop
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_timer_start
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_enable
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ble_init
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_btn_evt
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_menu_btn_evt
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_btn_evt
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_real_time_log_trains
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_findwatch_response
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_send_gps_test_data
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_accessory_data_upload
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_mac_write
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_mac_read
<LI><a href="#[8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_rssi_read_stop
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_rssi_read
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_info_read
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_extflash_read
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_event_handle
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_sport_ctrl
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_sensor_data_trains
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_on_bind_device
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_phone_call_ctrl
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_cod
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_timer_start
</UL>

<P><STRONG><a name="[6b3]"></a>drv_ble_timer_init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, drv_ble.o(i.drv_ble_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 588 + Unknown Stack Size
<LI>Call Chain = drv_ble_timer_init &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_tasks
</UL>

<P><STRONG><a name="[6ae]"></a>drv_ble_timer_start</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, drv_ble.o(i.drv_ble_timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = drv_ble_timer_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_on_cts_high
</UL>

<P><STRONG><a name="[6ad]"></a>drv_ble_timer_stop</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, drv_ble.o(i.drv_ble_timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = drv_ble_timer_stop &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_on_cts_low
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_on_cts_high
</UL>

<P><STRONG><a name="[6b4]"></a>drv_ble_timer_uninit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, drv_ble.o(i.drv_ble_timer_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = drv_ble_timer_uninit &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
</UL>

<P><STRONG><a name="[5c8]"></a>drv_ble_uart_close</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, drv_ble.o(i.drv_ble_uart_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = drv_ble_uart_close &rArr; uart_disable &rArr; am_hal_uart_pwrctrl_disable &rArr; am_hal_pwrctrl_periph_disable &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_uart1_isr
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_rssi_read_stop_response
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_rssi_read_response
<LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_info_read_response
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_extflash_read_response
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_find_phone
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_presonse_application_ble_info
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_update_bp_finish
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_update_apgs_time
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_rt_data_trans
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_real_time_log_trans
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_on_bind_device
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_mac_write
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_mac_read
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_dev_name_update
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_passkey
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_connect
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_bond
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_ios
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_accessory_running_disconnect
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_accessory_running_connect
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_accessory_heartrate_disconnect
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_accessory_heartrate_connect
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_accessory_data_upload
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_accessory_cycling_disconnect
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_accessory_cycling_connect
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_user_sensor_close
</UL>

<P><STRONG><a name="[6b5]"></a>drv_ble_uart_close_on_ble_sys_off</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, drv_ble.o(i.drv_ble_uart_close_on_ble_sys_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = drv_ble_uart_close_on_ble_sys_off &rArr; uart_disable &rArr; am_hal_uart_pwrctrl_disable &rArr; am_hal_pwrctrl_periph_disable &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_disable
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_clear
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ble_uninit
</UL>

<P><STRONG><a name="[5eb]"></a>drv_ble_uart_put</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, drv_ble.o(i.drv_ble_uart_put))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = drv_ble_uart_put &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[8f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_jump_bootloader
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_plan_write_address_request
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_plan_result_write_address_request
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_plan_result_request_uuid
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_plan_result_read_address_request
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_plan_request_uuid
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_plan_read_address_request
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_notify_switch
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_wechat_sport_data_request
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_weather_info_request
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_update_bp_start
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_training_cast
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_sports_param_write
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_sports_param_read
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_sport_cast
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_rest_heartrate
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_phone_call_status
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_phone_call_delay
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_personal_info_write
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_personal_info_read
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_location_info
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_info_bat
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_info_apollo2
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_face_info_2
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_face_info
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_face_finish
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_face_activate
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_default_sport_mode
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_calculate_param_write
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_calculate_param_read
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_find_watch
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_train_plan_result_erase_address_request
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_train_plan_erase_address_request
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_shard_track_header_write
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_shard_track_address_request
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_main_day_data_request
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_astro_sync_request
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_activity_address_request
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_activity_address_boundary_request
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_delete_data
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_data_frame_num
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_current_time_write
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_current_time_read
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_bind_status
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_android
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_app_ble_dfu_start
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_app_ble_dfu_finish
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_app_ble_dfu_apollo_reset_n_activate
</UL>

<P><STRONG><a name="[6a9]"></a>drv_bubble_sort</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, drv_battery.o(i.drv_bubble_sort))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = drv_bubble_sort
</UL>
<BR>[Called By]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_management
</UL>

<P><STRONG><a name="[670]"></a>drv_buzzer_disable</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, drv_buzzer.o(i.drv_buzzer_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = drv_buzzer_disable &rArr; am_hal_ctimer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_buzzer_disable
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback_buzzer
</UL>

<P><STRONG><a name="[671]"></a>drv_buzzer_enable</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, drv_buzzer.o(i.drv_buzzer_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = drv_buzzer_enable &rArr; am_hal_ctimer_config_single &rArr; timers_use_hfrc &rArr; ctimer_source_hfrc
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_start
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_period_set
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_config_single
</UL>
<BR>[Called By]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_buzzer_enable
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback_buzzer
</UL>

<P><STRONG><a name="[411]"></a>drv_clearHdrValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, drv_hrt.o(i.drv_clearHdrValue))
<BR><BR>[Called By]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySport
</UL>

<P><STRONG><a name="[17d]"></a>drv_getHdrValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, drv_hrt.o(i.drv_getHdrValue))
<BR><BR>[Called By]<UL><LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_heart_paint
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_pause_paint
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Sport_Heart
<LI><a href="#[92e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_heartrate
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_cod_sensor
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
</UL>

<P><STRONG><a name="[38f]"></a>drv_gt24l24_ascii_getdata</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, drv_gt24l24.o(i.drv_gt24l24_ascii_getdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = drv_gt24l24_ascii_getdata &rArr; ASCII_GetData &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ASCII_GetData
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_wakeup
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_sleep
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_enable
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
</UL>

<P><STRONG><a name="[6ba]"></a>drv_gt24l24_disable</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, drv_gt24l24.o(i.drv_gt24l24_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = drv_gt24l24_disable &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_disable
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_self_test
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_gb_getdata
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_ascii_getdata
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_utf8_gbk
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_utf16_gbk
</UL>

<P><STRONG><a name="[6b7]"></a>drv_gt24l24_enable</STRONG> (Thumb, 250 bytes, Stack size 8 bytes, drv_gt24l24.o(i.drv_gt24l24_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = drv_gt24l24_enable &rArr; bsp_iom_enable &rArr; am_hal_iom_config &rArr; iom_get_interface_clock_cfg &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_enable
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_self_test
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_gb_getdata
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_ascii_getdata
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_utf8_gbk
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_utf16_gbk
</UL>

<P><STRONG><a name="[38d]"></a>drv_gt24l24_gb_getdata</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, drv_gt24l24.o(i.drv_gt24l24_gb_getdata))
<BR><BR>[Stack]<UL><LI>Max Depth = 1028<LI>Call Chain = drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzbmp24
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzbmp16
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_wakeup
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_sleep
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_enable
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
</UL>

<P><STRONG><a name="[6bd]"></a>drv_gt24l24_self_test</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, drv_gt24l24.o(i.drv_gt24l24_self_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = drv_gt24l24_self_test &rArr; ASCII_GetData &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ASCII_GetData
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_enable
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_disable
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_font_read
</UL>

<P><STRONG><a name="[6b9]"></a>drv_gt24l24_sleep</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, drv_gt24l24.o(i.drv_gt24l24_sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = drv_gt24l24_sleep &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_gb_getdata
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_ascii_getdata
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_utf8_gbk
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_utf16_gbk
</UL>

<P><STRONG><a name="[6b8]"></a>drv_gt24l24_wakeup</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, drv_gt24l24.o(i.drv_gt24l24_wakeup))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = drv_gt24l24_wakeup &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_gb_getdata
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_ascii_getdata
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_utf8_gbk
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_utf16_gbk
</UL>

<P><STRONG><a name="[657]"></a>drv_hrt_3v3_disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, drv_hrt.o(i.drv_hrt_3v3_disable))
<BR><BR>[Called By]<UL><LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_disable
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_all_auto_test
</UL>

<P><STRONG><a name="[6c0]"></a>drv_hrt_3v3_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, drv_hrt.o(i.drv_hrt_3v3_enable))
<BR><BR>[Called By]<UL><LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_enable
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_all_auto_test
</UL>

<P><STRONG><a name="[656]"></a>drv_hrt_5v_disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, drv_hrt.o(i.drv_hrt_5v_disable))
<BR><BR>[Called By]<UL><LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_suspend
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_disable
</UL>

<P><STRONG><a name="[6c4]"></a>drv_hrt_5v_enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, drv_hrt.o(i.drv_hrt_5v_enable))
<BR><BR>[Called By]<UL><LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_restart
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_enable
</UL>

<P><STRONG><a name="[6bf]"></a>drv_hrt_all_auto_test</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, drv_hrt.o(i.drv_hrt_all_auto_test))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = drv_hrt_all_auto_test &rArr; Si117x_checkstart &rArr; Si117xReadFromRegister &rArr; drv_i2c_hw1_read &rArr; am_hal_iom_i2c_read &rArr; am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_3v3_disable
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_enable
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_disable
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117x_checkstart
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_3v3_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_init
</UL>

<P><STRONG><a name="[6c1]"></a>drv_hrt_disable</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, drv_hrt.o(i.drv_hrt_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = drv_hrt_disable &rArr; Si117x_Stop &rArr; clear1171int &rArr; Si117xGetIrqStatus &rArr; _sendCmd &rArr; Si117xWriteToRegister &rArr; drv_i2c_hw1_write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_5v_disable
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_3v3_disable
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_enable
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_disable
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117x_Stop
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_irq_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[6c3]"></a>drv_hrt_enable</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, drv_hrt.o(i.drv_hrt_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = drv_hrt_enable &rArr; Si117x_Start &rArr; Si117xParamSet &rArr; _sendCmd &rArr; Si117xWriteToRegister &rArr; drv_i2c_hw1_write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_enable
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_disable
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117x_Start
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OHRL_init
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OHRL_GetLEDcurrent
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsHeartSportMode
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Initial_Pedometer
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_irq_enable
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_5v_enable
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_3v3_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[6c6]"></a>drv_hrt_init</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, drv_hrt.o(i.drv_hrt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = drv_hrt_init &rArr; drv_hrt_all_auto_test &rArr; Si117x_checkstart &rArr; Si117xReadFromRegister &rArr; drv_i2c_hw1_read &rArr; am_hal_iom_i2c_read &rArr; am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_all_auto_test
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_irq_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[6c8]"></a>drv_hrt_int_handler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, drv_hrt.o(i.drv_hrt_int_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 1288<LI>Call Chain = drv_hrt_int_handler &rArr; HeartRateMonitor_interrupt_handle &rArr; OHRL_algorithm &rArr; _ohr_algorithm &rArr; doOHRLAlgorithm &rArr; __hardfp_floor &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartRateMonitor_interrupt_handle
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Log_sendout
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[6c2]"></a>drv_hrt_irq_disable</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, drv_hrt.o(i.drv_hrt_irq_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = drv_hrt_irq_disable &rArr; am_hal_gpio_int_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_disable
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_close
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[6c5]"></a>drv_hrt_irq_enable</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, drv_hrt.o(i.drv_hrt_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_hrt_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_restart
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_enable
</UL>

<P><STRONG><a name="[6c9]"></a>drv_hrt_restart</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, drv_hrt.o(i.drv_hrt_restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = drv_hrt_restart &rArr; Si117x_Start &rArr; Si117xParamSet &rArr; _sendCmd &rArr; Si117xWriteToRegister &rArr; drv_i2c_hw1_write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_enable
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_disable
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117x_Start
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OHRL_GetLEDcurrent
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsHeartSportMode
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_irq_enable
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_5v_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[6ca]"></a>drv_hrt_suspend</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, drv_hrt.o(i.drv_hrt_suspend))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = drv_hrt_suspend &rArr; Si117x_Stop &rArr; clear1171int &rArr; Si117xGetIrqStatus &rArr; _sendCmd &rArr; Si117xWriteToRegister &rArr; drv_i2c_hw1_write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_5v_disable
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_enable
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_disable
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117x_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[29d]"></a>drv_i2c_hw1_disable</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, si117x_functions.o(i.drv_i2c_hw1_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = drv_i2c_hw1_disable &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_power_off_save
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartRateMonitor_interrupt_handle
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_suspend
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_restart
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_enable
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_disable
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_all_auto_test
</UL>

<P><STRONG><a name="[29a]"></a>drv_i2c_hw1_enable</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, si117x_functions.o(i.drv_i2c_hw1_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = drv_i2c_hw1_enable &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_power_on_restore
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartRateMonitor_interrupt_handle
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_suspend
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_restart
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_enable
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_disable
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_all_auto_test
</UL>

<P><STRONG><a name="[6cb]"></a>drv_i2c_hw1_init</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, si117x_functions.o(i.drv_i2c_hw1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = drv_i2c_hw1_init &rArr; am_hal_iom_config &rArr; iom_get_interface_clock_cfg &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_pwrctrl_enable
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_enable
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_config
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_power_off_save
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[45e]"></a>drv_i2c_hw1_read</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, si117x_functions.o(i.drv_i2c_hw1_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = drv_i2c_hw1_read &rArr; am_hal_iom_i2c_read &rArr; am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_read
</UL>
<BR>[Called By]<UL><LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xReadFromRegister
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xBlockRead
</UL>

<P><STRONG><a name="[469]"></a>drv_i2c_hw1_write</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, si117x_functions.o(i.drv_i2c_hw1_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = drv_i2c_hw1_write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write
</UL>
<BR>[Called By]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xWriteToRegister
</UL>

<P><STRONG><a name="[6cc]"></a>drv_intFlash_erase_page</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, drv_intflash.o(i.drv_intFlash_erase_page))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = drv_intFlash_erase_page &rArr; am_hal_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_flash_page_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_app_data_erase
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_app_data_write
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_boot_setting_write
</UL>

<P><STRONG><a name="[6cf]"></a>drv_intFlash_write_page</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, drv_intflash.o(i.drv_intFlash_write_page))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = drv_intFlash_write_page &rArr; am_hal_flash_program_main
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_flash_program_main
</UL>
<BR>[Called By]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_app_data_write
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_boot_setting_write
</UL>

<P><STRONG><a name="[143]"></a>drv_key_init</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, drv_key.o(i.drv_key_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = drv_key_init &rArr; timer_create &rArr; am_hal_ctimer_config_single &rArr; timers_use_hfrc &rArr; ctimer_source_hfrc
</UL>
<BR>[Calls]<UL><LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_create
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_apollo2_gpio_int_init
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_register
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateKeyTask
</UL>

<P><STRONG><a name="[398]"></a>drv_lcd_block_data_write</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, drv_lcd.o(i.drv_lcd_block_data_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = drv_lcd_block_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplaySomeLine
</UL>

<P><STRONG><a name="[392]"></a>drv_lcd_ctrl_write</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, drv_lcd.o(i.drv_lcd_ctrl_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = drv_lcd_ctrl_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplaySomeLine
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_switch_lpm_to_hpm
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_switch_hpm_to_lpm
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_discharge
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayOff
</UL>

<P><STRONG><a name="[397]"></a>drv_lcd_data_write</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, drv_lcd.o(i.drv_lcd_data_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplaySomeLine
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_switch_lpm_to_hpm
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_switch_hpm_to_lpm
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[393]"></a>drv_lcd_disable</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, drv_lcd.o(i.drv_lcd_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = drv_lcd_disable &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_disable
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplaySomeLine
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_discharge
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayOff
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_enable
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_lcd
</UL>

<P><STRONG><a name="[39e]"></a>drv_lcd_discharge</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, drv_lcd.o(i.drv_lcd_discharge))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = drv_lcd_discharge &rArr; drv_lcd_ctrl_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_enable
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_disable
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_ctrl_write
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[391]"></a>drv_lcd_enable</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, drv_lcd.o(i.drv_lcd_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = drv_lcd_enable &rArr; bsp_iom_enable &rArr; am_hal_iom_config &rArr; iom_get_interface_clock_cfg &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_enable
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplaySomeLine
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_discharge
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayOff
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_enable
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_lcd
</UL>

<P><STRONG><a name="[39d]"></a>drv_lcd_reset</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, drv_lcd.o(i.drv_lcd_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = drv_lcd_reset &rArr; am_util_delay_ms &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[6d2]"></a>drv_lcd_switch_hpm_to_lpm</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, drv_lcd.o(i.drv_lcd_switch_hpm_to_lpm))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = drv_lcd_switch_hpm_to_lpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_data_write
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_ctrl_write
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_lcd
</UL>

<P><STRONG><a name="[395]"></a>drv_lcd_switch_lpm_to_hpm</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, drv_lcd.o(i.drv_lcd_switch_lpm_to_hpm))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_data_write
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_ctrl_write
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplaySomeLine
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_enable
</UL>

<P><STRONG><a name="[38e]"></a>drv_lcdram_map</STRONG> (Thumb, 1222 bytes, Stack size 40 bytes, drv_gt24l24.o(i.drv_lcdram_map))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = drv_lcdram_map
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
</UL>

<P><STRONG><a name="[4c8]"></a>drv_light_disable</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, drv_light.o(i.drv_light_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = drv_light_disable &rArr; timer_lcd_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_lcd_start
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_backlight_stop
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_find_watch_btn_evt
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskKey
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_find_watch
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_backlight_disable
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback_backlight
</UL>

<P><STRONG><a name="[4c9]"></a>drv_light_enable</STRONG> (Thumb, 260 bytes, Stack size 8 bytes, drv_light.o(i.drv_light_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = drv_light_enable &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_lcd_light_te_high
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_switch_lpm_to_hpm
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_enable
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_disable
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_start
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_period_set
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_config_single
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskKey
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_find_watch
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_backlight_enable
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_backlight_start
</UL>

<P><STRONG><a name="[6d4]"></a>drv_lis3mdl_bubble_get</STRONG> (Thumb, 288 bytes, Stack size 40 bytes, algo_magn_cal.o(i.drv_lis3mdl_bubble_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = drv_lis3mdl_bubble_get
</UL>
<BR>[Calls]<UL><LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_bubble_set
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
</UL>

<P><STRONG><a name="[6d6]"></a>drv_lis3mdl_data</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, drv_lis3mdl.o(i.drv_lis3mdl_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = drv_lis3mdl_data &rArr; lis3mdl_reg_read &rArr; am_hal_iom_i2c_read &rArr; am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis3mdl_reg_read
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_read
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_compass_read
</UL>

<P><STRONG><a name="[6d8]"></a>drv_lis3mdl_disable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, drv_lis3mdl.o(i.drv_lis3mdl_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = drv_lis3mdl_disable &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_disable
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_standby
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_reset
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_dev_para_init
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_compass_read
</UL>

<P><STRONG><a name="[6d9]"></a>drv_lis3mdl_enable</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, drv_lis3mdl.o(i.drv_lis3mdl_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = drv_lis3mdl_enable &rArr; bsp_iom_enable &rArr; am_hal_iom_config &rArr; iom_get_interface_clock_cfg &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_enable
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_standby
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_reset
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_dev_para_init
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_compass_read
</UL>

<P><STRONG><a name="[400]"></a>drv_lis3mdl_reset</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, drv_lis3mdl.o(i.drv_lis3mdl_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = drv_lis3mdl_reset &rArr; lis3mdl_reg_write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_enable
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_disable
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis3mdl_reg_write
</UL>
<BR>[Called By]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_drv_init
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_compass_enable
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSensor
</UL>

<P><STRONG><a name="[129]"></a>drv_lis3mdl_standby</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, drv_lis3mdl.o(i.drv_lis3mdl_standby))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = drv_lis3mdl_standby &rArr; lis3mdl_reg_write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_enable
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_disable
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis3mdl_reg_write
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTools
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_compass_disable
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSport
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSensor
</UL>

<P><STRONG><a name="[6db]"></a>drv_lsm6dsl_acc_axes_raw</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, drv_lsm6dsl.o(i.drv_lsm6dsl_acc_axes_raw))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = drv_lsm6dsl_acc_axes_raw &rArr; LSM6DSL_ACC_GYRO_GetRawAccData &rArr; LSM6DSL_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; am_hal_iom_i2c_read &rArr; am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_GetRawAccData
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gsensor_read
</UL>

<P><STRONG><a name="[121]"></a>drv_lsm6dsl_acc_fifo_init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, drv_lsm6dsl.o(i.drv_lsm6dsl_acc_fifo_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = drv_lsm6dsl_acc_fifo_init &rArr; LSM6DSL_ACC_GYRO_W_FIFO_Watermark &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_STOP_ON_FTH
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_ODR_FIFO
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_FIFO_Watermark
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_FIFO_MODE
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_DEC_FIFO_XL
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_DEC_FIFO_G
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStep
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_close
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSport
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSensor
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearStepCount
</UL>

<P><STRONG><a name="[11d]"></a>drv_lsm6dsl_acc_init</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, drv_lsm6dsl.o(i.drv_lsm6dsl_acc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = drv_lsm6dsl_acc_init &rArr; drv_lsm6dsl_acc_lowpower &rArr; LSM6DSL_ACC_GYRO_W_LowPower_XL &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_lowpower
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SIM
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_WriteReg
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_WK_THS
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_WAKE_DUR
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_SW_RESET
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_SLEEP_DUR
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_PULL_UP_EN
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStep
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gsensor_enable
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_close
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSport
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSensor
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearStepCount
</UL>

<P><STRONG><a name="[6dc]"></a>drv_lsm6dsl_acc_lowpower</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, drv_lsm6dsl.o(i.drv_lsm6dsl_acc_lowpower))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = drv_lsm6dsl_acc_lowpower &rArr; LSM6DSL_ACC_GYRO_W_LowPower_XL &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_LowPower_XL
</UL>
<BR>[Called By]<UL><LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_acc_init
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_init
</UL>

<P><STRONG><a name="[6dd]"></a>drv_lsm6dsl_acc_powerdown</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, drv_lsm6dsl.o(i.drv_lsm6dsl_acc_powerdown))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = drv_lsm6dsl_acc_powerdown &rArr; LSM6DSL_ACC_GYRO_W_ODR_XL &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_ODR_XL
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gsensor_disable
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_open
</UL>

<P><STRONG><a name="[11f]"></a>drv_lsm6dsl_clear_stepcount</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, drv_lsm6dsl.o(i.drv_lsm6dsl_clear_stepcount))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = drv_lsm6dsl_clear_stepcount &rArr; LSM6DSL_ACC_GYRO_W_PedoStepReset &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_PedoStepReset
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearStepCount
</UL>

<P><STRONG><a name="[6de]"></a>drv_lsm6dsl_cod_acc_init</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, drv_lsm6dsl.o(i.drv_lsm6dsl_cod_acc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = drv_lsm6dsl_cod_acc_init &rArr; drv_lsm6dsl_acc_lowpower &rArr; LSM6DSL_ACC_GYRO_W_LowPower_XL &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_lowpower
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SIM
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_WriteReg
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_WK_THS
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_WAKE_DUR
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_SW_RESET
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_SLEEP_DUR
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_PULL_UP_EN
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_open
</UL>

<P><STRONG><a name="[67b]"></a>drv_lsm6dsl_cod_close</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, drv_lsm6dsl.o(i.drv_lsm6dsl_cod_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = drv_lsm6dsl_cod_close &rArr; drv_lsm6dsl_acc_init &rArr; drv_lsm6dsl_acc_lowpower &rArr; LSM6DSL_ACC_GYRO_W_LowPower_XL &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_gyro_powerdown
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_fifo_uninit
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_init
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_fifo_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_user_sensor_close
</UL>

<P><STRONG><a name="[6df]"></a>drv_lsm6dsl_cod_fifo_init</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, drv_lsm6dsl.o(i.drv_lsm6dsl_cod_fifo_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = drv_lsm6dsl_cod_fifo_init &rArr; LSM6DSL_ACC_GYRO_W_FIFO_Watermark &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_STOP_ON_FTH
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_ODR_FIFO
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_FIFO_Watermark
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_FIFO_MODE
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_DEC_FIFO_XL
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_DEC_FIFO_G
</UL>
<BR>[Called By]<UL><LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_open
</UL>

<P><STRONG><a name="[6e0]"></a>drv_lsm6dsl_cod_gyro_init</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, drv_lsm6dsl.o(i.drv_lsm6dsl_cod_gyro_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = drv_lsm6dsl_cod_gyro_init &rArr; drv_lsm6dsl_gyro_lowpower &rArr; LSM6DSL_ACC_GYRO_W_LP_Mode &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_gyro_lowpower
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_ODR_G
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_FS_G
</UL>
<BR>[Called By]<UL><LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_open
</UL>

<P><STRONG><a name="[67d]"></a>drv_lsm6dsl_cod_open</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, drv_lsm6dsl.o(i.drv_lsm6dsl_cod_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = drv_lsm6dsl_cod_open &rArr; drv_lsm6dsl_cod_fifo_init &rArr; LSM6DSL_ACC_GYRO_W_FIFO_Watermark &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_gyro_powerdown
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_gyro_init
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_fifo_init
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_acc_init
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_powerdown
</UL>
<BR>[Called By]<UL><LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_user_sensor_open
</UL>

<P><STRONG><a name="[405]"></a>drv_lsm6dsl_fifo_init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, drv_lsm6dsl.o(i.drv_lsm6dsl_fifo_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = drv_lsm6dsl_fifo_init &rArr; LSM6DSL_ACC_GYRO_W_FIFO_Watermark &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_STOP_ON_FTH
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_ODR_FIFO
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_FIFO_Watermark
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_FIFO_MODE
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_DEC_FIFO_XL
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_DEC_FIFO_G
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSensor
</UL>

<P><STRONG><a name="[12b]"></a>drv_lsm6dsl_fifo_uninit</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, drv_lsm6dsl.o(i.drv_lsm6dsl_fifo_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = drv_lsm6dsl_fifo_uninit &rArr; LSM6DSL_ACC_GYRO_W_FIFO_Watermark &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_STOP_ON_FTH
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_ODR_FIFO
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_FIFO_Watermark
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_FIFO_MODE
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_DEC_FIFO_XL
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_DEC_FIFO_G
</UL>
<BR>[Called By]<UL><LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_close
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSport
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSensor
</UL>

<P><STRONG><a name="[127]"></a>drv_lsm6dsl_get_stepcount</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, drv_lsm6dsl.o(i.drv_lsm6dsl_get_stepcount))
<BR><BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSteptoAlgo
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_hint_btn_evt
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStep
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSensor
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSensor
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDistanceAlgo_VO2maxLactate
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayMainData_Init
</UL>

<P><STRONG><a name="[6e2]"></a>drv_lsm6dsl_gyro_axes_raw</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, drv_lsm6dsl.o(i.drv_lsm6dsl_gyro_axes_raw))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = drv_lsm6dsl_gyro_axes_raw &rArr; LSM6DSL_ACC_GYRO_GetRawGyroData &rArr; LSM6DSL_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; am_hal_iom_i2c_read &rArr; am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_GetRawGyroData
</UL>
<BR>[Called By]<UL><LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gyro_read
</UL>

<P><STRONG><a name="[404]"></a>drv_lsm6dsl_gyro_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, drv_lsm6dsl.o(i.drv_lsm6dsl_gyro_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = drv_lsm6dsl_gyro_init &rArr; drv_lsm6dsl_gyro_lowpower &rArr; LSM6DSL_ACC_GYRO_W_LP_Mode &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_gyro_lowpower
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_ODR_G
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_FS_G
</UL>
<BR>[Called By]<UL><LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gyro_enable
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSensor
</UL>

<P><STRONG><a name="[6e1]"></a>drv_lsm6dsl_gyro_lowpower</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, drv_lsm6dsl.o(i.drv_lsm6dsl_gyro_lowpower))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = drv_lsm6dsl_gyro_lowpower &rArr; LSM6DSL_ACC_GYRO_W_LP_Mode &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_LP_Mode
</UL>
<BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_gyro_init
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_gyro_init
</UL>

<P><STRONG><a name="[12c]"></a>drv_lsm6dsl_gyro_powerdown</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, drv_lsm6dsl.o(i.drv_lsm6dsl_gyro_powerdown))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = drv_lsm6dsl_gyro_powerdown &rArr; LSM6DSL_ACC_GYRO_W_ODR_G &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_ODR_G
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gyro_disable
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_open
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_close
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSport
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSensor
</UL>

<P><STRONG><a name="[4e9]"></a>drv_lsm6dsl_reset</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, drv_lsm6dsl.o(i.drv_lsm6dsl_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = drv_lsm6dsl_reset &rArr; LSM6DSL_ACC_GYRO_W_SW_RESET &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SIM
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_SW_RESET
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM6DSL_ACC_GYRO_W_PULL_UP_EN
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStep
</UL>

<P><STRONG><a name="[672]"></a>drv_motor_disable</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, drv_motor.o(i.drv_motor_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_motor_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_motor_disable
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback_motor
</UL>

<P><STRONG><a name="[164]"></a>drv_motor_enable</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, drv_motor.o(i.drv_motor_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = drv_motor_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostSettings_btn_evt
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_motor_enable
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback_motor
</UL>

<P><STRONG><a name="[16b]"></a>drv_ms5837_data_get</STRONG> (Thumb, 272 bytes, Stack size 24 bytes, drv_ms5837.o(i.drv_ms5837_data_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = drv_ms5837_data_get &rArr; drv_ms5837_rel_altitude &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_rel_altitude
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_write
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_read
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_enable
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_disable
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_CalcPT2nd
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTools
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pressure_read
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_store_gpsdata
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Sport_Altitude
</UL>

<P><STRONG><a name="[10b]"></a>drv_ms5837_rel_altitude</STRONG> (Thumb, 106 bytes, Stack size 48 bytes, drv_ms5837.o(i.drv_ms5837_rel_altitude))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = drv_ms5837_rel_altitude &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_data_get
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateAltitude
</UL>

<P><STRONG><a name="[6ea]"></a>drv_pc_init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, drv_pc.o(i.drv_pc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = drv_pc_init &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_handler_register
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bus_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_pc_init
</UL>

<P><STRONG><a name="[5d3]"></a>drv_pc_send_data</STRONG> (Thumb, 58 bytes, Stack size 272 bytes, drv_pc.o(i.drv_pc_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_flags_get
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_transmit_buffered
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_hwt_btn_evt
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_rssi_read_stop_response
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_rssi_read_response
<LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_info_read_response
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_extflash_read_response
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_bootloader_reset_n_activate
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_bootloader_prevalidate
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_bootloader_postvalidate
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_bootloader_bootsetting
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_reset
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_jump_bootloader
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_presonse_application_ble_info
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_mac_write
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_mac_read
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pressure_read
<LI><a href="#[89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hwardware_test_lcd_disable
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hwardware_test_button_dwn_disable
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_pressure_enable
<LI><a href="#[8c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_pressure_disable
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_motor_enable
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_motor_disable
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_mode_enable
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_mode_disable
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_lcd_enable
<LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gyro_read
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gyro_enable
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gyro_disable
<LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gsensor_read
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gsensor_enable
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gsensor_disable
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_read
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_enable
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_disable
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_warm_start
<LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_nmea_zda
<LI><a href="#[8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_nmea_vtg
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_nmea_rmc
<LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_nmea_gsv
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_nmea_gsa
<LI><a href="#[8bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_nmea_gll
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_nmea_gga
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_hot_start
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_gps_mode
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_gps_bd_mode
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_cold_start
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_bd_mode
<LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_font_read
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_font_enable
<LI><a href="#[8a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_font_disable
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_extflash_enable
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_extflash_disable
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_compass_read
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_compass_enable
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_compass_disable
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_buzzer_enable
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_buzzer_disable
<LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_button_up_enable
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_button_up_disable
<LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_button_pwr_enable
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_button_pwr_disable
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_button_ok_enable
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_button_ok_disable
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_button_dwn_enable
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_button_bl_enable
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_button_bl_disable
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_enable
<LI><a href="#[8c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_disable
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_backlight_enable
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_backlight_disable
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_get_watch_face_info_2
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_get_watch_face_info
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_flash_write_raw
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_flash_read_raw
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_flash_erase_raw
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extFlash_sector
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_event_handle
</UL>

<P><STRONG><a name="[5d4]"></a>drv_pc_uninit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, drv_pc.o(i.drv_pc_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = drv_pc_uninit &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_handler_unregister
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bus_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_pc_uninit
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_event_handle
</UL>

<P><STRONG><a name="[4e7]"></a>drv_rtc_flag_reg_read</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, drv_rtc_rv8803.o(i.drv_rtc_flag_reg_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = drv_rtc_flag_reg_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_read
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rtc_i2c_enable
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rtc_i2c_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStep
</UL>

<P><STRONG><a name="[6ef]"></a>drv_rtc_i2c_disable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, drv_rtc_rv8803.o(i.drv_rtc_i2c_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = drv_rtc_i2c_disable &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_disable
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rtc_flag_reg_read
</UL>

<P><STRONG><a name="[6ee]"></a>drv_rtc_i2c_enable</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, drv_rtc_rv8803.o(i.drv_rtc_i2c_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = drv_rtc_i2c_enable &rArr; bsp_iom_enable &rArr; am_hal_iom_config &rArr; iom_get_interface_clock_cfg &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_enable
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rtc_flag_reg_read
</UL>

<P><STRONG><a name="[6f0]"></a>drv_set_GNSS_mode</STRONG> (Thumb, 190 bytes, Stack size 48 bytes, drv_ublox.o(i.drv_set_GNSS_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = drv_set_GNSS_mode &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_flags_get
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_transmit_buffered
</UL>
<BR>[Called By]<UL><LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_start
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_init
</UL>

<P><STRONG><a name="[6f1]"></a>drv_set_NMEA_RMC</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, drv_ublox.o(i.drv_set_NMEA_RMC))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = drv_set_NMEA_RMC &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_flags_get
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_transmit_buffered
</UL>
<BR>[Called By]<UL><LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_start
</UL>

<P><STRONG><a name="[6f2]"></a>drv_set_NMEA_RMC_GGA_GSA</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, drv_ublox.o(i.drv_set_NMEA_RMC_GGA_GSA))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = drv_set_NMEA_RMC_GGA_GSA &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_flags_get
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_transmit_buffered
</UL>
<BR>[Called By]<UL><LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_start
</UL>

<P><STRONG><a name="[6f3]"></a>drv_set_NMEA_RMC_GSA</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, drv_ublox.o(i.drv_set_NMEA_RMC_GSA))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = drv_set_NMEA_RMC_GSA &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_flags_get
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_transmit_buffered
</UL>
<BR>[Called By]<UL><LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_start
</UL>

<P><STRONG><a name="[6f4]"></a>drv_set_NMEA_RMC_GSA_GSV</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, drv_ublox.o(i.drv_set_NMEA_RMC_GSA_GSV))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = drv_set_NMEA_RMC_GSA_GSV &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_flags_get
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_transmit_buffered
</UL>
<BR>[Called By]<UL><LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_start
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_init
</UL>

<P><STRONG><a name="[4b5]"></a>drv_set_backup_data_save</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, drv_ublox.o(i.drv_set_backup_data_save))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = drv_set_backup_data_save &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_flags_get
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_transmit_buffered
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
</UL>

<P><STRONG><a name="[6f5]"></a>drv_set_clodstart</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, drv_ublox.o(i.drv_set_clodstart))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = drv_set_clodstart &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_flags_get
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_transmit_buffered
</UL>
<BR>[Called By]<UL><LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_start
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_init
</UL>

<P><STRONG><a name="[6f6]"></a>drv_set_hotstart</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, drv_ublox.o(i.drv_set_hotstart))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = drv_set_hotstart &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_flags_get
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_transmit_buffered
</UL>
<BR>[Called By]<UL><LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_start
</UL>

<P><STRONG><a name="[4b2]"></a>drv_set_idle</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, drv_ublox.o(i.drv_set_idle))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = drv_set_idle &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_flags_get
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_transmit_buffered
</UL>
<BR>[Called By]<UL><LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_start
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_lle_import
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
</UL>

<P><STRONG><a name="[544]"></a>drv_set_lle_check</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, task_gps.o(i.drv_set_lle_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = drv_set_lle_check &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_flags_get
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_transmit_buffered
</UL>
<BR>[Called By]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_lle_import
</UL>

<P><STRONG><a name="[542]"></a>drv_set_lle_date</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, task_gps.o(i.drv_set_lle_date))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = drv_set_lle_date &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_flags_get
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_transmit_buffered
</UL>
<BR>[Called By]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_lle_import
</UL>

<P><STRONG><a name="[53f]"></a>drv_set_lle_erase</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, task_gps.o(i.drv_set_lle_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = drv_set_lle_erase &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_flags_get
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_transmit_buffered
</UL>
<BR>[Called By]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_lle_import
</UL>

<P><STRONG><a name="[543]"></a>drv_set_lle_footer</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, task_gps.o(i.drv_set_lle_footer))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = drv_set_lle_footer &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_flags_get
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_transmit_buffered
</UL>
<BR>[Called By]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_lle_import
</UL>

<P><STRONG><a name="[541]"></a>drv_set_lle_header</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, task_gps.o(i.drv_set_lle_header))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = drv_set_lle_header &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_flags_get
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_transmit_buffered
</UL>
<BR>[Called By]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_lle_import
</UL>

<P><STRONG><a name="[545]"></a>drv_set_lle_search</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, task_gps.o(i.drv_set_lle_search))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = drv_set_lle_search &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_flags_get
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_transmit_buffered
</UL>
<BR>[Called By]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_lle_import
</UL>

<P><STRONG><a name="[540]"></a>drv_set_lle_write</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, task_gps.o(i.drv_set_lle_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = drv_set_lle_write &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_flags_get
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_transmit_buffered
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_lle_import
</UL>

<P><STRONG><a name="[6f8]"></a>drv_set_operation_mode</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, drv_ublox.o(i.drv_set_operation_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = drv_set_operation_mode &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_flags_get
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_transmit_buffered
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_start
</UL>

<P><STRONG><a name="[6f9]"></a>drv_set_positioning_algo</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, drv_ublox.o(i.drv_set_positioning_algo))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = drv_set_positioning_algo &rArr; xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_flags_get
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_transmit_buffered
</UL>
<BR>[Called By]<UL><LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_start
</UL>

<P><STRONG><a name="[6fa]"></a>drv_set_utc_time_set</STRONG> (Thumb, 138 bytes, Stack size 80 bytes, drv_ublox.o(i.drv_set_utc_time_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = drv_set_utc_time_set &rArr; RtcToUtc &rArr; GetTimeSecond &rArr; mktime &rArr; _tm_carry
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcToUtc
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_flags_get
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_transmit_buffered
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_start
</UL>

<P><STRONG><a name="[6fb]"></a>drv_ublox_GGA</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, drv_ublox.o(i.drv_ublox_GGA))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = drv_ublox_GGA &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_enable
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_init
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_enable
</UL>

<P><STRONG><a name="[6fc]"></a>drv_ublox_GLL</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, drv_ublox.o(i.drv_ublox_GLL))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = drv_ublox_GLL &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_enable
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_init
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_enable
</UL>

<P><STRONG><a name="[6fd]"></a>drv_ublox_GNSS</STRONG> (Thumb, 316 bytes, Stack size 288 bytes, drv_ublox.o(i.drv_ublox_GNSS))
<BR><BR>[Stack]<UL><LI>Max Depth = 656<LI>Call Chain = drv_ublox_GNSS &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_enable
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_disable
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_init
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_enable
</UL>

<P><STRONG><a name="[6fe]"></a>drv_ublox_GSA</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, drv_ublox.o(i.drv_ublox_GSA))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = drv_ublox_GSA &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_enable
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_init
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_enable
</UL>

<P><STRONG><a name="[6ff]"></a>drv_ublox_GSV</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, drv_ublox.o(i.drv_ublox_GSV))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = drv_ublox_GSV &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_enable
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_init
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_enable
</UL>

<P><STRONG><a name="[4b6]"></a>drv_ublox_REVERT</STRONG> (Thumb, 78 bytes, Stack size 64 bytes, drv_ublox.o(i.drv_ublox_REVERT))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = drv_ublox_REVERT &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_enable
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_disable
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
</UL>

<P><STRONG><a name="[700]"></a>drv_ublox_RMC</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, drv_ublox.o(i.drv_ublox_RMC))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = drv_ublox_RMC &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_enable
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_init
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_enable
</UL>

<P><STRONG><a name="[701]"></a>drv_ublox_RXM_SAVE</STRONG> (Thumb, 144 bytes, Stack size 112 bytes, drv_ublox.o(i.drv_ublox_RXM_SAVE))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = drv_ublox_RXM_SAVE &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_enable
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_disable
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_init
</UL>

<P><STRONG><a name="[702]"></a>drv_ublox_VTG</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, drv_ublox.o(i.drv_ublox_VTG))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = drv_ublox_VTG &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_enable
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_init
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_enable
</UL>

<P><STRONG><a name="[703]"></a>drv_ublox_clodstart</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, drv_ublox.o(i.drv_ublox_clodstart))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = drv_ublox_clodstart &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_enable
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_init
</UL>

<P><STRONG><a name="[4bd]"></a>drv_ublox_disable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, drv_ublox.o(i.drv_ublox_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = drv_ublox_disable &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_disable
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_reset_rtc
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_offline_ephemeris
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_hotstart
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_clodstart
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_VTG
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_RXM_SAVE
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_RMC
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_REVERT
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GSV
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GSA
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GNSS
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GLL
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GGA
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_read
</UL>

<P><STRONG><a name="[4bb]"></a>drv_ublox_enable</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, drv_ublox.o(i.drv_ublox_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = drv_ublox_enable &rArr; bsp_iom_enable &rArr; am_hal_iom_config &rArr; iom_get_interface_clock_cfg &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_enable
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_reset_rtc
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_offline_ephemeris
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_hotstart
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_clodstart
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_VTG
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_RXM_SAVE
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_RMC
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_REVERT
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GSV
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GSA
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GNSS
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GLL
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GGA
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_read
</UL>

<P><STRONG><a name="[704]"></a>drv_ublox_hotstart</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, drv_ublox.o(i.drv_ublox_hotstart))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = drv_ublox_hotstart &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_enable
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_init
</UL>

<P><STRONG><a name="[705]"></a>drv_ublox_offline_ephemeris</STRONG> (Thumb, 308 bytes, Stack size 144 bytes, drv_ublox.o(i.drv_ublox_offline_ephemeris))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = drv_ublox_offline_ephemeris &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcToUtc
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweron
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweroff
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_enable
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_init
</UL>

<P><STRONG><a name="[4b7]"></a>drv_ublox_poweroff</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, drv_ublox.o(i.drv_ublox_poweroff))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = drv_ublox_poweroff &rArr; bsp_uart_disable &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_uart_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_offline_ephemeris
<LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_start
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_lle_import
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_disable
</UL>

<P><STRONG><a name="[4b9]"></a>drv_ublox_poweron</STRONG> (Thumb, 298 bytes, Stack size 8 bytes, drv_ublox.o(i.drv_ublox_poweron))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = drv_ublox_poweron &rArr; am_hal_uart_config &rArr; config_baudrate
</UL>
<BR>[Calls]<UL><LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_priority_set
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_enable
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_m_is_pc
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_pwrctrl_enable
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_int_enable
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_int_clear
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_init_buffered
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_fifo_config
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_enable
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_disable
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_config
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_offline_ephemeris
<LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_start
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_init
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_lle_import
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_enable
</UL>

<P><STRONG><a name="[4bc]"></a>drv_ublox_read</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, drv_ublox.o(i.drv_ublox_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = drv_ublox_read &rArr; am_hal_iom_i2c_read &rArr; am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_read
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_read
</UL>

<P><STRONG><a name="[708]"></a>drv_ublox_reset_rtc</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, drv_ublox.o(i.drv_ublox_reset_rtc))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = drv_ublox_reset_rtc &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_enable
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_init
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_enable
</UL>

<P><STRONG><a name="[402]"></a>drv_ublox_status_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, drv_ublox.o(i.drv_ublox_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySport
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSensor
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_start_init
</UL>

<P><STRONG><a name="[123]"></a>drv_ublox_status_set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, drv_ublox.o(i.drv_ublox_status_set))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateGPSTask
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseGPSTask
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSensor
</UL>

<P><STRONG><a name="[963]"></a>eTaskConfirmSleepModeStatus</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, tasks.o(i.eTaskConfirmSleepModeStatus))
<BR><BR>[Called By]<UL><LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSuppressTicksAndSleep
</UL>

<P><STRONG><a name="[566]"></a>error_currenttask</STRONG> (Thumb, 364 bytes, Stack size 48 bytes, lib_error.o(i.error_currenttask))
<BR><BR>[Stack]<UL><LI>Max Depth = 404 + Unknown Stack Size
<LI>Call Chain = error_currenttask &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetErrCode
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplaySomeLine
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getpxCurrentTCBPC
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getpxCurrentTCBName
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getpxCurrentTCBLR
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_clkgen_isr
</UL>

<P><STRONG><a name="[641]"></a>error_handler</STRONG> (Thumb, 26 bytes, Stack size 32 bytes, lib_error.o(i.error_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 444 + Unknown Stack Size
<LI>Call Chain = error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_fault_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_init
<LI><a href="#[92b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_init
<LI><a href="#[927]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_init
<LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_init
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_init
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_backlight_init
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ble_init
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_battery_init
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_timer_init
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_findwatch_timer_init
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dfu_timer_init
<LI><a href="#[91f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationMallocFailedHook
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_backlight_stop
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_findwatch_timer_start
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_pc_init
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_battery_stop
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_battery_init
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_notify_switch
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_start
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_backlight_start
<LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_uninit
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_stop
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback_remind
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback_motor
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback_display
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback_buzzer
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_uninit
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_stop
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_start
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_timer_stop
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_findwatch_timer_stop
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dfu_timer_stop
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dfu_timer_start
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_timer_start
</UL>

<P><STRONG><a name="[70d]"></a>error_save_and_stop</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, lib_error.o(i.error_save_and_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 404 + Unknown Stack Size
<LI>Call Chain = error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetErrCode
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplaySomeLine
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_fault_handler
</UL>

<P><STRONG><a name="[70e]"></a>evalue_judge</STRONG> (Thumb, 2736 bytes, Stack size 152 bytes, algo_magn_cal.o(i.evalue_judge))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = evalue_judge &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_ellipsoid
</UL>

<P><STRONG><a name="[70f]"></a>evector_judge</STRONG> (Thumb, 1516 bytes, Stack size 104 bytes, algo_magn_cal.o(i.evector_judge))
<BR><BR>[Stack]<UL><LI>Max Depth = 572 + Unknown Stack Size
<LI>Call Chain = evector_judge &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_ellipsoid
</UL>

<P><STRONG><a name="[51d]"></a>fabs</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fabs.o(i.fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[5e0]"></a>findtrackindex</STRONG> (Thumb, 318 bytes, Stack size 72 bytes, algo_trackjudge.o(i.findtrackindex))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = findtrackindex &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trackjudge
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;navi_remaindistance
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_DirectionAngle
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_remaindistance
</UL>

<P><STRONG><a name="[711]"></a>fit_ellipsoid</STRONG> (Thumb, 6794 bytes, Stack size 904 bytes, algo_magn_cal.o(i.fit_ellipsoid))
<BR><BR>[Stack]<UL><LI>Max Depth = 1508 + Unknown Stack Size
<LI>Call Chain = fit_ellipsoid &rArr; magn_solve_inverse &rArr; magn_solve &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_solve_inverse
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evector_judge
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evalue_judge
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
</UL>

<P><STRONG><a name="[3dc]"></a>getImgSport</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, gui_motionsrecord.o(i.getImgSport))
<BR><BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;List_Current
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motionsrecord_title_paint
</UL>

<P><STRONG><a name="[669]"></a>get_10s_heartrate</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, algo_hdr.o(i.get_10s_heartrate))
<BR><BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_pause_btn_evt
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_pause_btn_evt
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_pause_btn_evt
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_pause_btn_evt
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_pause_btn_evt
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_pause_btn_evt
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_pause_btn_evt
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_pause_btn_evt
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_heartrate_recovery
</UL>

<P><STRONG><a name="[713]"></a>get_DirectionAngle</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, algo_trackjudge.o(i.get_DirectionAngle))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = get_DirectionAngle &rArr; findtrackindex &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getangle
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findtrackindex
</UL>
<BR>[Called By]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_navi_trackjudge
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_back_trackjudge
</UL>

<P><STRONG><a name="[715]"></a>get_VO2max_range</STRONG> (Thumb, 4804 bytes, Stack size 32 bytes, algo_hdr.o(i.get_VO2max_range))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = get_VO2max_range &rArr; __aeabi_cdcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_value_paint
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_histogram
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_histogram_paint
</UL>

<P><STRONG><a name="[72e]"></a>get_VO2max_range_color</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, algo_hdr.o(i.get_VO2max_range_color))
<BR><BR>[Called By]<UL><LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_histogram
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_histogram_paint
</UL>

<P><STRONG><a name="[865]"></a>get_air_standard</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, gui_tool_calendar.o(i.get_air_standard))
<BR><BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_paint
</UL>

<P><STRONG><a name="[50b]"></a>get_average_time_hdr</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, timer_app.o(i.get_average_time_hdr))
<BR><BR>[Called By]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UninitVO2maxMeasing
</UL>

<P><STRONG><a name="[716]"></a>get_back_OfftrackDetail</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, algo_trackjudge.o(i.get_back_OfftrackDetail))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = get_back_OfftrackDetail &rArr; log_back_trackjudge &rArr; back_remaindistance &rArr; trackjudge &rArr; findtrackindex &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_back_trackjudge
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerTracebackCallback
</UL>

<P><STRONG><a name="[3a9]"></a>get_circle_point</STRONG> (Thumb, 282 bytes, Stack size 96 bytes, drv_lcd.o(i.get_circle_point))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDialScale
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_arc
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_paint
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_7
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_6
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_5
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_4
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_3
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_1
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_progress_loop
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_index_circle_vert_paint
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_compass
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_arrows
</UL>

<P><STRONG><a name="[970]"></a>get_countdown_time</STRONG> (Thumb, 108 bytes, Stack size 20 bytes, algo_hdr.o(i.get_countdown_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = get_countdown_time
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
</UL>

<P><STRONG><a name="[718]"></a>get_current_longtool_screen</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, gui_home.o(i.get_current_longtool_screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 748<LI>Call Chain = get_current_longtool_screen &rArr; Get_TrainPlanDayRecord &rArr; get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Tool_Index
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trainplan_valid_flag
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanDayRecord
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_statu_get
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_tool_start
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_sport_record
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_data_init
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSportDetail
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
</UL>

<P><STRONG><a name="[719]"></a>get_current_monitor_screen</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, gui_home.o(i.get_current_monitor_screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = get_current_monitor_screen &rArr; Get_TrainPlanDayRecord &rArr; get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trainplan_valid_flag
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanDayRecord
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_statu_get
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_switch_screen_count
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_switch_screen
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_tool_start
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_sport_record
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_data_init
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSportDetail
</UL>
<BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_done_hint_btn_evt
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_switch_screen_count_evt
</UL>

<P><STRONG><a name="[71b]"></a>get_current_switch_screen</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, gui_home.o(i.get_current_switch_screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_current_switch_screen
</UL>
<BR>[Called By]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_monitor_screen
</UL>

<P><STRONG><a name="[4ec]"></a>get_cyclingsta</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task_sport.o(i.get_cyclingsta))
<BR><BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_swim_acc_fifo__data
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStep
</UL>

<P><STRONG><a name="[27a]"></a>get_filt_stepcount</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, task_step.o(i.get_filt_stepcount))
<BR><BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalStep
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStep
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_all_day_steps
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_data_frame_num
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_day_steps_reinit
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_DayCommonDataData
</UL>

<P><STRONG><a name="[71c]"></a>get_four_point</STRONG> (Thumb, 2096 bytes, Stack size 120 bytes, algo_magn_cal.o(i.get_four_point))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = get_four_point &rArr; cal_point_dis &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge_value
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_point_dis
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_cal_auto
</UL>

<P><STRONG><a name="[4bf]"></a>get_gps_hint_motor_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task_gps.o(i.get_gps_hint_motor_flag))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
</UL>

<P><STRONG><a name="[62c]"></a>get_hdr_max</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, algo_hdr.o(i.get_hdr_max))
<BR><BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_heart_paint
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_rest_heartrate
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hdr_range
</UL>

<P><STRONG><a name="[111]"></a>get_hdr_range</STRONG> (Thumb, 756 bytes, Stack size 56 bytes, algo_hdr.o(i.get_hdr_range))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = get_hdr_range &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hdr_max
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_heart_paint
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateHeartrateParam
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hdr_range_color
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_1_paint
</UL>

<P><STRONG><a name="[71e]"></a>get_hdr_range_color</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, algo_hdr.o(i.get_hdr_range_color))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = get_hdr_range_color &rArr; get_hdr_range &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hdr_range
</UL>
<BR>[Called By]<UL><LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_heart_paint
<LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_heart_paint
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_wave_paint
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_heart_paint
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_1_paint
</UL>

<P><STRONG><a name="[71f]"></a>get_m_AutoBackScreen</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, com_sport.o(i.get_m_AutoBackScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_m_AutoBackScreen &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_auto_back_home_paint
</UL>

<P><STRONG><a name="[4ef]"></a>get_motion_trail_endaddress</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_tool_gps.o(i.get_motion_trail_endaddress))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
</UL>

<P><STRONG><a name="[4f0]"></a>get_motion_trail_startaddress</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_tool_gps.o(i.get_motion_trail_startaddress))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
</UL>

<P><STRONG><a name="[720]"></a>get_navi_OfftrackDetail</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, algo_trackjudge.o(i.get_navi_OfftrackDetail))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = get_navi_OfftrackDetail &rArr; log_navi_trackjudge &rArr; navi_remaindistance &rArr; trackjudge &rArr; findtrackindex &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_navi_trackjudge
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerTracebackCallback
</UL>

<P><STRONG><a name="[4f2]"></a>get_navigation_gps_endaddress</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_tool_gps.o(i.get_navigation_gps_endaddress))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
</UL>

<P><STRONG><a name="[4f3]"></a>get_navigation_gps_startaddress</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_tool_gps.o(i.get_navigation_gps_startaddress))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
</UL>

<P><STRONG><a name="[959]"></a>get_next</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, algo_magn_cal.o(i.get_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_next
</UL>
<BR>[Called By]<UL><LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transpose_m
</UL>

<P><STRONG><a name="[8ef]"></a>get_pre</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, algo_magn_cal.o(i.get_pre))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_pre
</UL>
<BR>[Called By]<UL><LI><a href="#[8ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_data
</UL>

<P><STRONG><a name="[268]"></a>get_sport_detail_record</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, com_sport.o(i.get_sport_detail_record))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = get_sport_detail_record &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSportDetail
</UL>

<P><STRONG><a name="[4ea]"></a>get_step_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, algo_step_count.o(i.get_step_status))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStep
</UL>

<P><STRONG><a name="[4d4]"></a>get_steps_freq</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, algo_trackoptimizing.o(i.get_steps_freq))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_show_str
</UL>

<P><STRONG><a name="[71a]"></a>get_switch_screen_count</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_home.o(i.get_switch_screen_count))
<BR><BR>[Called By]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_monitor_screen
</UL>

<P><STRONG><a name="[4f4]"></a>get_track_point_endaddress</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_tool_gps.o(i.get_track_point_endaddress))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
</UL>

<P><STRONG><a name="[4f5]"></a>get_track_point_startaddress</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_tool_gps.o(i.get_track_point_startaddress))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
</UL>

<P><STRONG><a name="[271]"></a>get_trainplan_valid_flag</STRONG> (Thumb, 94 bytes, Stack size 144 bytes, com_sport.o(i.get_trainplan_valid_flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RenewOneDay
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_btn_evt
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_sport_today_hint_btn_evt
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_run_select_btn_evt
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_home_today_hint_btn_evt
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_paint
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanDayRecord
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_notify_switch
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Pace_TrainPlan
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_longtool_screen
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_monitor_screen
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Home_Index
</UL>

<P><STRONG><a name="[484]"></a>get_weekSteps</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_step.o(i.get_weekSteps))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = get_weekSteps &rArr; GetDayMainData_SportsStepWeekData &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_SportsStepWeekData
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_SportsDistanceWeekData
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_CommonStepWeekData
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_CommonDistanceWeekData
</UL>
<BR>[Called By]<UL><LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_data_init
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_btn_evt
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDayMainData
</UL>

<P><STRONG><a name="[76f]"></a>get_week_common_distance</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_step.o(i.get_week_common_distance))
<BR><BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_distance_histogram
</UL>

<P><STRONG><a name="[770]"></a>get_week_sport_distance</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_step.o(i.get_week_sport_distance))
<BR><BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_distance_histogram
</UL>

<P><STRONG><a name="[724]"></a>get_weekmain_max_distance</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, gui_step.o(i.get_weekmain_max_distance))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = get_weekmain_max_distance &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_distance_histogram
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_histogram_step_paint
</UL>

<P><STRONG><a name="[725]"></a>get_weekmain_max_steps</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, gui_step.o(i.get_weekmain_max_steps))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = get_weekmain_max_steps &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_histogram_step_paint
</UL>

<P><STRONG><a name="[714]"></a>getangle</STRONG> (Thumb, 838 bytes, Stack size 112 bytes, algo_trackjudge.o(i.getangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = getangle &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_DirectionAngle
</UL>

<P><STRONG><a name="[70a]"></a>getpxCurrentTCBLR</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tasks.o(i.getpxCurrentTCBLR))
<BR><BR>[Called By]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_currenttask
</UL>

<P><STRONG><a name="[709]"></a>getpxCurrentTCBName</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tasks.o(i.getpxCurrentTCBName))
<BR><BR>[Called By]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_currenttask
</UL>

<P><STRONG><a name="[70b]"></a>getpxCurrentTCBPC</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tasks.o(i.getpxCurrentTCBPC))
<BR><BR>[Called By]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_currenttask
</UL>

<P><STRONG><a name="[726]"></a>gps_data_distance_cal</STRONG> (Thumb, 338 bytes, Stack size 56 bytes, algo_trackoptimizing.o(i.gps_data_distance_cal))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = gps_data_distance_cal &rArr; GpsDistance &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_sm_data_distance_receive
</UL>

<P><STRONG><a name="[475]"></a>gps_exception</STRONG> (Thumb, 756 bytes, Stack size 48 bytes, algo_trackoptimizing.o(i.gps_exception))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = gps_exception &rArr; nogps_maxgap_init &rArr; sport_over_or_restart &rArr; GpsDistance &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nogps_maxgap_init
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportsCalculateDistSpeed
</UL>

<P><STRONG><a name="[728]"></a>gps_raw_data_process_rn</STRONG> (Thumb, 136 bytes, Stack size 64 bytes, algo_trackoptimizing.o(i.gps_raw_data_process_rn))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = gps_raw_data_process_rn &rArr; calculateDistanceFromPoint &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateDistanceFromPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_raw_data_rn_receive
</UL>

<P><STRONG><a name="[409]"></a>gps_raw_data_rn_receive</STRONG> (Thumb, 376 bytes, Stack size 24 bytes, algo_trackoptimizing.o(i.gps_raw_data_rn_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = gps_raw_data_rn_receive &rArr; gps_raw_data_process_rn &rArr; calculateDistanceFromPoint &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_raw_data_process_rn
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackOptimizingDataAccept
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportsCalculateDistSpeed
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhyParamCalculateDistSpeed
</UL>

<P><STRONG><a name="[40b]"></a>gps_rn_data_sm_receive</STRONG> (Thumb, 2020 bytes, Stack size 64 bytes, algo_trackoptimizing.o(i.gps_rn_data_sm_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = gps_rn_data_sm_receive &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportsCalculateDistSpeed
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhyParamCalculateDistSpeed
</UL>

<P><STRONG><a name="[40c]"></a>gps_sm_data_distance_receive</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, algo_trackoptimizing.o(i.gps_sm_data_distance_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = gps_sm_data_distance_receive &rArr; gps_data_distance_cal &rArr; GpsDistance &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_distance_cal
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportsCalculateDistSpeed
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhyParamCalculateDistSpeed
</UL>

<P><STRONG><a name="[476]"></a>gps_sm_data_kf_receive</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, algo_trackoptimizing.o(i.gps_sm_data_kf_receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = gps_sm_data_kf_receive &rArr; kalmanfilter_path &rArr; kalmanFilterPoint &rArr; kalmanFilter &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kalmanfilter_path
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportsCalculateDistSpeed
</UL>

<P><STRONG><a name="[412]"></a>gps_value_clear</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, task_gps.o(i.gps_value_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gps_value_clear &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySport
</UL>

<P><STRONG><a name="[167]"></a>gps_value_get</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, task_gps.o(i.gps_value_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gps_value_get &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[8ca]"></a>gt</STRONG> (Thumb, 326 bytes, Stack size 24 bytes, hfma2ylib.o(i.gt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gt
</UL>
<BR>[Called By]<UL><LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzbmp16
</UL>

<P><STRONG><a name="[72a]"></a>gui_12h_pressure</STRONG> (Thumb, 540 bytes, Stack size 80 bytes, gui.o(i.gui_12h_pressure))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = gui_12h_pressure &rArr; LCD_SetRectangle
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_graph
</UL>

<P><STRONG><a name="[185]"></a>gui_VO2max_countdown_paint</STRONG> (Thumb, 290 bytes, Stack size 40 bytes, gui_vo2max.o(i.gui_VO2max_countdown_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404 + Unknown Stack Size
<LI>Call Chain = gui_VO2max_countdown_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2c5]"></a>gui_VO2max_hint_mesuring_btn_evt</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, gui_vo2max.o(i.gui_VO2max_hint_mesuring_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = gui_VO2max_hint_mesuring_btn_evt &rArr; timer_app_countdown_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_gps_hint_motor_flag
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseGPSTask
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_countdown_start
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[184]"></a>gui_VO2max_hint_mesuring_paint</STRONG> (Thumb, 298 bytes, Stack size 32 bytes, gui_vo2max.o(i.gui_VO2max_hint_mesuring_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396 + Unknown Stack Size
<LI>Call Chain = gui_VO2max_hint_mesuring_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[72d]"></a>gui_VO2max_histogram</STRONG> (Thumb, 326 bytes, Stack size 64 bytes, gui.o(i.gui_VO2max_histogram))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = gui_VO2max_histogram &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_VO2max_range_color
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_VO2max_range
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_graph
</UL>

<P><STRONG><a name="[372]"></a>gui_VO2max_lactate_eraly_end_hint_btn_evt</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, gui_vo2max.o(i.gui_VO2max_lactate_eraly_end_hint_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 484 + Unknown Stack Size
<LI>Call Chain = gui_VO2max_lactate_eraly_end_hint_btn_evt &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UninitVO2maxMeasing
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[239]"></a>gui_VO2max_lactate_eraly_end_hint_paint</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, gui_vo2max.o(i.gui_VO2max_lactate_eraly_end_hint_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396 + Unknown Stack Size
<LI>Call Chain = gui_VO2max_lactate_eraly_end_hint_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2c6]"></a>gui_VO2max_mesuring_btn_evt</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, gui_vo2max.o(i.gui_VO2max_mesuring_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = gui_VO2max_mesuring_btn_evt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[4ad]"></a>gui_VO2max_mesuring_paint</STRONG> (Thumb, 180 bytes, Stack size 56 bytes, gui_vo2max.o(i.gui_VO2max_mesuring_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1468 + Unknown Stack Size
<LI>Call Chain = gui_VO2max_mesuring_paint &rArr; gui_sport_data_display_total_distance_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_total_time_paint
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_total_distance_paint
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_realtime_pace_paint
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[2b3]"></a>gui_VO2max_value_btn_evt</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, gui_vo2max.o(i.gui_VO2max_value_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 572 + Unknown Stack Size
<LI>Call Chain = gui_VO2max_value_btn_evt &rArr; CreateGPSTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_gps_hint_motor_flag
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateGPSTask
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[16f]"></a>gui_VO2max_value_paint</STRONG> (Thumb, 678 bytes, Stack size 56 bytes, gui_vo2max.o(i.gui_VO2max_value_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1420 + Unknown Stack Size
<LI>Call Chain = gui_VO2max_value_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_VO2max_range
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_histogram_paint
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2fd]"></a>gui_accessory_btn_evt</STRONG> (Thumb, 504 bytes, Stack size 40 bytes, gui_accessory.o(i.gui_accessory_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = gui_accessory_btn_evt &rArr; timer_notify_display_start &rArr; timer_notify_display_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[301]"></a>gui_accessory_cycling_cadence_btn_evt</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, gui_accessory.o(i.gui_accessory_cycling_cadence_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_accessory_cycling_cadence_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1c6]"></a>gui_accessory_cycling_cadence_paint</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, gui_accessory.o(i.gui_accessory_cycling_cadence_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = gui_accessory_cycling_cadence_paint &rArr; LCD_SetBackgroundColor
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[300]"></a>gui_accessory_cycling_wheel_btn_evt</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, gui_accessory.o(i.gui_accessory_cycling_wheel_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_accessory_cycling_wheel_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1c5]"></a>gui_accessory_cycling_wheel_paint</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, gui_accessory.o(i.gui_accessory_cycling_wheel_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = gui_accessory_cycling_wheel_paint &rArr; LCD_SetBackgroundColor
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2fe]"></a>gui_accessory_heartrate_btn_evt</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, gui_accessory.o(i.gui_accessory_heartrate_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_accessory_heartrate_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1c3]"></a>gui_accessory_heartrate_paint</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, gui_accessory.o(i.gui_accessory_heartrate_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = gui_accessory_heartrate_paint &rArr; LCD_SetBackgroundColor
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[1c2]"></a>gui_accessory_paint</STRONG> (Thumb, 2060 bytes, Stack size 72 bytes, gui_accessory.o(i.gui_accessory_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1484 + Unknown Stack Size
<LI>Call Chain = gui_accessory_paint &rArr; menu &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2ff]"></a>gui_accessory_running_btn_evt</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, gui_accessory.o(i.gui_accessory_running_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_accessory_running_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1c4]"></a>gui_accessory_running_paint</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, gui_accessory.o(i.gui_accessory_running_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = gui_accessory_running_paint &rArr; LCD_SetBackgroundColor
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[734]"></a>gui_app_sport_data_show_str</STRONG> (Thumb, 342 bytes, Stack size 40 bytes, gui_sport.o(i.gui_app_sport_data_show_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = gui_app_sport_data_show_str &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_screen_data_paint
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_four_bar_display_paint
</UL>

<P><STRONG><a name="[735]"></a>gui_bottom_time</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, gui.o(i.gui_bottom_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = gui_bottom_time &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_paint
</UL>

<P><STRONG><a name="[736]"></a>gui_button_back</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui.o(i.gui_button_back))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = gui_button_back &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_button
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_lock_hint_paint
</UL>

<P><STRONG><a name="[737]"></a>gui_button_middle</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui.o(i.gui_button_middle))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = gui_button_middle &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_button
</UL>

<P><STRONG><a name="[738]"></a>gui_button_up</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui.o(i.gui_button_up))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = gui_button_up &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_lock_hint_paint
</UL>

<P><STRONG><a name="[2b6]"></a>gui_calories_sports_foundation_btn_evt</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, gui_calories.o(i.gui_calories_sports_foundation_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 796<LI>Call Chain = gui_calories_sports_foundation_btn_evt &rArr; set_switch_screen_count_evt &rArr; get_current_monitor_screen &rArr; Get_TrainPlanDayRecord &rArr; get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_switch_screen_count_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[172]"></a>gui_calories_sports_foundation_paint</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_calories.o(i.gui_calories_sports_foundation_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1420 + Unknown Stack Size
<LI>Call Chain = gui_calories_sports_foundation_paint &rArr; gui_calories_sports_foundation_title_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_sports_foundation_title_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2c7]"></a>gui_calories_week_sports_btn_evt</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gui_calories.o(i.gui_calories_week_sports_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_calories_week_sports_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[186]"></a>gui_calories_week_sports_paint</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_calories.o(i.gui_calories_week_sports_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444 + Unknown Stack Size
<LI>Call Chain = gui_calories_week_sports_paint &rArr; gui_calories_week_sports_title_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_week_sports_title_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[73f]"></a>gui_climbing_save_detail_1_paint</STRONG> (Thumb, 1318 bytes, Stack size 120 bytes, gui_climbing.o(i.gui_climbing_save_detail_1_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1484 + Unknown Stack Size
<LI>Call Chain = gui_climbing_save_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_detail_paint
</UL>

<P><STRONG><a name="[740]"></a>gui_climbing_save_detail_2_paint</STRONG> (Thumb, 906 bytes, Stack size 96 bytes, gui_climbing.o(i.gui_climbing_save_detail_2_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1460 + Unknown Stack Size
<LI>Call Chain = gui_climbing_save_detail_2_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_detail_paint
</UL>

<P><STRONG><a name="[742]"></a>gui_climbing_track_update_paint</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_climbing.o(i.gui_climbing_track_update_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_climbing_track_update_paint &rArr; draw_track_mark &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_track_mark
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsport_arrows
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTrack
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLoadTrack
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_dottrack_nums
</UL>
<BR>[Called By]<UL><LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_track_paint
</UL>

<P><STRONG><a name="[744]"></a>gui_clockline_1</STRONG> (Thumb, 1022 bytes, Stack size 136 bytes, gui_clockline.o(i.gui_clockline_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = gui_clockline_1 &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_circle_point
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTriangle
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPolygon
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLine
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_time
</UL>

<P><STRONG><a name="[745]"></a>gui_clockline_3</STRONG> (Thumb, 578 bytes, Stack size 104 bytes, gui_clockline.o(i.gui_clockline_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = gui_clockline_3 &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_circle_point
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPolygon
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atanf
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_time
</UL>

<P><STRONG><a name="[746]"></a>gui_clockline_4</STRONG> (Thumb, 2474 bytes, Stack size 112 bytes, gui_clockline.o(i.gui_clockline_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = gui_clockline_4 &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_circle_point
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPolygon
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPentagon
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLine
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atanf
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_time
</UL>

<P><STRONG><a name="[747]"></a>gui_clockline_5</STRONG> (Thumb, 1884 bytes, Stack size 144 bytes, gui_clockline.o(i.gui_clockline_5))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = gui_clockline_5 &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_circle_point
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTriangle
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPolygon
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPentagon
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atanf
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_time
</UL>

<P><STRONG><a name="[748]"></a>gui_clockline_6</STRONG> (Thumb, 1632 bytes, Stack size 120 bytes, gui_clockline.o(i.gui_clockline_6))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = gui_clockline_6 &rArr; LCD_SetArc &rArr; draw_arc &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_circle_point
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPolygon
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPentagon
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atanf
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_time
</UL>

<P><STRONG><a name="[749]"></a>gui_clockline_7</STRONG> (Thumb, 1354 bytes, Stack size 176 bytes, gui_clockline.o(i.gui_clockline_7))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = gui_clockline_7 &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_circle_point
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTriangle
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPolygon_7
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPentagon
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLine
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atanf
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
</UL>
<BR>[Called By]<UL><LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_time
</UL>

<P><STRONG><a name="[2cf]"></a>gui_cloud_navigation_btn_evt</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, gui_tool_gps.o(i.gui_cloud_navigation_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gui_cloud_navigation_btn_evt &rArr; gui_cloud_navigation_load &rArr; Send_Timer_Cmd &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cloud_navigation_load
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[4f7]"></a>gui_cloud_navigation_btn_item</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui_tool_gps.o(i.gui_cloud_navigation_btn_item))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_cloud_navigation_btn_item &rArr; gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
</UL>

<P><STRONG><a name="[74a]"></a>gui_cloud_navigation_load</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_tool_gps.o(i.gui_cloud_navigation_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_cloud_navigation_load &rArr; Send_Timer_Cmd &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Timer_Cmd
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cloud_navigation_btn_evt
</UL>

<P><STRONG><a name="[18f]"></a>gui_cloud_navigation_paint</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, gui_tool_gps.o(i.gui_cloud_navigation_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444 + Unknown Stack Size
<LI>Call Chain = gui_cloud_navigation_paint &rArr; gui_cloud_navigation_options_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLine
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cloud_navigation_options_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[74d]"></a>gui_crosscountry_save_detail_1_paint</STRONG> (Thumb, 1302 bytes, Stack size 120 bytes, gui_crosscountry.o(i.gui_crosscountry_save_detail_1_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1484 + Unknown Stack Size
<LI>Call Chain = gui_crosscountry_save_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_detail_paint
</UL>

<P><STRONG><a name="[74e]"></a>gui_crosscountry_save_detail_2_paint</STRONG> (Thumb, 420 bytes, Stack size 56 bytes, gui_crosscountry.o(i.gui_crosscountry_save_detail_2_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1420 + Unknown Stack Size
<LI>Call Chain = gui_crosscountry_save_detail_2_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_detail_paint
</UL>

<P><STRONG><a name="[74f]"></a>gui_crosscountry_track_update_paint</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_crosscountry.o(i.gui_crosscountry_track_update_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_crosscountry_track_update_paint &rArr; draw_track_mark &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_track_mark
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsport_arrows
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTrack
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLoadTrack
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_dottrack_nums
</UL>
<BR>[Called By]<UL><LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_track_paint
</UL>

<P><STRONG><a name="[2fc]"></a>gui_customized_sports_btn_evt</STRONG> (Thumb, 1250 bytes, Stack size 32 bytes, gui_customized_sports.o(i.gui_customized_sports_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = gui_customized_sports_btn_evt &rArr; timer_notify_display_start &rArr; timer_notify_display_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1c1]"></a>gui_customized_sports_paint</STRONG> (Thumb, 418 bytes, Stack size 24 bytes, gui_customized_sports.o(i.gui_customized_sports_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1356 + Unknown Stack Size
<LI>Call Chain = gui_customized_sports_paint &rArr; menu &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_page_up
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_page_down
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2fa]"></a>gui_customized_tools_btn_evt</STRONG> (Thumb, 2442 bytes, Stack size 32 bytes, gui_customized_tools.o(i.gui_customized_tools_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = gui_customized_tools_btn_evt &rArr; timer_notify_display_start &rArr; timer_notify_display_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[2fb]"></a>gui_customized_tools_hint_btn_evt</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, gui_customized_tools.o(i.gui_customized_tools_hint_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_customized_tools_hint_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1bd]"></a>gui_customized_tools_hint_paint</STRONG> (Thumb, 218 bytes, Stack size 16 bytes, gui_customized_tools.o(i.gui_customized_tools_hint_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1300 + Unknown Stack Size
<LI>Call Chain = gui_customized_tools_hint_paint &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[1bc]"></a>gui_customized_tools_paint</STRONG> (Thumb, 884 bytes, Stack size 32 bytes, gui_customized_tools.o(i.gui_customized_tools_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380 + Unknown Stack Size
<LI>Call Chain = gui_customized_tools_paint &rArr; menu_monitor_and_tools &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_monitor_and_tools
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_page_up
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_page_down
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[755]"></a>gui_daysofweek_paint</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, gui.o(i.gui_daysofweek_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = gui_daysofweek_paint &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_average_based_paint
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_histogram_step_paint
</UL>

<P><STRONG><a name="[373]"></a>gui_dfu_btn_evt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gui_dfu.o(i.gui_dfu_btn_evt))
<BR><BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[23a]"></a>gui_dfu_paint</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, gui_dfu.o(i.gui_dfu_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396 + Unknown Stack Size
<LI>Call Chain = gui_dfu_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dfu_timer_start
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_display
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[758]"></a>gui_dfu_timer_init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gui_dfu.o(i.gui_dfu_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 588 + Unknown Stack Size
<LI>Call Chain = gui_dfu_timer_init &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_tasks
</UL>

<P><STRONG><a name="[757]"></a>gui_dfu_timer_start</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gui_dfu.o(i.gui_dfu_timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = gui_dfu_timer_start &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_update_cod_dial_paint
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dfu_paint
</UL>

<P><STRONG><a name="[5ea]"></a>gui_dfu_timer_stop</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui_dfu.o(i.gui_dfu_timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 452 + Unknown Stack Size
<LI>Call Chain = gui_dfu_timer_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_update_bp_finish
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_disconnect
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_app_ble_dfu_finish
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_app_ble_dfu_apollo_reset_n_activate
</UL>

<P><STRONG><a name="[16c]"></a>gui_dial_paint</STRONG> (Thumb, 224 bytes, Stack size 8 bytes, gui_dial.o(i.gui_dial_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1540 + Unknown Stack Size
<LI>Call Chain = gui_dial_paint &rArr; gui_dial_status &rArr; LCD_SetString_ExtFlash &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_voltage_flag_get
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Curr_Home_Num
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_widget
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_weather
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_time
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_status
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_kcal
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_heart
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_graph
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_date
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_battery
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_background
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_ambient
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_addr_offset_get
<LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_LOCK_start
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[76b]"></a>gui_dial_preview</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, gui_dial.o(i.gui_dial_preview))
<BR><BR>[Stack]<UL><LI>Max Depth = 1588 + Unknown Stack Size
<LI>Call Chain = gui_dial_preview &rArr; gui_dial_status &rArr; LCD_SetString_ExtFlash &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_widget
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_weather
<LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_time
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_status
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_kcal
<LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_heart
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_graph
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_date
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_battery
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_background
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_ambient
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_addr_offset_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_preview_paint
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_success_paint
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_paint
</UL>

<P><STRONG><a name="[762]"></a>gui_distance_histogram</STRONG> (Thumb, 446 bytes, Stack size 120 bytes, gui.o(i.gui_distance_histogram))
<BR><BR>[Stack]<UL><LI>Max Depth = 1484 + Unknown Stack Size
<LI>Call Chain = gui_distance_histogram &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_weekmain_max_distance
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_week_sport_distance
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_week_common_distance
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_graph
</UL>

<P><STRONG><a name="[376]"></a>gui_end_unfinished_sport_hint_btn_evt</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gui_vo2max.o(i.gui_end_unfinished_sport_hint_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 644 + Unknown Stack Size
<LI>Call Chain = gui_end_unfinished_sport_hint_btn_evt &rArr; SportContinueLaterDisplay &rArr; sport_continue_later_end &rArr; OpenSensor &rArr; ParameterInitialization &rArr; MatCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportContinueLaterDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[23d]"></a>gui_end_unfinished_sport_hint_paint</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, gui_vo2max.o(i.gui_end_unfinished_sport_hint_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388 + Unknown Stack Size
<LI>Call Chain = gui_end_unfinished_sport_hint_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2cc]"></a>gui_gps_detail_btn_evt</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, gui_tool_gps.o(i.gui_gps_detail_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 700<LI>Call Chain = gui_gps_detail_btn_evt &rArr; ActivityDataNUMTraverse &rArr; ActivityDataGetFlash &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityDataReverseTraverse
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityDataNUMTraverse
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[772]"></a>gui_gps_detail_options_paint</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, gui_tool_gps.o(i.gui_gps_detail_options_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_gps_detail_options_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_gps_detail_paint
</UL>

<P><STRONG><a name="[18c]"></a>gui_gps_detail_paint</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, gui_tool_gps.o(i.gui_gps_detail_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_gps_detail_paint &rArr; gui_gps_detail_options_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_gps_detail_options_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2cd]"></a>gui_gps_trail_remind_btn_evt</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui_tool_gps.o(i.gui_gps_trail_remind_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_gps_trail_remind_btn_evt &rArr; gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[18d]"></a>gui_gps_trail_remind_paint</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gui_tool_gps.o(i.gui_gps_trail_remind_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380 + Unknown Stack Size
<LI>Call Chain = gui_gps_trail_remind_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2b1]"></a>gui_heartrate_average_based_btn_evt</STRONG> (Thumb, 272 bytes, Stack size 16 bytes, gui_heartrate.o(i.gui_heartrate_average_based_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 796<LI>Call Chain = gui_heartrate_average_based_btn_evt &rArr; set_switch_screen_count_evt &rArr; get_current_monitor_screen &rArr; Get_TrainPlanDayRecord &rArr; get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_start
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_switch_screen_count_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[16d]"></a>gui_heartrate_average_based_paint</STRONG> (Thumb, 324 bytes, Stack size 40 bytes, gui_heartrate.o(i.gui_heartrate_average_based_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1500 + Unknown Stack Size
<LI>Call Chain = gui_heartrate_average_based_paint &rArr; gui_histogram_hdr_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_daysofweek_paint
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_BasedHDRWeekData
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_histogram_hdr_paint
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2be]"></a>gui_heartrate_btn_evt</STRONG> (Thumb, 302 bytes, Stack size 16 bytes, gui_heartrate.o(i.gui_heartrate_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 796<LI>Call Chain = gui_heartrate_btn_evt &rArr; set_switch_screen_count_evt &rArr; get_current_monitor_screen &rArr; Get_TrainPlanDayRecord &rArr; get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_close
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_statu_get
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_tool_stop
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_switch_screen_count_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[274]"></a>gui_heartrate_data_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gui_heartrate.o(i.gui_heartrate_data_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = gui_heartrate_data_init &rArr; GetDayMainData_BasedHDRWeekData &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_BasedHDRWeekData
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_hdr_time_btn_evt
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_longtool_screen
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_monitor_screen
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Home_Index
</UL>

<P><STRONG><a name="[2bd]"></a>gui_heartrate_hint_measuring_btn_evt</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, gui_heartrate.o(i.gui_heartrate_hint_measuring_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = gui_heartrate_hint_measuring_btn_evt &rArr; task_hrt_start &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_start
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[17c]"></a>gui_heartrate_hint_measuring_paint</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, gui_heartrate.o(i.gui_heartrate_hint_measuring_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396 + Unknown Stack Size
<LI>Call Chain = gui_heartrate_hint_measuring_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_point_direction
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[17e]"></a>gui_heartrate_paint</STRONG> (Thumb, 320 bytes, Stack size 72 bytes, gui_heartrate.o(i.gui_heartrate_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = gui_heartrate_paint &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_wave_paint
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2bf]"></a>gui_heartrate_stable_btn_evt</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, gui_heartrate.o(i.gui_heartrate_stable_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = gui_heartrate_stable_btn_evt &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[176]"></a>gui_heartrate_stable_paint</STRONG> (Thumb, 260 bytes, Stack size 32 bytes, gui_heartrate.o(i.gui_heartrate_stable_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396 + Unknown Stack Size
<LI>Call Chain = gui_heartrate_stable_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tick_cross
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[275]"></a>gui_heartrate_statu_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_heartrate.o(i.gui_heartrate_statu_get))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_btn_evt
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_longtool_screen
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_monitor_screen
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Home_Index
</UL>

<P><STRONG><a name="[776]"></a>gui_heartrate_wave_paint</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, gui_heartrate.o(i.gui_heartrate_wave_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = gui_heartrate_wave_paint &rArr; get_hdr_range_color &rArr; get_hdr_range &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hdr_range_color
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_recovery_paint
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_paint
</UL>

<P><STRONG><a name="[778]"></a>gui_hike_prompt_paint</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, gui_sport_crosscountry_hike.o(i.gui_hike_prompt_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_hike_prompt_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_track_paint
</UL>

<P><STRONG><a name="[779]"></a>gui_hike_track_update_paint</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_sport_crosscountry_hike.o(i.gui_hike_track_update_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_hike_track_update_paint &rArr; draw_track_mark &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_track_mark
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsport_arrows
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTrack
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLoadTrack
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_dottrack_nums
</UL>
<BR>[Called By]<UL><LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_track_paint
</UL>

<P><STRONG><a name="[2b0]"></a>gui_home_btn_evt</STRONG> (Thumb, 818 bytes, Stack size 24 bytes, gui_home.o(i.gui_home_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 780 + Unknown Stack Size
<LI>Call Chain = gui_home_btn_evt &rArr; get_current_monitor_screen &rArr; Get_TrainPlanDayRecord &rArr; get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_menu_index_record
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_menu_index_record
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateGPSTask
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_start
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_statu_get
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeout_back_start
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_tool_start
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_LOCK_stop
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_menu_init
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_data_init
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToolIndexRecAdjust
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportIndexRecAdjust
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportContinueLaterDisplay
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Select_Tool_Index
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Select_Sport_Index
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Curr_Tool_Index
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Curr_Sport_Index
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateToolDisplay
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateSportDisplay
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdjustToolIndex
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_select_monitor_index
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notify_low_bat_start
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_monitor_screen
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[2ba]"></a>gui_home_lock_hint_btn_evt</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gui_home.o(i.gui_home_lock_hint_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_home_lock_hint_btn_evt &rArr; timer_notify_display_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[177]"></a>gui_home_lock_hint_paint</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, gui_home.o(i.gui_home_lock_hint_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388 + Unknown Stack Size
<LI>Call Chain = gui_home_lock_hint_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_button_up
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_button_back
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[370]"></a>gui_hwt_btn_evt</STRONG> (Thumb, 274 bytes, Stack size 16 bytes, gui_hwt.o(i.gui_hwt_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396 + Unknown Stack Size
<LI>Call Chain = gui_hwt_btn_evt &rArr; gui_hwt_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_hwt_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1db]"></a>gui_hwt_paint</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, gui_hwt.o(i.gui_hwt_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380 + Unknown Stack Size
<LI>Call Chain = gui_hwt_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplaySomeLine
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_hwt_btn_evt
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_lcd_enable
</UL>

<P><STRONG><a name="[783]"></a>gui_indoorrun_prompt_paint</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, gui_sport_indoorrun.o(i.gui_indoorrun_prompt_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396 + Unknown Stack Size
<LI>Call Chain = gui_indoorrun_prompt_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_data_paint
</UL>

<P><STRONG><a name="[784]"></a>gui_lactate_bpm_paint</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, gui_sport.o(i.gui_lactate_bpm_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404 + Unknown Stack Size
<LI>Call Chain = gui_lactate_bpm_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_mesuring_paint
</UL>

<P><STRONG><a name="[785]"></a>gui_lactate_distance_paint</STRONG> (Thumb, 248 bytes, Stack size 48 bytes, gui_sport.o(i.gui_lactate_distance_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_lactate_distance_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_mesuring_paint
</UL>

<P><STRONG><a name="[4ae]"></a>gui_lactate_mesuring_paint</STRONG> (Thumb, 154 bytes, Stack size 56 bytes, gui_lactate_threshold.o(i.gui_lactate_mesuring_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1476 + Unknown Stack Size
<LI>Call Chain = gui_lactate_mesuring_paint &rArr; gui_lactate_time_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_time_paint
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_pace_paint
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_distance_paint
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_bpm_paint
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[787]"></a>gui_lactate_pace_paint</STRONG> (Thumb, 212 bytes, Stack size 48 bytes, gui_sport.o(i.gui_lactate_pace_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_lactate_pace_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_mesuring_paint
</UL>

<P><STRONG><a name="[2c8]"></a>gui_lactate_threshold_hint_btn_evt</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, gui_lactate_threshold.o(i.gui_lactate_threshold_hint_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = gui_lactate_threshold_hint_btn_evt &rArr; timer_app_countdown_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseGPSTask
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_countdown_start
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[187]"></a>gui_lactate_threshold_hint_paint</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_lactate_threshold.o(i.gui_lactate_threshold_hint_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404 + Unknown Stack Size
<LI>Call Chain = gui_lactate_threshold_hint_paint &rArr; gui_lactate_threshold_hint_content_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_threshold_hint_content_paint
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2b7]"></a>gui_lactate_threshold_value_btn_evt</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, gui_lactate_threshold.o(i.gui_lactate_threshold_value_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 572 + Unknown Stack Size
<LI>Call Chain = gui_lactate_threshold_value_btn_evt &rArr; CreateGPSTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_gps_hint_motor_flag
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateGPSTask
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[173]"></a>gui_lactate_threshold_value_paint</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui_lactate_threshold.o(i.gui_lactate_threshold_value_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1492 + Unknown Stack Size
<LI>Call Chain = gui_lactate_threshold_value_paint &rArr; gui_clactate_threshold_value_title_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clactate_threshold_value_title_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[786]"></a>gui_lactate_time_paint</STRONG> (Thumb, 226 bytes, Stack size 56 bytes, gui_sport.o(i.gui_lactate_time_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1420 + Unknown Stack Size
<LI>Call Chain = gui_lactate_time_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_mesuring_paint
</UL>

<P><STRONG><a name="[789]"></a>gui_marathon_track_update_paint</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_sport_marathon.o(i.gui_marathon_track_update_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_marathon_track_update_paint &rArr; draw_track_mark &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_track_mark
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsport_arrows
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTrack
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLoadTrack
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_dottrack_nums
</UL>
<BR>[Called By]<UL><LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_track_paint
</UL>

<P><STRONG><a name="[2e9]"></a>gui_menu_btn_evt</STRONG> (Thumb, 624 bytes, Stack size 88 bytes, gui_menu.o(i.gui_menu_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 572 + Unknown Stack Size
<LI>Call Chain = gui_menu_btn_evt &rArr; timer_notify_display_start &rArr; timer_notify_display_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_app_data_read
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_app_data_crc_check_bootsetting
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[780]"></a>gui_menu_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_menu.o(i.gui_menu_init))
<BR><BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
</UL>

<P><STRONG><a name="[1ab]"></a>gui_menu_paint</STRONG> (Thumb, 614 bytes, Stack size 16 bytes, gui_menu.o(i.gui_menu_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1436 + Unknown Stack Size
<LI>Call Chain = gui_menu_paint &rArr; menu &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[312]"></a>gui_monitor_bat_chg_btn_evt</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gui_notify_bat.o(i.gui_monitor_bat_chg_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 468 + Unknown Stack Size
<LI>Call Chain = gui_monitor_bat_chg_btn_evt &rArr; timer_battery_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_battery_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1d8]"></a>gui_monitor_bat_chg_paint</STRONG> (Thumb, 310 bytes, Stack size 56 bytes, gui_notify_bat.o(i.gui_monitor_bat_chg_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1420 + Unknown Stack Size
<LI>Call Chain = gui_monitor_bat_chg_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_voltage_flag_get
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[311]"></a>gui_monitor_bat_low_btn_evt</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, gui_notify_bat.o(i.gui_monitor_bat_low_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_monitor_bat_low_btn_evt &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1d7]"></a>gui_monitor_bat_low_paint</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, gui_notify_bat.o(i.gui_monitor_bat_low_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380 + Unknown Stack Size
<LI>Call Chain = gui_monitor_bat_low_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2bb]"></a>gui_monitor_hdr_time_btn_evt</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, gui_notify_base_hdr.o(i.gui_monitor_hdr_time_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 548 + Unknown Stack Size
<LI>Call Chain = gui_monitor_hdr_time_btn_evt &rArr; gui_heartrate_data_init &rArr; GetDayMainData_BasedHDRWeekData &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_tool_start
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_data_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[2bc]"></a>gui_monitor_hdr_time_explain_btn_evt</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, gui_heartrate.o(i.gui_monitor_hdr_time_explain_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = gui_monitor_hdr_time_explain_btn_evt &rArr; task_hrt_start &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_start
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[17b]"></a>gui_monitor_hdr_time_explain_paint</STRONG> (Thumb, 202 bytes, Stack size 32 bytes, gui_heartrate.o(i.gui_monitor_hdr_time_explain_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396 + Unknown Stack Size
<LI>Call Chain = gui_monitor_hdr_time_explain_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_point_direction
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[17a]"></a>gui_monitor_hdr_time_paint</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, gui_notify_base_hdr.o(i.gui_monitor_hdr_time_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396 + Unknown Stack Size
<LI>Call Chain = gui_monitor_hdr_time_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[4f1]"></a>gui_motion_trail_btn_detail</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_tool_gps.o(i.gui_motion_trail_btn_detail))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_motion_trail_btn_detail &rArr; gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
</UL>

<P><STRONG><a name="[2d0]"></a>gui_motion_trail_btn_evt</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, gui_tool_gps.o(i.gui_motion_trail_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = gui_motion_trail_btn_evt &rArr; ActivityDataTraverse &rArr; ActivityDataGetFlash &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_btn_load
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityDataTraverse
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ActivityDataReverseTraverse
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[78c]"></a>gui_motion_trail_btn_load</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gui_tool_gps.o(i.gui_motion_trail_btn_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_motion_trail_btn_load &rArr; Send_Timer_Cmd &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Timer_Cmd
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_btn_evt
</UL>

<P><STRONG><a name="[2d1]"></a>gui_motion_trail_detail_btn_evt</STRONG> (Thumb, 370 bytes, Stack size 16 bytes, gui_tool_gps.o(i.gui_motion_trail_detail_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 580 + Unknown Stack Size
<LI>Call Chain = gui_motion_trail_detail_btn_evt &rArr; ReadySport &rArr; CreateGPSTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLoadTrack
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySport
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_init
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_init
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_init
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_init
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_init
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_hike_init
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_init
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[191]"></a>gui_motion_trail_detail_paint</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, gui_tool_gps.o(i.gui_motion_trail_detail_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380 + Unknown Stack Size
<LI>Call Chain = gui_motion_trail_detail_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[190]"></a>gui_motion_trail_paint</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, gui_tool_gps.o(i.gui_motion_trail_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1780 + Unknown Stack Size
<LI>Call Chain = gui_motion_trail_paint &rArr; gui_sports_data_detail_options_paint &rArr; gui_sports_record_data_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_data_detail_options_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2b4]"></a>gui_motionsrecord_last_btn_evt</STRONG> (Thumb, 278 bytes, Stack size 16 bytes, gui_motionsrecord.o(i.gui_motionsrecord_last_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 796<LI>Call Chain = gui_motionsrecord_last_btn_evt &rArr; set_switch_screen_count_evt &rArr; get_current_monitor_screen &rArr; Get_TrainPlanDayRecord &rArr; get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_sport_record
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_switch_screen_count_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[170]"></a>gui_motionsrecord_last_paint</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gui_motionsrecord.o(i.gui_motionsrecord_last_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1420 + Unknown Stack Size
<LI>Call Chain = gui_motionsrecord_last_paint &rArr; gui_motionsrecord_mile_time_pace_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;List_None
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motionsrecord_title_paint
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motionsrecord_mile_time_pace_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2d5]"></a>gui_navigation_del_btn_evt</STRONG> (Thumb, 248 bytes, Stack size 8 bytes, gui_tool_gps.o(i.gui_navigation_del_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = gui_navigation_del_btn_evt &rArr; ShareTrackDataTraverse &rArr; ShareTrackDataGetFlash &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLoadTrack
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShareTrackDataTraverse
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShareTrackDataNUMTraverse
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShareTrackDataEraseFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[195]"></a>gui_navigation_del_paint</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, gui_tool_gps.o(i.gui_navigation_del_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_navigation_del_paint &rArr; gui_navigation_del_options_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_del_options_paint
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_del_caption_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2d3]"></a>gui_navigation_item_btn_evt</STRONG> (Thumb, 494 bytes, Stack size 16 bytes, gui_tool_gps.o(i.gui_navigation_item_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 580 + Unknown Stack Size
<LI>Call Chain = gui_navigation_item_btn_evt &rArr; ReadySport &rArr; CreateGPSTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLoadTrack
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySport
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_init
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_init
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_init
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_init
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_init
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_hike_init
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_init
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[193]"></a>gui_navigation_item_paint</STRONG> (Thumb, 276 bytes, Stack size 48 bytes, gui_tool_gps.o(i.gui_navigation_item_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_navigation_item_paint &rArr; gui_navigation_item_ops_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLine
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_ops_paint
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2d4]"></a>gui_navigation_trail_btn_evt</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gui_tool_gps.o(i.gui_navigation_trail_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_navigation_trail_btn_evt &rArr; gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[194]"></a>gui_navigation_trail_paint</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gui_tool_gps.o(i.gui_navigation_trail_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1436 + Unknown Stack Size
<LI>Call Chain = gui_navigation_trail_paint &rArr; gui_realtime_battery_trail_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trail_distance_paint
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_c_1_track
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_realtime_battery_trail_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2b5]"></a>gui_notification_btn_evt</STRONG> (Thumb, 274 bytes, Stack size 16 bytes, gui_notification.o(i.gui_notification_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 796<LI>Call Chain = gui_notification_btn_evt &rArr; set_switch_screen_count_evt &rArr; get_current_monitor_screen &rArr; Get_TrainPlanDayRecord &rArr; get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_info_init
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_switch_screen_count_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[350]"></a>gui_notification_info_btn_evt</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, gui_notification.o(i.gui_notification_info_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = gui_notification_info_btn_evt &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_info_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1da]"></a>gui_notification_info_paint</STRONG> (Thumb, 768 bytes, Stack size 120 bytes, gui_notification.o(i.gui_notification_info_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1484 + Unknown Stack Size
<LI>Call Chain = gui_notification_info_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[171]"></a>gui_notification_paint</STRONG> (Thumb, 5078 bytes, Stack size 128 bytes, gui_notification.o(i.gui_notification_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1492 + Unknown Stack Size
<LI>Call Chain = gui_notification_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_unread_msg_recogn
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_unread_msg_get
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[79f]"></a>gui_notification_unread_msg_get</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gui_notification.o(i.gui_notification_unread_msg_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = gui_notification_unread_msg_get &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_paint
</UL>

<P><STRONG><a name="[7a0]"></a>gui_notification_unread_msg_recogn</STRONG> (Thumb, 276 bytes, Stack size 240 bytes, gui_notification.o(i.gui_notification_unread_msg_recogn))
<BR><BR>[Stack]<UL><LI>Max Depth = 692<LI>Call Chain = gui_notification_unread_msg_recogn &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_paint
</UL>

<P><STRONG><a name="[310]"></a>gui_notify_alarm_btn_evt</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, gui_notify_alarm.o(i.gui_notify_alarm_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 492 + Unknown Stack Size
<LI>Call Chain = gui_notify_alarm_btn_evt &rArr; timer_notify_remind_stop &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_stop
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1d6]"></a>gui_notify_alarm_paint</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, gui_notify_alarm.o(i.gui_notify_alarm_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_notify_alarm_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[34f]"></a>gui_notify_app_msg_btn_evt</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, gui_notify_app_msg.o(i.gui_notify_app_msg_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_notify_app_msg_btn_evt &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_phone_call_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1d9]"></a>gui_notify_app_msg_paint</STRONG> (Thumb, 764 bytes, Stack size 120 bytes, gui_notify_app_msg.o(i.gui_notify_app_msg_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1484 + Unknown Stack Size
<LI>Call Chain = gui_notify_app_msg_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[37b]"></a>gui_notify_bind_status_btn_evt</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gui_notify_ble.o(i.gui_notify_bind_status_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_notify_bind_status_btn_evt &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[242]"></a>gui_notify_bind_status_paint</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, gui_notify_ble.o(i.gui_notify_bind_status_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380 + Unknown Stack Size
<LI>Call Chain = gui_notify_bind_status_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[30e]"></a>gui_notify_ble_bond_btn_evt</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gui_notify_ble.o(i.gui_notify_ble_bond_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_notify_ble_bond_btn_evt &rArr; timer_notify_display_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1d3]"></a>gui_notify_ble_bond_paint</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gui_notify_ble.o(i.gui_notify_ble_bond_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380 + Unknown Stack Size
<LI>Call Chain = gui_notify_ble_bond_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[30c]"></a>gui_notify_ble_connect_btn_evt</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gui_notify_ble.o(i.gui_notify_ble_connect_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_notify_ble_connect_btn_evt &rArr; timer_notify_display_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1d1]"></a>gui_notify_ble_connect_paint</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gui_notify_ble.o(i.gui_notify_ble_connect_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380 + Unknown Stack Size
<LI>Call Chain = gui_notify_ble_connect_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[30d]"></a>gui_notify_ble_disconnect_btn_evt</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gui_notify_ble.o(i.gui_notify_ble_disconnect_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_notify_ble_disconnect_btn_evt &rArr; timer_notify_display_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1d2]"></a>gui_notify_ble_disconnect_paint</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, gui_notify_ble.o(i.gui_notify_ble_disconnect_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380 + Unknown Stack Size
<LI>Call Chain = gui_notify_ble_disconnect_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[30f]"></a>gui_notify_ble_passkey_btn_evt</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gui_notify_ble.o(i.gui_notify_ble_passkey_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_notify_ble_passkey_btn_evt &rArr; timer_notify_display_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1d4]"></a>gui_notify_ble_passkey_paint</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, gui_notify_ble.o(i.gui_notify_ble_passkey_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404 + Unknown Stack Size
<LI>Call Chain = gui_notify_ble_passkey_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[7a2]"></a>gui_notify_climb_atuocircle_paint</STRONG> (Thumb, 682 bytes, Stack size 72 bytes, gui_notify_sport.o(i.gui_notify_climb_atuocircle_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1436 + Unknown Stack Size
<LI>Call Chain = gui_notify_climb_atuocircle_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_atuocircle_paint
</UL>

<P><STRONG><a name="[7a3]"></a>gui_notify_cycling_atuocircle_paint</STRONG> (Thumb, 654 bytes, Stack size 80 bytes, gui_notify_sport.o(i.gui_notify_cycling_atuocircle_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444 + Unknown Stack Size
<LI>Call Chain = gui_notify_cycling_atuocircle_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_atuocircle_paint
</UL>

<P><STRONG><a name="[378]"></a>gui_notify_find_watch_btn_evt</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, gui_notify_warning.o(i.gui_notify_find_watch_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_notify_find_watch_btn_evt &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_disable
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_findwatch_response
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_findwatch_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[23e]"></a>gui_notify_find_watch_piant</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, gui_notify_warning.o(i.gui_notify_find_watch_piant))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380 + Unknown Stack Size
<LI>Call Chain = gui_notify_find_watch_piant &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_findwatch_timer_start
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_display
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[7a4]"></a>gui_notify_findwatch_response</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, gui_notify_warning.o(i.gui_notify_findwatch_response))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = gui_notify_findwatch_response &rArr; drv_ble_send_data &rArr; drv_ble_timer_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_find_watch_btn_evt
</UL>

<P><STRONG><a name="[7a7]"></a>gui_notify_findwatch_timer_init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gui_notify_warning.o(i.gui_notify_findwatch_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 588 + Unknown Stack Size
<LI>Call Chain = gui_notify_findwatch_timer_init &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_tasks
</UL>

<P><STRONG><a name="[7a6]"></a>gui_notify_findwatch_timer_start</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gui_notify_warning.o(i.gui_notify_findwatch_timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = gui_notify_findwatch_timer_start &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_find_watch_piant
</UL>

<P><STRONG><a name="[615]"></a>gui_notify_findwatch_timer_stop</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui_notify_warning.o(i.gui_notify_findwatch_timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 452 + Unknown Stack Size
<LI>Call Chain = gui_notify_findwatch_timer_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_find_watch_btn_evt
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_find_watch
</UL>

<P><STRONG><a name="[361]"></a>gui_notify_heartrate_warning_btn_evt</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gui_notify_train.o(i.gui_notify_heartrate_warning_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_notify_heartrate_warning_btn_evt &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[20b]"></a>gui_notify_heartrate_warning_paint</STRONG> (Thumb, 174 bytes, Stack size 48 bytes, gui_notify_train.o(i.gui_notify_heartrate_warning_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_notify_heartrate_warning_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Sport_Heart
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[37c]"></a>gui_notify_locatin_ok_btn_evt</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gui_notify_ble.o(i.gui_notify_locatin_ok_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_notify_locatin_ok_btn_evt &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[243]"></a>gui_notify_locatin_ok_paint</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, gui_notify_ble.o(i.gui_notify_locatin_ok_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1588 + Unknown Stack Size
<LI>Call Chain = gui_notify_locatin_ok_paint &rArr; gui_sport_location_ok_data_paint &rArr; gui_sport_data_display_preview_paint &rArr; gui_sport_data_four_bar_display_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCircle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_ready_paint
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_location_ok_data_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[37a]"></a>gui_notify_on_bind_device_btn_evt</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, gui_notify_ble.o(i.gui_notify_on_bind_device_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_notify_on_bind_device_btn_evt &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_on_bind_device
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[241]"></a>gui_notify_on_bind_device_paint</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, gui_notify_ble.o(i.gui_notify_on_bind_device_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396 + Unknown Stack Size
<LI>Call Chain = gui_notify_on_bind_device_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[7a9]"></a>gui_notify_run_atuocircle_paint</STRONG> (Thumb, 632 bytes, Stack size 72 bytes, gui_notify_sport.o(i.gui_notify_run_atuocircle_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1436 + Unknown Stack Size
<LI>Call Chain = gui_notify_run_atuocircle_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_atuocircle_paint
</UL>

<P><STRONG><a name="[212]"></a>gui_notify_sport_atuocircle_paint</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, gui_notify_sport.o(i.gui_notify_sport_atuocircle_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1452 + Unknown Stack Size
<LI>Call Chain = gui_notify_sport_atuocircle_paint &rArr; gui_notify_cycling_atuocircle_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_walk_atuocircle_paint
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_run_atuocircle_paint
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_cycling_atuocircle_paint
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_climb_atuocircle_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[367]"></a>gui_notify_sport_autocircle_btn_evt</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gui_notify_sport.o(i.gui_notify_sport_autocircle_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_notify_sport_autocircle_btn_evt &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[36b]"></a>gui_notify_sport_calory_btn_evt</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gui_notify_sport.o(i.gui_notify_sport_calory_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_notify_sport_calory_btn_evt &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[20e]"></a>gui_notify_sport_calory_paint</STRONG> (Thumb, 206 bytes, Stack size 48 bytes, gui_notify_sport.o(i.gui_notify_sport_calory_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_notify_sport_calory_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[364]"></a>gui_notify_sport_circle_btn_evt</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gui_notify_sport.o(i.gui_notify_sport_circle_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_notify_sport_circle_btn_evt &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[20f]"></a>gui_notify_sport_circle_paint</STRONG> (Thumb, 206 bytes, Stack size 48 bytes, gui_notify_sport.o(i.gui_notify_sport_circle_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_notify_sport_circle_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[366]"></a>gui_notify_sport_distance_btn_evt</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gui_notify_sport.o(i.gui_notify_sport_distance_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_notify_sport_distance_btn_evt &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[211]"></a>gui_notify_sport_distance_paint</STRONG> (Thumb, 246 bytes, Stack size 64 bytes, gui_notify_sport.o(i.gui_notify_sport_distance_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_notify_sport_distance_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[36a]"></a>gui_notify_sport_height_btn_evt</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gui_notify_sport.o(i.gui_notify_sport_height_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_notify_sport_height_btn_evt &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[213]"></a>gui_notify_sport_height_paint</STRONG> (Thumb, 174 bytes, Stack size 48 bytes, gui_notify_sport.o(i.gui_notify_sport_height_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_notify_sport_height_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[369]"></a>gui_notify_sport_pace_btn_evt</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gui_notify_sport.o(i.gui_notify_sport_pace_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_notify_sport_pace_btn_evt &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[214]"></a>gui_notify_sport_pace_paint</STRONG> (Thumb, 252 bytes, Stack size 64 bytes, gui_notify_sport.o(i.gui_notify_sport_pace_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_notify_sport_pace_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[368]"></a>gui_notify_sport_speed_btn_evt</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gui_notify_sport.o(i.gui_notify_sport_speed_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_notify_sport_speed_btn_evt &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[215]"></a>gui_notify_sport_speed_paint</STRONG> (Thumb, 288 bytes, Stack size 72 bytes, gui_notify_sport.o(i.gui_notify_sport_speed_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1436 + Unknown Stack Size
<LI>Call Chain = gui_notify_sport_speed_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[365]"></a>gui_notify_sport_time_btn_evt</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gui_notify_sport.o(i.gui_notify_sport_time_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_notify_sport_time_btn_evt &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[210]"></a>gui_notify_sport_time_paint</STRONG> (Thumb, 212 bytes, Stack size 56 bytes, gui_notify_sport.o(i.gui_notify_sport_time_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1420 + Unknown Stack Size
<LI>Call Chain = gui_notify_sport_time_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[362]"></a>gui_notify_train_calory_btn_evt</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gui_notify_train.o(i.gui_notify_train_calory_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_notify_train_calory_btn_evt &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[20c]"></a>gui_notify_train_calory_paint</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, gui_notify_train.o(i.gui_notify_train_calory_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404 + Unknown Stack Size
<LI>Call Chain = gui_notify_train_calory_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[363]"></a>gui_notify_train_step_btn_evt</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gui_notify_train.o(i.gui_notify_train_step_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_notify_train_step_btn_evt &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[20d]"></a>gui_notify_train_step_paint</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, gui_notify_train.o(i.gui_notify_train_step_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_notify_train_step_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[7aa]"></a>gui_notify_walk_atuocircle_paint</STRONG> (Thumb, 582 bytes, Stack size 72 bytes, gui_notify_sport.o(i.gui_notify_walk_atuocircle_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1436 + Unknown Stack Size
<LI>Call Chain = gui_notify_walk_atuocircle_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_atuocircle_paint
</UL>

<P><STRONG><a name="[36f]"></a>gui_notify_warning_btn_evt</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gui_notify_warning.o(i.gui_notify_warning_btn_evt))
<BR><BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[237]"></a>gui_notify_warning_paint</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui_notify_warning.o(i.gui_notify_warning_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388 + Unknown Stack Size
<LI>Call Chain = gui_notify_warning_paint &rArr; gui_notify_warning_index_watch_info_ble_off &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_warning_index_watch_info_ble_off
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_warning_index_accessory_ble_off
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[752]"></a>gui_page_down</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui.o(i.gui_page_down))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = gui_page_down &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_record_paint
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_menu_paint
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_menu_paint
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_exit_paint
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_pressure_paint
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_menu_paint
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_paint
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_paint
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_tools_paint
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_sports_paint
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_ready_menu
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
</UL>

<P><STRONG><a name="[750]"></a>gui_page_up</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui.o(i.gui_page_up))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = gui_page_up &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_pressure_paint
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_paint
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_tools_paint
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_sports_paint
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_ready_menu
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
</UL>

<P><STRONG><a name="[775]"></a>gui_point_direction</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, gui_home.o(i.gui_point_direction))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = gui_point_direction &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_hint_paint
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_inter_paint
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_hdr_time_explain_paint
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_hint_measuring_paint
</UL>

<P><STRONG><a name="[379]"></a>gui_post_auto_back_home_btn_evt</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gui_time_calibration_test.o(i.gui_post_auto_back_home_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = gui_post_auto_back_home_btn_evt &rArr; SetupTimerB2 &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupTimerB2
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[23f]"></a>gui_post_auto_back_home_paint</STRONG> (Thumb, 322 bytes, Stack size 168 bytes, gui_time_calibration_test.o(i.gui_post_auto_back_home_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1532 + Unknown Stack Size
<LI>Call Chain = gui_post_auto_back_home_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_m_AutoBackScreen
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[36d]"></a>gui_post_gps_details_evt</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gui_gps_test.o(i.gui_post_gps_details_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_post_gps_details_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[36c]"></a>gui_post_gps_evt</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, gui_gps_test.o(i.gui_post_gps_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_post_gps_evt &rArr; CloseGPSTask &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseGPSTask
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[371]"></a>gui_post_watch_info_btn_evt</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, gui_post_watch_info.o(i.gui_post_watch_info_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_post_watch_info_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[216]"></a>gui_post_watch_info_paint</STRONG> (Thumb, 598 bytes, Stack size 136 bytes, gui_post_watch_info.o(i.gui_post_watch_info_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1500 + Unknown Stack Size
<LI>Call Chain = gui_post_watch_info_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_app_data_read
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_app_data_crc_check_bootsetting
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[75d]"></a>gui_progess_bar</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, gui.o(i.gui_progess_bar))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = gui_progess_bar &rArr; gui_progress_circle_0 &rArr; LCD_SetArc &rArr; draw_arc &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_progress_circle_2
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_progress_circle_1
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_progress_circle_0
</UL>
<BR>[Called By]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_status
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_battery
</UL>

<P><STRONG><a name="[76c]"></a>gui_progress_circle</STRONG> (Thumb, 150 bytes, Stack size 56 bytes, gui.o(i.gui_progress_circle))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = gui_progress_circle &rArr; LCD_SetArc &rArr; draw_arc &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
</UL>
<BR>[Called By]<UL><LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_weather
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_status
</UL>

<P><STRONG><a name="[7b0]"></a>gui_progress_loop</STRONG> (Thumb, 332 bytes, Stack size 104 bytes, gui.o(i.gui_progress_loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 528<LI>Call Chain = gui_progress_loop &rArr; LCD_SetArc &rArr; draw_arc &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_circle_point
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCircle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_paint
</UL>

<P><STRONG><a name="[2ce]"></a>gui_projection_btn_evt</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, gui_tool_gps.o(i.gui_projection_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_projection_btn_evt &rArr; gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[18e]"></a>gui_projection_paint</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, gui_tool_gps.o(i.gui_projection_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_projection_paint &rArr; gui_projection_options_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_projection_options_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2b9]"></a>gui_recovery_time_btn_evt</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, gui_recovery.o(i.gui_recovery_time_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_recovery_time_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[175]"></a>gui_recovery_time_paint</STRONG> (Thumb, 326 bytes, Stack size 48 bytes, gui_recovery.o(i.gui_recovery_time_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_recovery_time_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[7b3]"></a>gui_run_save_detail_1_paint</STRONG> (Thumb, 1302 bytes, Stack size 120 bytes, gui_run.o(i.gui_run_save_detail_1_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1484 + Unknown Stack Size
<LI>Call Chain = gui_run_save_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_detail_paint
</UL>

<P><STRONG><a name="[7b4]"></a>gui_run_save_detail_2_paint</STRONG> (Thumb, 1190 bytes, Stack size 96 bytes, gui_run.o(i.gui_run_save_detail_2_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1460 + Unknown Stack Size
<LI>Call Chain = gui_run_save_detail_2_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_detail_paint
</UL>

<P><STRONG><a name="[7b6]"></a>gui_run_track_update_paint</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_run.o(i.gui_run_track_update_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_run_track_update_paint &rArr; draw_track_mark &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_track_mark
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsport_arrows
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTrack
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLoadTrack
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_dottrack_nums
</UL>
<BR>[Called By]<UL><LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_track_paint
</UL>

<P><STRONG><a name="[252]"></a>gui_sport_arrows</STRONG> (Thumb, 248 bytes, Stack size 80 bytes, gui_sport.o(i.gui_sport_arrows))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = gui_sport_arrows &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_circle_point
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetTriangle
</UL>
<BR>[Called By]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsport_arrows
</UL>

<P><STRONG><a name="[313]"></a>gui_sport_btn_evt</STRONG> (Thumb, 404 bytes, Stack size 24 bytes, gui_sport.o(i.gui_sport_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 588 + Unknown Stack Size
<LI>Call Chain = gui_sport_btn_evt &rArr; ReadySport &rArr; CreateGPSTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_close
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_menu_index_record
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseGPSTask
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeout_back_stop
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IsTrainPlanOnGoing
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySport
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateSportDisplay
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_init
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_init
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_init
<LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_init
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Sport_Index
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[329]"></a>gui_sport_cancel_btn_evt</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_cancel_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = gui_sport_cancel_btn_evt &rArr; gui_sport_motor_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_back_timer_delete
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportContinueLaterFlagClr
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SaveSta
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSportTask
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[7ba]"></a>gui_sport_cancel_caption_paint</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gui_sport.o(i.gui_sport_cancel_caption_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_sport_cancel_caption_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_paint
</UL>

<P><STRONG><a name="[7bb]"></a>gui_sport_cancel_options</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, gui_sport.o(i.gui_sport_cancel_options))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_sport_cancel_options &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_cancel_paint
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_cancel_paint
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_cancel_paint
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_cancel_paint
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_cancel_paint
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_cancel_paint
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_cancel_paint
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_cancel_paint
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_cancel_paint
</UL>

<P><STRONG><a name="[7bc]"></a>gui_sport_cancel_options_paint</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, gui_sport.o(i.gui_sport_cancel_options_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_sport_cancel_options_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_paint
</UL>

<P><STRONG><a name="[1f6]"></a>gui_sport_cancel_paint</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, gui_sport.o(i.gui_sport_cancel_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_cancel_paint &rArr; gui_sport_cancel_options_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_options_paint
<LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_caption_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[381]"></a>gui_sport_cast_pause_btn_evt</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, gui_notify_ble.o(i.gui_sport_cast_pause_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = gui_sport_cast_pause_btn_evt &rArr; ble_uart_response_application_sport_ctrl &rArr; drv_ble_send_data &rArr; drv_ble_timer_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_vice_pasue_stop
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_train_pause_time
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_sport_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1e5]"></a>gui_sport_cast_pause_paint</STRONG> (Thumb, 250 bytes, Stack size 64 bytes, gui_notify_ble.o(i.gui_sport_cast_pause_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1476 + Unknown Stack Size
<LI>Call Chain = gui_sport_cast_pause_paint &rArr; gui_train_pause_time &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_train_pause_time
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_train_options
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[32c]"></a>gui_sport_climbing_btn_evt</STRONG> (Thumb, 372 bytes, Stack size 8 bytes, gui_climbing.o(i.gui_sport_climbing_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 652 + Unknown Stack Size
<LI>Call Chain = gui_sport_climbing_btn_evt &rArr; StartSport &rArr; trace_back_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySportBack
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_pasue_start
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_dottrack
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[32e]"></a>gui_sport_climbing_cancel_btn_evt</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, gui_climbing.o(i.gui_sport_climbing_cancel_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = gui_sport_climbing_cancel_btn_evt &rArr; gui_sport_motor_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SaveSta
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSportTask
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[201]"></a>gui_sport_climbing_cancel_paint</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, gui_climbing.o(i.gui_sport_climbing_cancel_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_climbing_cancel_paint &rArr; gui_sport_cancel_options &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_options
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[32f]"></a>gui_sport_climbing_detail_btn_evt</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, gui_climbing.o(i.gui_sport_climbing_detail_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_sport_climbing_detail_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[202]"></a>gui_sport_climbing_detail_paint</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_climbing.o(i.gui_sport_climbing_detail_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1492 + Unknown Stack Size
<LI>Call Chain = gui_sport_climbing_detail_paint &rArr; gui_climbing_save_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_2_paint
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_1_paint
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_detail_track_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[793]"></a>gui_sport_climbing_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_climbing.o(i.gui_sport_climbing_init))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_btn_evt
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_detail_btn_evt
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_start_init
</UL>

<P><STRONG><a name="[1ff]"></a>gui_sport_climbing_paint</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gui_climbing.o(i.gui_sport_climbing_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1556 + Unknown Stack Size
<LI>Call Chain = gui_sport_climbing_paint &rArr; gui_sport_data_display_preview_paint &rArr; gui_sport_data_four_bar_display_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_preview_paint
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_track_paint
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[32d]"></a>gui_sport_climbing_pause_btn_evt</STRONG> (Thumb, 428 bytes, Stack size 16 bytes, gui_climbing.o(i.gui_sport_climbing_pause_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 612 + Unknown Stack Size
<LI>Call Chain = gui_sport_climbing_pause_btn_evt &rArr; trace_back_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_back_timer_start
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_10s_heartrate
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_continue_later_start
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_pasue_start
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackBackFlag
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_feel_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[200]"></a>gui_sport_climbing_pause_paint</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, gui_climbing.o(i.gui_sport_climbing_pause_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_sport_climbing_pause_paint &rArr; gui_sport_pause_time &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_pause_options
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_time
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_acttime
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[7c7]"></a>gui_sport_climbing_track_paint</STRONG> (Thumb, 292 bytes, Stack size 8 bytes, gui_climbing.o(i.gui_sport_climbing_track_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1452 + Unknown Stack Size
<LI>Call Chain = gui_sport_climbing_track_paint &rArr; gui_sport_climbing_1_distance &rArr; gui_sport_every_1_distance &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_PauseSta
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsStatus
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_track_update_paint
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_1_time
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_1_distance
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_index_circle_vert_paint
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_dot_draw_prompt
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_compass
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_and_data_paint
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_paint
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_location_ok_data_paint
</UL>

<P><STRONG><a name="[7d0]"></a>gui_sport_compass</STRONG> (Thumb, 226 bytes, Stack size 56 bytes, gui_sport.o(i.gui_sport_compass))
<BR><BR>[Stack]<UL><LI>Max Depth = 480<LI>Call Chain = gui_sport_compass &rArr; LCD_SetArc &rArr; draw_arc &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_circle_point
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
</UL>
<BR>[Called By]<UL><LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_track_paint
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_track_paint
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_track_paint
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_track_paint
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_track_paint
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_track_paint
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_track_paint
</UL>

<P><STRONG><a name="[35d]"></a>gui_sport_crosscountry_btn_evt</STRONG> (Thumb, 372 bytes, Stack size 8 bytes, gui_crosscountry.o(i.gui_sport_crosscountry_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 652 + Unknown Stack Size
<LI>Call Chain = gui_sport_crosscountry_btn_evt &rArr; StartSport &rArr; trace_back_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySportBack
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_pasue_start
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_dottrack
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[35f]"></a>gui_sport_crosscountry_cancel_btn_evt</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, gui_crosscountry.o(i.gui_sport_crosscountry_cancel_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = gui_sport_crosscountry_cancel_btn_evt &rArr; gui_sport_motor_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SaveSta
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSportTask
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[209]"></a>gui_sport_crosscountry_cancel_paint</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, gui_crosscountry.o(i.gui_sport_crosscountry_cancel_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_crosscountry_cancel_paint &rArr; gui_sport_cancel_options &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_options
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[360]"></a>gui_sport_crosscountry_detail_btn_evt</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, gui_crosscountry.o(i.gui_sport_crosscountry_detail_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_sport_crosscountry_detail_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[20a]"></a>gui_sport_crosscountry_detail_paint</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_crosscountry.o(i.gui_sport_crosscountry_detail_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1492 + Unknown Stack Size
<LI>Call Chain = gui_sport_crosscountry_detail_paint &rArr; gui_crosscountry_save_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_save_detail_2_paint
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_save_detail_1_paint
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_detail_track_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[792]"></a>gui_sport_crosscountry_hike_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_sport_crosscountry_hike.o(i.gui_sport_crosscountry_hike_init))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_btn_evt
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_detail_btn_evt
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_start_init
</UL>

<P><STRONG><a name="[791]"></a>gui_sport_crosscountry_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_crosscountry.o(i.gui_sport_crosscountry_init))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_btn_evt
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_detail_btn_evt
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_start_init
</UL>

<P><STRONG><a name="[207]"></a>gui_sport_crosscountry_paint</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gui_crosscountry.o(i.gui_sport_crosscountry_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1556 + Unknown Stack Size
<LI>Call Chain = gui_sport_crosscountry_paint &rArr; gui_sport_data_display_preview_paint &rArr; gui_sport_data_four_bar_display_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_preview_paint
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_track_paint
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[35e]"></a>gui_sport_crosscountry_pause_btn_evt</STRONG> (Thumb, 428 bytes, Stack size 16 bytes, gui_crosscountry.o(i.gui_sport_crosscountry_pause_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 612 + Unknown Stack Size
<LI>Call Chain = gui_sport_crosscountry_pause_btn_evt &rArr; trace_back_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_back_timer_start
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_10s_heartrate
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_continue_later_start
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_pasue_start
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackBackFlag
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_feel_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[208]"></a>gui_sport_crosscountry_pause_paint</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, gui_crosscountry.o(i.gui_sport_crosscountry_pause_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_sport_crosscountry_pause_paint &rArr; gui_sport_pause_time &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_pause_options
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_time
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_acttime
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[7d5]"></a>gui_sport_crosscountry_track_paint</STRONG> (Thumb, 292 bytes, Stack size 8 bytes, gui_crosscountry.o(i.gui_sport_crosscountry_track_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1452 + Unknown Stack Size
<LI>Call Chain = gui_sport_crosscountry_track_paint &rArr; gui_sport_crosscountry_1_distance &rArr; gui_sport_every_1_distance &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_PauseSta
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsStatus
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_track_update_paint
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_1_time
<LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_1_distance
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_index_circle_vert_paint
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_dot_draw_prompt
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_compass
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_and_data_paint
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_paint
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_location_ok_data_paint
</UL>

<P><STRONG><a name="[330]"></a>gui_sport_cycling_btn_evt</STRONG> (Thumb, 476 bytes, Stack size 16 bytes, gui_sport_cycling.o(i.gui_sport_cycling_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 660 + Unknown Stack Size
<LI>Call Chain = gui_sport_cycling_btn_evt &rArr; StartSport &rArr; trace_back_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySportBack
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_pasue_start
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_dottrack
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[332]"></a>gui_sport_cycling_cancel_btn_evt</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, gui_sport_cycling.o(i.gui_sport_cycling_cancel_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = gui_sport_cycling_cancel_btn_evt &rArr; gui_sport_motor_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SaveSta
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSportTask
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[219]"></a>gui_sport_cycling_cancel_paint</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, gui_sport_cycling.o(i.gui_sport_cycling_cancel_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_cycling_cancel_paint &rArr; gui_sport_cancel_options &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_options
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[333]"></a>gui_sport_cycling_detail_btn_evt</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, gui_sport_cycling.o(i.gui_sport_cycling_detail_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_sport_cycling_detail_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[21a]"></a>gui_sport_cycling_detail_paint</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_sport_cycling.o(i.gui_sport_cycling_detail_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1492 + Unknown Stack Size
<LI>Call Chain = gui_sport_cycling_detail_paint &rArr; gui_sport_cycling_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_2_paint
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_1_paint
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_detail_track_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[794]"></a>gui_sport_cycling_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_sport_cycling.o(i.gui_sport_cycling_init))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_btn_evt
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_detail_btn_evt
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_start_init
</UL>

<P><STRONG><a name="[217]"></a>gui_sport_cycling_paint</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gui_sport_cycling.o(i.gui_sport_cycling_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1556 + Unknown Stack Size
<LI>Call Chain = gui_sport_cycling_paint &rArr; gui_sport_data_display_preview_paint &rArr; gui_sport_data_four_bar_display_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_preview_paint
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_track_paint
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[331]"></a>gui_sport_cycling_pause_btn_evt</STRONG> (Thumb, 404 bytes, Stack size 16 bytes, gui_sport_cycling.o(i.gui_sport_cycling_pause_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 612 + Unknown Stack Size
<LI>Call Chain = gui_sport_cycling_pause_btn_evt &rArr; trace_back_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_back_timer_start
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_10s_heartrate
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_continue_later_start
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackBackFlag
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_feel_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[218]"></a>gui_sport_cycling_pause_paint</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, gui_sport_cycling.o(i.gui_sport_cycling_pause_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_sport_cycling_pause_paint &rArr; gui_sport_pause_time &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_pause_options
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_time
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_acttime
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[7dc]"></a>gui_sport_cycling_track_paint</STRONG> (Thumb, 294 bytes, Stack size 8 bytes, gui_sport_cycling.o(i.gui_sport_cycling_track_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1436 + Unknown Stack Size
<LI>Call Chain = gui_sport_cycling_track_paint &rArr; gui_sport_cycling_1_track &rArr; draw_track_mark &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_PauseSta
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsStatus
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_1_track
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_1_time
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_1_distance
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_index_circle_vert_paint
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_dot_draw_prompt
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_compass
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_and_data_paint
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_paint
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_location_ok_data_paint
</UL>

<P><STRONG><a name="[1e8]"></a>gui_sport_data_bar_display_paint</STRONG> (Thumb, 476 bytes, Stack size 56 bytes, gui_sport.o(i.gui_sport_data_bar_display_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1420 + Unknown Stack Size
<LI>Call Chain = gui_sport_data_bar_display_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[31b]"></a>gui_sport_data_display_btn_evt</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_data_display_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_sport_data_display_btn_evt &rArr; gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_set_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[804]"></a>gui_sport_data_display_init</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_data_display_init))
<BR><BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_ready_btn_evt
</UL>

<P><STRONG><a name="[31a]"></a>gui_sport_data_display_preview_btn_evt</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_data_display_preview_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_sport_data_display_preview_btn_evt &rArr; gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1e7]"></a>gui_sport_data_display_preview_paint</STRONG> (Thumb, 480 bytes, Stack size 64 bytes, gui_sport.o(i.gui_sport_data_display_preview_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1548 + Unknown Stack Size
<LI>Call Chain = gui_sport_data_display_preview_paint &rArr; gui_sport_data_four_bar_display_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_index_circle_vert_paint
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_show_str
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_four_bar_display_paint
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_paint
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_paint
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_and_data_paint
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_paint
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_paint
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_paint
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_paint
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_location_ok_data_paint
</UL>

<P><STRONG><a name="[732]"></a>gui_sport_data_display_realtime_pace_paint</STRONG> (Thumb, 404 bytes, Stack size 48 bytes, gui_sport.o(i.gui_sport_data_display_realtime_pace_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_data_display_realtime_pace_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_data_paint
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_mesuring_paint
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_data_paint
</UL>

<P><STRONG><a name="[31c]"></a>gui_sport_data_display_set_btn_evt</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_data_display_set_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_sport_data_display_set_btn_evt &rArr; gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_set_save
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[7de]"></a>gui_sport_data_display_set_init</STRONG> (Thumb, 320 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_data_display_set_init))
<BR><BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_btn_evt
</UL>

<P><STRONG><a name="[1e9]"></a>gui_sport_data_display_set_paint</STRONG> (Thumb, 356 bytes, Stack size 32 bytes, gui_sport.o(i.gui_sport_data_display_set_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396 + Unknown Stack Size
<LI>Call Chain = gui_sport_data_display_set_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[7e1]"></a>gui_sport_data_display_set_save</STRONG> (Thumb, 694 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_data_display_set_save))
<BR><BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_set_btn_evt
</UL>

<P><STRONG><a name="[730]"></a>gui_sport_data_display_total_distance_paint</STRONG> (Thumb, 274 bytes, Stack size 48 bytes, gui_sport.o(i.gui_sport_data_display_total_distance_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_data_display_total_distance_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_heart_paint
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_mesuring_paint
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_data_paint
</UL>

<P><STRONG><a name="[731]"></a>gui_sport_data_display_total_time_paint</STRONG> (Thumb, 214 bytes, Stack size 48 bytes, gui_sport.o(i.gui_sport_data_display_total_time_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = gui_sport_data_display_total_time_paint &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_heart_paint
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_mesuring_paint
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_data_paint
</UL>

<P><STRONG><a name="[7e0]"></a>gui_sport_data_four_bar_display_paint</STRONG> (Thumb, 988 bytes, Stack size 120 bytes, gui_sport.o(i.gui_sport_data_four_bar_display_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1484 + Unknown Stack Size
<LI>Call Chain = gui_sport_data_four_bar_display_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_show_str
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_app_sport_data_show_str
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_screen_data_paint
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_preview_paint
</UL>

<P><STRONG><a name="[7b8]"></a>gui_sport_data_init</STRONG> (Thumb, 248 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_data_init))
<BR><BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_btn_evt
</UL>

<P><STRONG><a name="[7df]"></a>gui_sport_data_show_str</STRONG> (Thumb, 990 bytes, Stack size 48 bytes, gui_sport.o(i.gui_sport_data_show_str))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = gui_sport_data_show_str &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_steps_freq
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateSpeed
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Sport_Heart
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_preview_paint
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_four_bar_display_paint
</UL>

<P><STRONG><a name="[7e2]"></a>gui_sport_detail_heartratezone_paint</STRONG> (Thumb, 1136 bytes, Stack size 72 bytes, gui_sport.o(i.gui_sport_detail_heartratezone_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1436 + Unknown Stack Size
<LI>Call Chain = gui_sport_detail_heartratezone_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_paint
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_paint
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_paint
</UL>

<P><STRONG><a name="[7c5]"></a>gui_sport_detail_track_paint</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, gui_sport.o(i.gui_sport_detail_track_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388 + Unknown Stack Size
<LI>Call Chain = gui_sport_detail_track_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSaveTrack
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_paint
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_detail_paint
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_paint
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_detail_paint
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_paint
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_detail_paint
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_detail_paint
</UL>

<P><STRONG><a name="[7cf]"></a>gui_sport_dot_draw_prompt</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gui_sport.o(i.gui_sport_dot_draw_prompt))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_sport_dot_draw_prompt &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_track_paint
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_track_paint
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_track_paint
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_track_paint
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_track_paint
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_track_paint
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_track_paint
</UL>

<P><STRONG><a name="[7e3]"></a>gui_sport_dot_prompt</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_dot_prompt))
<BR><BR>[Stack]<UL><LI>Max Depth = 508 + Unknown Stack Size
<LI>Call Chain = gui_sport_dot_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_dottrack
</UL>

<P><STRONG><a name="[743]"></a>gui_sport_dottrack_nums</STRONG> (Thumb, 160 bytes, Stack size 40 bytes, gui_sport.o(i.gui_sport_dottrack_nums))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = gui_sport_dottrack_nums &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_marathon_track_update_paint
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_walk_track_update_paint
<LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_track_update_paint
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_track_update_paint
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_hike_track_update_paint
<LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_1_track
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_track_update_paint
</UL>

<P><STRONG><a name="[7c1]"></a>gui_sport_every_1_distance</STRONG> (Thumb, 268 bytes, Stack size 64 bytes, gui_sport.o(i.gui_sport_every_1_distance))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_sport_every_1_distance &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_track_distance
<LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_1_distance
<LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_1_distance
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_1_distance
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_1_distance
</UL>

<P><STRONG><a name="[32a]"></a>gui_sport_feel_btn_evt</STRONG> (Thumb, 280 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_feel_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = gui_sport_feel_btn_evt &rArr; gui_sport_motor_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_start
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SaveSta
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSportTask
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_TranPlanUploadData
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSubjectiveEvaluate
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[7c8]"></a>gui_sport_feel_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_feel_init))
<BR><BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_pause_btn_evt
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_pause_btn_evt
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_pause_btn_evt
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_pause_btn_evt
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_pause_btn_evt
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_pause_btn_evt
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_pause_btn_evt
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_pause_btn_evt
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_pause_btn_evt
</UL>

<P><STRONG><a name="[7e5]"></a>gui_sport_feel_options_paint</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, gui_sport.o(i.gui_sport_feel_options_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_sport_feel_options_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_feel_paint
</UL>

<P><STRONG><a name="[1f7]"></a>gui_sport_feel_paint</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, gui_sport.o(i.gui_sport_feel_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_feel_paint &rArr; gui_sport_feel_options_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_feel_options_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[72b]"></a>gui_sport_gps_status</STRONG> (Thumb, 332 bytes, Stack size 24 bytes, gui_sport.o(i.gui_sport_gps_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = gui_sport_gps_status &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_track_paint
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_heart_paint
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_1_paint
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_track_paint
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_heart_paint
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_data_paint
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_gps_paint
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_show_paint
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_hint_paint
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_second_change_paint
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_ready_paint
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_paint
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_ready_paint
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_first_change_paint
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_ready_paint
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_paint
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_preview_paint
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_threshold_hint_paint
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_mesuring_paint
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_mesuring_paint
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_hint_mesuring_paint
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_countdown_paint
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_1_paint
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_track_paint
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_track_paint
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_track_paint
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_track_paint
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_track_paint
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_ready_menu
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_1_paint
</UL>

<P><STRONG><a name="[7e6]"></a>gui_sport_heart_1_paint</STRONG> (Thumb, 510 bytes, Stack size 120 bytes, gui_sport.o(i.gui_sport_heart_1_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1484 + Unknown Stack Size
<LI>Call Chain = gui_sport_heart_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hdr_range_color
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hdr_range
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_heart_paint
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_paint
</UL>

<P><STRONG><a name="[7c6]"></a>gui_sport_heart_paint</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_sport.o(i.gui_sport_heart_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1500 + Unknown Stack Size
<LI>Call Chain = gui_sport_heart_paint &rArr; gui_sport_heart_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Sport_Heart
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_index_circle_vert_paint
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_1_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_paint
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_and_data_paint
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_paint
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_paint
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_paint
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_paint
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_location_ok_data_paint
</UL>

<P><STRONG><a name="[32b]"></a>gui_sport_heart_recovery_btn_evt</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_heart_recovery_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 468 + Unknown Stack Size
<LI>Call Chain = gui_sport_heart_recovery_btn_evt &rArr; timer_progress_start &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_start
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SaveSta
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSportTask
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1f8]"></a>gui_sport_heart_recovery_paint</STRONG> (Thumb, 480 bytes, Stack size 72 bytes, gui_sport.o(i.gui_sport_heart_recovery_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1436 + Unknown Stack Size
<LI>Call Chain = gui_sport_heart_recovery_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Sport_Heart
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_wave_paint
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[340]"></a>gui_sport_hike_btn_evt</STRONG> (Thumb, 372 bytes, Stack size 8 bytes, gui_sport_crosscountry_hike.o(i.gui_sport_hike_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 652 + Unknown Stack Size
<LI>Call Chain = gui_sport_hike_btn_evt &rArr; StartSport &rArr; trace_back_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySportBack
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_pasue_start
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_dottrack
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[342]"></a>gui_sport_hike_cancel_btn_evt</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, gui_sport_crosscountry_hike.o(i.gui_sport_hike_cancel_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = gui_sport_hike_cancel_btn_evt &rArr; gui_sport_motor_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SaveSta
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSportTask
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[229]"></a>gui_sport_hike_cancel_paint</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, gui_sport_crosscountry_hike.o(i.gui_sport_hike_cancel_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_hike_cancel_paint &rArr; gui_sport_cancel_options &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_options
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[343]"></a>gui_sport_hike_detail_btn_evt</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, gui_sport_crosscountry_hike.o(i.gui_sport_hike_detail_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_sport_hike_detail_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[22a]"></a>gui_sport_hike_detail_paint</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_sport_crosscountry_hike.o(i.gui_sport_hike_detail_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1492 + Unknown Stack Size
<LI>Call Chain = gui_sport_hike_detail_paint &rArr; gui_sport_crosscountry_hike_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_hike_detail_2_paint
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_hike_detail_1_paint
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_detail_track_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[227]"></a>gui_sport_hike_paint</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gui_sport_crosscountry_hike.o(i.gui_sport_hike_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1556 + Unknown Stack Size
<LI>Call Chain = gui_sport_hike_paint &rArr; gui_sport_data_display_preview_paint &rArr; gui_sport_data_four_bar_display_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_preview_paint
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_track_paint
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[341]"></a>gui_sport_hike_pause_btn_evt</STRONG> (Thumb, 428 bytes, Stack size 16 bytes, gui_sport_crosscountry_hike.o(i.gui_sport_hike_pause_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 612 + Unknown Stack Size
<LI>Call Chain = gui_sport_hike_pause_btn_evt &rArr; trace_back_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_back_timer_start
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_10s_heartrate
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_continue_later_start
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_pasue_start
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackBackFlag
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_feel_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[228]"></a>gui_sport_hike_pause_paint</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, gui_sport_crosscountry_hike.o(i.gui_sport_hike_pause_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_sport_hike_pause_paint &rArr; gui_sport_pause_time &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_pause_options
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_time
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_acttime
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[7e9]"></a>gui_sport_hike_track_paint</STRONG> (Thumb, 304 bytes, Stack size 8 bytes, gui_sport_crosscountry_hike.o(i.gui_sport_hike_track_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1452 + Unknown Stack Size
<LI>Call Chain = gui_sport_hike_track_paint &rArr; gui_sport_hike_1_distance &rArr; gui_sport_every_1_distance &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_PauseSta
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsStatus
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_hike_track_update_paint
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_hike_prompt_paint
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_1_time
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_1_distance
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_index_circle_vert_paint
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_dot_draw_prompt
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_compass
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_and_data_paint
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_paint
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_location_ok_data_paint
</UL>

<P><STRONG><a name="[7eb]"></a>gui_sport_index_circle_paint</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, gui_sport.o(i.gui_sport_index_circle_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = gui_sport_index_circle_paint &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_track_paint
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_realtime_paint
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_heart_paint
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_1_paint
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_track_paint
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_realtime_paint
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_heart_paint
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_data_paint
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_realtime_paint
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_heart_paint
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_data_paint
</UL>

<P><STRONG><a name="[7ce]"></a>gui_sport_index_circle_vert_paint</STRONG> (Thumb, 246 bytes, Stack size 40 bytes, gui_sport.o(i.gui_sport_index_circle_vert_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = gui_sport_index_circle_vert_paint &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_circle_point
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_preview_paint
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_heart_paint
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_track_paint
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_track_paint
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_track_paint
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_track_paint
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_track_paint
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_paint
</UL>

<P><STRONG><a name="[334]"></a>gui_sport_indoorrun_btn_evt</STRONG> (Thumb, 404 bytes, Stack size 8 bytes, gui_sport_indoorrun.o(i.gui_sport_indoorrun_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 652 + Unknown Stack Size
<LI>Call Chain = gui_sport_indoorrun_btn_evt &rArr; StartSport &rArr; trace_back_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_stop
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySportBack
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_pasue_start
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[336]"></a>gui_sport_indoorrun_cancel_btn_evt</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, gui_sport_indoorrun.o(i.gui_sport_indoorrun_cancel_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = gui_sport_indoorrun_cancel_btn_evt &rArr; gui_sport_motor_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SaveSta
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSportTask
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[21d]"></a>gui_sport_indoorrun_cancel_paint</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, gui_sport_indoorrun.o(i.gui_sport_indoorrun_cancel_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_indoorrun_cancel_paint &rArr; gui_sport_cancel_options &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_options
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[7ec]"></a>gui_sport_indoorrun_data_paint</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, gui_sport_indoorrun.o(i.gui_sport_indoorrun_data_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444 + Unknown Stack Size
<LI>Call Chain = gui_sport_indoorrun_data_paint &rArr; gui_sport_data_display_total_distance_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_total_time_paint
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_total_distance_paint
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_realtime_pace_paint
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_indoorrun_prompt_paint
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_index_circle_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_paint
</UL>

<P><STRONG><a name="[337]"></a>gui_sport_indoorrun_detail_btn_evt</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, gui_sport_indoorrun.o(i.gui_sport_indoorrun_detail_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_sport_indoorrun_detail_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[21e]"></a>gui_sport_indoorrun_detail_paint</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_sport_indoorrun.o(i.gui_sport_indoorrun_detail_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1452 + Unknown Stack Size
<LI>Call Chain = gui_sport_indoorrun_detail_paint &rArr; gui_sport_indoorrun_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_2_paint
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_1_paint
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_detail_heartratezone_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[7ef]"></a>gui_sport_indoorrun_heart_paint</STRONG> (Thumb, 374 bytes, Stack size 48 bytes, gui_sport_indoorrun.o(i.gui_sport_indoorrun_heart_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_indoorrun_heart_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Sport_Heart
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hdr_range_color
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_index_circle_paint
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_paint
</UL>

<P><STRONG><a name="[7b7]"></a>gui_sport_indoorrun_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_sport_indoorrun.o(i.gui_sport_indoorrun_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 468 + Unknown Stack Size
<LI>Call Chain = gui_sport_indoorrun_init &rArr; timer_progress_start &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_start
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_btn_evt
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_start_init
</UL>

<P><STRONG><a name="[21b]"></a>gui_sport_indoorrun_paint</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, gui_sport_indoorrun.o(i.gui_sport_indoorrun_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1460 + Unknown Stack Size
<LI>Call Chain = gui_sport_indoorrun_paint &rArr; gui_sport_indoorrun_data_paint &rArr; gui_sport_data_display_total_distance_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_realtime_paint
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_heart_paint
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_data_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[335]"></a>gui_sport_indoorrun_pause_btn_evt</STRONG> (Thumb, 318 bytes, Stack size 16 bytes, gui_sport_indoorrun.o(i.gui_sport_indoorrun_pause_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = gui_sport_indoorrun_pause_btn_evt &rArr; gui_sport_motor_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_10s_heartrate
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_continue_later_start
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_pasue_start
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_feel_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[21c]"></a>gui_sport_indoorrun_pause_paint</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, gui_sport_indoorrun.o(i.gui_sport_indoorrun_pause_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_sport_indoorrun_pause_paint &rArr; gui_sport_pause_time &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_pause_options
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_time
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_acttime
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[7f0]"></a>gui_sport_indoorrun_realtime_paint</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_sport_indoorrun.o(i.gui_sport_indoorrun_realtime_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = gui_sport_indoorrun_realtime_paint &rArr; gui_sport_index_circle_paint &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_index_circle_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_paint
</UL>

<P><STRONG><a name="[7a8]"></a>gui_sport_location_ok_data_paint</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, gui_sport.o(i.gui_sport_location_ok_data_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1564 + Unknown Stack Size
<LI>Call Chain = gui_sport_location_ok_data_paint &rArr; gui_sport_data_display_preview_paint &rArr; gui_sport_data_four_bar_display_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_preview_paint
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_heart_paint
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_track_paint
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_track_paint
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_track_paint
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_track_paint
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_track_paint
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_locatin_ok_paint
</UL>

<P><STRONG><a name="[33c]"></a>gui_sport_marathon_btn_evt</STRONG> (Thumb, 358 bytes, Stack size 8 bytes, gui_sport_marathon.o(i.gui_sport_marathon_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 652 + Unknown Stack Size
<LI>Call Chain = gui_sport_marathon_btn_evt &rArr; StartSport &rArr; trace_back_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySportBack
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_pasue_start
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_dottrack
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[33e]"></a>gui_sport_marathon_cancel_btn_evt</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, gui_sport_marathon.o(i.gui_sport_marathon_cancel_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = gui_sport_marathon_cancel_btn_evt &rArr; gui_sport_motor_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SaveSta
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSportTask
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[225]"></a>gui_sport_marathon_cancel_paint</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, gui_sport_marathon.o(i.gui_sport_marathon_cancel_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_marathon_cancel_paint &rArr; gui_sport_cancel_options &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_options
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[33f]"></a>gui_sport_marathon_detail_btn_evt</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, gui_sport_marathon.o(i.gui_sport_marathon_detail_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_sport_marathon_detail_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[226]"></a>gui_sport_marathon_detail_paint</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui_sport_marathon.o(i.gui_sport_marathon_detail_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1452 + Unknown Stack Size
<LI>Call Chain = gui_sport_marathon_detail_paint &rArr; gui_sport_marathon_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_2_paint
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_1_paint
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_detail_track_paint
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_detail_heartratezone_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[7fb]"></a>gui_sport_marathon_heart_paint</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui_sport_marathon.o(i.gui_sport_marathon_heart_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = gui_sport_marathon_heart_paint &rArr; gui_sport_index_circle_paint &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_index_circle_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_paint
</UL>

<P><STRONG><a name="[78f]"></a>gui_sport_marathon_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_sport_marathon.o(i.gui_sport_marathon_init))
<BR><BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_btn_evt
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_btn_evt
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_detail_btn_evt
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_start_init
</UL>

<P><STRONG><a name="[4d8]"></a>gui_sport_marathon_last_pace_set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_sport_marathon.o(i.gui_sport_marathon_last_pace_set))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[223]"></a>gui_sport_marathon_paint</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, gui_sport_marathon.o(i.gui_sport_marathon_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1468 + Unknown Stack Size
<LI>Call Chain = gui_sport_marathon_paint &rArr; gui_sport_marathon_track_paint &rArr; gui_sport_marathon_track_distance &rArr; gui_sport_every_1_distance &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_track_paint
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_realtime_paint
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_heart_paint
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_1_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[33d]"></a>gui_sport_marathon_pause_btn_evt</STRONG> (Thumb, 428 bytes, Stack size 16 bytes, gui_sport_marathon.o(i.gui_sport_marathon_pause_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 612 + Unknown Stack Size
<LI>Call Chain = gui_sport_marathon_pause_btn_evt &rArr; trace_back_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_back_timer_start
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_10s_heartrate
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_continue_later_start
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_pasue_start
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackBackFlag
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_feel_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[224]"></a>gui_sport_marathon_pause_paint</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, gui_sport_marathon.o(i.gui_sport_marathon_pause_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_sport_marathon_pause_paint &rArr; gui_sport_pause_time &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_pause_options
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_time
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_acttime
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[7fc]"></a>gui_sport_marathon_realtime_paint</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_sport_marathon.o(i.gui_sport_marathon_realtime_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = gui_sport_marathon_realtime_paint &rArr; gui_sport_index_circle_paint &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_index_circle_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_paint
</UL>

<P><STRONG><a name="[7fd]"></a>gui_sport_marathon_track_paint</STRONG> (Thumb, 260 bytes, Stack size 8 bytes, gui_sport_marathon.o(i.gui_sport_marathon_track_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1452 + Unknown Stack Size
<LI>Call Chain = gui_sport_marathon_track_paint &rArr; gui_sport_marathon_track_distance &rArr; gui_sport_every_1_distance &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_marathon_track_update_paint
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_track_time
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_track_distance
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_PauseSta
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsStatus
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_index_circle_paint
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_dot_draw_prompt
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_compass
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_paint
</UL>

<P><STRONG><a name="[7b9]"></a>gui_sport_motor_prompt</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_motor_prompt))
<BR><BR>[Stack]<UL><LI>Max Depth = 508 + Unknown Stack Size
<LI>Call Chain = gui_sport_motor_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_pause_btn_evt
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_cancel_btn_evt
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_btn_evt
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_btn_evt
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_second_change_btn_evt
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_ready_btn_evt
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_btn_evt
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_ready_btn_evt
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_pause_btn_evt
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_first_change_btn_evt
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_ready_btn_evt
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_btn_evt
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cancel_btn_evt
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_pause_btn_evt
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_cancel_btn_evt
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_btn_evt
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_pause_btn_evt
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_cancel_btn_evt
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_btn_evt
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_hint_btn_evt
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_pause_btn_evt
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_cancel_btn_evt
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_btn_evt
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_pause_btn_evt
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_cancel_btn_evt
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_btn_evt
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_pause_btn_evt
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_cancel_btn_evt
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_btn_evt
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_feel_btn_evt
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_pause_btn_evt
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_cancel_btn_evt
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_btn_evt
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_pause_btn_evt
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_cancel_btn_evt
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_btn_evt
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_pause_btn_evt
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_cancel_btn_evt
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_btn_evt
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_btn_evt
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_evt
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_start_init
</UL>

<P><STRONG><a name="[7bf]"></a>gui_sport_page_prompt</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_page_prompt))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = gui_sport_page_prompt &rArr; gui_page_up &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_page_up
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_page_down
</UL>
<BR>[Called By]<UL><LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_2_paint
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_1_paint
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_2_paint
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_1_paint
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_pause_paint
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_pause_paint
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_cancel_paint
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_pause_paint
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_paint
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cancel_paint
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_pause_paint
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_cancel_paint
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_pause_paint
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_cancel_paint
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_pause_paint
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_cancel_paint
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_pause_paint
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_cancel_paint
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_pause_paint
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_cancel_paint
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_pause_paint
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_cancel_paint
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_pause_paint
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_cancel_paint
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_pause_paint
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_cancel_paint
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cast_pause_paint
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_2_paint
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_1_paint
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_track_paint
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_1_paint
</UL>

<P><STRONG><a name="[7cd]"></a>gui_sport_pause_acttime</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, gui_sport.o(i.gui_sport_pause_acttime))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = gui_sport_pause_acttime &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_pause_paint
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_pause_paint
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_pause_paint
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_pause_paint
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_pause_paint
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_pause_paint
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_pause_paint
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_pause_paint
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_pause_paint
</UL>

<P><STRONG><a name="[1e3]"></a>gui_sport_pause_and_data_paint</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, gui_sport.o(i.gui_sport_pause_and_data_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1564 + Unknown Stack Size
<LI>Call Chain = gui_sport_pause_and_data_paint &rArr; gui_sport_data_display_preview_paint &rArr; gui_sport_data_four_bar_display_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_preview_paint
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_heart_paint
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_track_paint
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_track_paint
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_track_paint
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_track_paint
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_track_paint
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_hint_paint
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[802]"></a>gui_sport_pause_evt</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, gui_run.o(i.gui_sport_pause_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = gui_sport_pause_evt &rArr; gui_sport_motor_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_hint_btn_evt
</UL>

<P><STRONG><a name="[318]"></a>gui_sport_pause_hint_btn_evt</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_pause_hint_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = gui_sport_pause_hint_btn_evt &rArr; gui_sport_motor_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_pasue_start
<LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_swich
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[801]"></a>gui_sport_pause_hint_paint</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, gui_sport.o(i.gui_sport_pause_hint_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = gui_sport_pause_hint_paint &rArr; LCD_SetArc &rArr; draw_arc &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCircle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_PauseSta
</UL>
<BR>[Called By]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_and_data_paint
</UL>

<P><STRONG><a name="[803]"></a>gui_sport_pause_swich</STRONG> (Thumb, 252 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_pause_swich))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gui_sport_pause_swich &rArr; Set_PauseSta
</UL>
<BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_PauseSta
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_hint_btn_evt
</UL>

<P><STRONG><a name="[7cc]"></a>gui_sport_pause_time</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, gui_sport.o(i.gui_sport_pause_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404 + Unknown Stack Size
<LI>Call Chain = gui_sport_pause_time &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_pause_paint
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_pause_paint
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_pause_paint
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_pause_paint
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_pause_paint
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_pause_paint
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_pause_paint
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_pause_paint
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_pause_paint
</UL>

<P><STRONG><a name="[319]"></a>gui_sport_ready_btn_evt</STRONG> (Thumb, 298 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_ready_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 660 + Unknown Stack Size
<LI>Call Chain = gui_sport_ready_btn_evt &rArr; gui_sport_start_init &rArr; StartSport &rArr; trace_back_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IsTrainPlanOnGoing
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySportBack
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_start
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_start_init
<LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_init
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1e6]"></a>gui_sport_ready_paint</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_ready_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1460 + Unknown Stack Size
<LI>Call Chain = gui_sport_ready_paint &rArr; sport_ready_menu &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_ready_menu
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_locatin_ok_paint
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[328]"></a>gui_sport_remind_set_altitude_btn_evt</STRONG> (Thumb, 374 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_remind_set_altitude_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_sport_remind_set_altitude_btn_evt &rArr; gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_altitude_save
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[810]"></a>gui_sport_remind_set_altitude_init</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_remind_set_altitude_init))
<BR><BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_btn_evt
</UL>

<P><STRONG><a name="[1f5]"></a>gui_sport_remind_set_altitude_paint</STRONG> (Thumb, 374 bytes, Stack size 48 bytes, gui_sport.o(i.gui_sport_remind_set_altitude_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_remind_set_altitude_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[808]"></a>gui_sport_remind_set_altitude_save</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_remind_set_altitude_save))
<BR><BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_altitude_btn_evt
</UL>

<P><STRONG><a name="[321]"></a>gui_sport_remind_set_autocircle_btn_evt</STRONG> (Thumb, 370 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_remind_set_autocircle_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_sport_remind_set_autocircle_btn_evt &rArr; gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_autocircle_save
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[80f]"></a>gui_sport_remind_set_autocircle_init</STRONG> (Thumb, 418 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_remind_set_autocircle_init))
<BR><BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_btn_evt
</UL>

<P><STRONG><a name="[1ee]"></a>gui_sport_remind_set_autocircle_paint</STRONG> (Thumb, 424 bytes, Stack size 40 bytes, gui_sport.o(i.gui_sport_remind_set_autocircle_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404 + Unknown Stack Size
<LI>Call Chain = gui_sport_remind_set_autocircle_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[809]"></a>gui_sport_remind_set_autocircle_save</STRONG> (Thumb, 524 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_remind_set_autocircle_save))
<BR><BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_autocircle_btn_evt
</UL>

<P><STRONG><a name="[31d]"></a>gui_sport_remind_set_btn_evt</STRONG> (Thumb, 490 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_remind_set_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_sport_remind_set_btn_evt &rArr; gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_time_init
<LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_swimpool_init
<LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_speed_init
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_pace_init
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_indoorleng_init
<LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_heart_init
<LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_goalkcal_init
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_goalcircle_init
<LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_distance_init
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_autocircle_init
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_altitude_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[320]"></a>gui_sport_remind_set_distance_btn_evt</STRONG> (Thumb, 366 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_remind_set_distance_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_sport_remind_set_distance_btn_evt &rArr; gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_distance_save
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[80c]"></a>gui_sport_remind_set_distance_init</STRONG> (Thumb, 418 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_remind_set_distance_init))
<BR><BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_btn_evt
</UL>

<P><STRONG><a name="[1ed]"></a>gui_sport_remind_set_distance_paint</STRONG> (Thumb, 424 bytes, Stack size 40 bytes, gui_sport.o(i.gui_sport_remind_set_distance_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404 + Unknown Stack Size
<LI>Call Chain = gui_sport_remind_set_distance_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[815]"></a>gui_sport_remind_set_distance_save</STRONG> (Thumb, 608 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_remind_set_distance_save))
<BR><BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_distance_btn_evt
</UL>

<P><STRONG><a name="[326]"></a>gui_sport_remind_set_goalcircle_btn_evt</STRONG> (Thumb, 374 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_remind_set_goalcircle_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_sport_remind_set_goalcircle_btn_evt &rArr; gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_goalcircle_save
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[811]"></a>gui_sport_remind_set_goalcircle_init</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_remind_set_goalcircle_init))
<BR><BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_btn_evt
</UL>

<P><STRONG><a name="[1f3]"></a>gui_sport_remind_set_goalcircle_paint</STRONG> (Thumb, 370 bytes, Stack size 48 bytes, gui_sport.o(i.gui_sport_remind_set_goalcircle_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_remind_set_goalcircle_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[816]"></a>gui_sport_remind_set_goalcircle_save</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_remind_set_goalcircle_save))
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_goalcircle_btn_evt
</UL>

<P><STRONG><a name="[322]"></a>gui_sport_remind_set_goalkcal_btn_evt</STRONG> (Thumb, 464 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_remind_set_goalkcal_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_sport_remind_set_goalkcal_btn_evt &rArr; gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_goalkcal_save
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[812]"></a>gui_sport_remind_set_goalkcal_init</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_remind_set_goalkcal_init))
<BR><BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_btn_evt
</UL>

<P><STRONG><a name="[1ef]"></a>gui_sport_remind_set_goalkcal_paint</STRONG> (Thumb, 510 bytes, Stack size 48 bytes, gui_sport.o(i.gui_sport_remind_set_goalkcal_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_remind_set_goalkcal_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[817]"></a>gui_sport_remind_set_goalkcal_save</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_remind_set_goalkcal_save))
<BR><BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_goalkcal_btn_evt
</UL>

<P><STRONG><a name="[31e]"></a>gui_sport_remind_set_heart_btn_evt</STRONG> (Thumb, 370 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_remind_set_heart_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_sport_remind_set_heart_btn_evt &rArr; gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_heart_save
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[80a]"></a>gui_sport_remind_set_heart_init</STRONG> (Thumb, 162 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_remind_set_heart_init))
<BR><BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_btn_evt
</UL>

<P><STRONG><a name="[1eb]"></a>gui_sport_remind_set_heart_paint</STRONG> (Thumb, 496 bytes, Stack size 64 bytes, gui_sport.o(i.gui_sport_remind_set_heart_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_sport_remind_set_heart_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hdr_max
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[818]"></a>gui_sport_remind_set_heart_save</STRONG> (Thumb, 404 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_remind_set_heart_save))
<BR><BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_heart_btn_evt
</UL>

<P><STRONG><a name="[327]"></a>gui_sport_remind_set_indoorleng_btn_evt</STRONG> (Thumb, 282 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_remind_set_indoorleng_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_sport_remind_set_indoorleng_btn_evt &rArr; gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_indoorleng_save
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[814]"></a>gui_sport_remind_set_indoorleng_init</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_remind_set_indoorleng_init))
<BR><BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_btn_evt
</UL>

<P><STRONG><a name="[1f4]"></a>gui_sport_remind_set_indoorleng_paint</STRONG> (Thumb, 350 bytes, Stack size 48 bytes, gui_sport.o(i.gui_sport_remind_set_indoorleng_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_remind_set_indoorleng_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[819]"></a>gui_sport_remind_set_indoorleng_save</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_remind_set_indoorleng_save))
<BR><BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_indoorleng_btn_evt
</UL>

<P><STRONG><a name="[806]"></a>gui_sport_remind_set_init</STRONG> (Thumb, 198 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_remind_set_init))
<BR><BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_ready_btn_evt
</UL>

<P><STRONG><a name="[31f]"></a>gui_sport_remind_set_pace_btn_evt</STRONG> (Thumb, 374 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_remind_set_pace_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_sport_remind_set_pace_btn_evt &rArr; gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_pace_save
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[80b]"></a>gui_sport_remind_set_pace_init</STRONG> (Thumb, 192 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_remind_set_pace_init))
<BR><BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_btn_evt
</UL>

<P><STRONG><a name="[1ec]"></a>gui_sport_remind_set_pace_paint</STRONG> (Thumb, 424 bytes, Stack size 40 bytes, gui_sport.o(i.gui_sport_remind_set_pace_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404 + Unknown Stack Size
<LI>Call Chain = gui_sport_remind_set_pace_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[81a]"></a>gui_sport_remind_set_pace_save</STRONG> (Thumb, 312 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_remind_set_pace_save))
<BR><BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_pace_btn_evt
</UL>

<P><STRONG><a name="[1ea]"></a>gui_sport_remind_set_paint</STRONG> (Thumb, 600 bytes, Stack size 40 bytes, gui_sport.o(i.gui_sport_remind_set_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404 + Unknown Stack Size
<LI>Call Chain = gui_sport_remind_set_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[81b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_status
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[324]"></a>gui_sport_remind_set_speed_btn_evt</STRONG> (Thumb, 374 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_remind_set_speed_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_sport_remind_set_speed_btn_evt &rArr; gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_speed_save
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[80e]"></a>gui_sport_remind_set_speed_init</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_remind_set_speed_init))
<BR><BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_btn_evt
</UL>

<P><STRONG><a name="[1f1]"></a>gui_sport_remind_set_speed_paint</STRONG> (Thumb, 424 bytes, Stack size 40 bytes, gui_sport.o(i.gui_sport_remind_set_speed_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404 + Unknown Stack Size
<LI>Call Chain = gui_sport_remind_set_speed_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[81c]"></a>gui_sport_remind_set_speed_save</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_remind_set_speed_save))
<BR><BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_speed_btn_evt
</UL>

<P><STRONG><a name="[81b]"></a>gui_sport_remind_set_status</STRONG> (Thumb, 954 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_remind_set_status))
<BR><BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_paint
</UL>

<P><STRONG><a name="[325]"></a>gui_sport_remind_set_swimpool_btn_evt</STRONG> (Thumb, 282 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_remind_set_swimpool_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_sport_remind_set_swimpool_btn_evt &rArr; gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_swimpool_save
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[813]"></a>gui_sport_remind_set_swimpool_init</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_remind_set_swimpool_init))
<BR><BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_btn_evt
</UL>

<P><STRONG><a name="[1f2]"></a>gui_sport_remind_set_swimpool_paint</STRONG> (Thumb, 242 bytes, Stack size 48 bytes, gui_sport.o(i.gui_sport_remind_set_swimpool_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_remind_set_swimpool_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[81d]"></a>gui_sport_remind_set_swimpool_save</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_remind_set_swimpool_save))
<BR><BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_swimpool_btn_evt
</UL>

<P><STRONG><a name="[323]"></a>gui_sport_remind_set_time_btn_evt</STRONG> (Thumb, 370 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_remind_set_time_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_sport_remind_set_time_btn_evt &rArr; gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_time_save
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[80d]"></a>gui_sport_remind_set_time_init</STRONG> (Thumb, 442 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_remind_set_time_init))
<BR><BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_btn_evt
</UL>

<P><STRONG><a name="[1f0]"></a>gui_sport_remind_set_time_paint</STRONG> (Thumb, 436 bytes, Stack size 48 bytes, gui_sport.o(i.gui_sport_remind_set_time_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_remind_set_time_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[81e]"></a>gui_sport_remind_set_time_save</STRONG> (Thumb, 594 bytes, Stack size 0 bytes, gui_sport.o(i.gui_sport_remind_set_time_save))
<BR><BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_time_btn_evt
</UL>

<P><STRONG><a name="[314]"></a>gui_sport_run_btn_evt</STRONG> (Thumb, 254 bytes, Stack size 8 bytes, gui_run.o(i.gui_sport_run_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = gui_sport_run_btn_evt &rArr; sport_dottrack &rArr; gui_sport_dot_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_pasue_start
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_dottrack
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[316]"></a>gui_sport_run_cancel_btn_evt</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, gui_run.o(i.gui_sport_run_cancel_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = gui_sport_run_cancel_btn_evt &rArr; gui_sport_motor_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SaveSta
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSportTask
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1e1]"></a>gui_sport_run_cancel_paint</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, gui_run.o(i.gui_sport_run_cancel_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_run_cancel_paint &rArr; gui_sport_cancel_options &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_options
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[317]"></a>gui_sport_run_detail_btn_evt</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, gui_run.o(i.gui_sport_run_detail_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_sport_run_detail_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1e2]"></a>gui_sport_run_detail_paint</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_run.o(i.gui_sport_run_detail_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1492 + Unknown Stack Size
<LI>Call Chain = gui_sport_run_detail_paint &rArr; gui_run_save_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_2_paint
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_1_paint
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_detail_track_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[78d]"></a>gui_sport_run_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_run.o(i.gui_sport_run_init))
<BR><BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_btn_evt
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_sport_today_hint_btn_evt
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_run_select_btn_evt
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_home_today_hint_btn_evt
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_btn_evt
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_detail_btn_evt
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_start_init
</UL>

<P><STRONG><a name="[1df]"></a>gui_sport_run_paint</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gui_run.o(i.gui_sport_run_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1556 + Unknown Stack Size
<LI>Call Chain = gui_sport_run_paint &rArr; gui_sport_data_display_preview_paint &rArr; gui_sport_data_four_bar_display_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_preview_paint
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_track_paint
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[315]"></a>gui_sport_run_pause_btn_evt</STRONG> (Thumb, 428 bytes, Stack size 16 bytes, gui_run.o(i.gui_sport_run_pause_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 612 + Unknown Stack Size
<LI>Call Chain = gui_sport_run_pause_btn_evt &rArr; trace_back_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_back_timer_start
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_10s_heartrate
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_continue_later_start
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_pasue_start
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackBackFlag
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_feel_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1e0]"></a>gui_sport_run_pause_paint</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, gui_run.o(i.gui_sport_run_pause_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_sport_run_pause_paint &rArr; gui_sport_pause_time &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_pause_options
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_time
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_acttime
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[7f2]"></a>gui_sport_run_track_paint</STRONG> (Thumb, 276 bytes, Stack size 8 bytes, gui_run.o(i.gui_sport_run_track_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1436 + Unknown Stack Size
<LI>Call Chain = gui_sport_run_track_paint &rArr; gui_run_track_update_paint &rArr; draw_track_mark &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_PauseSta
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsStatus
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_track_update_paint
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_track_distance
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_index_circle_vert_paint
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_dot_draw_prompt
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_compass
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_paint
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_and_data_paint
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_location_ok_data_paint
</UL>

<P><STRONG><a name="[1fa]"></a>gui_sport_saved_paint</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, gui_sport.o(i.gui_sport_saved_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388 + Unknown Stack Size
<LI>Call Chain = gui_sport_saved_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[1f9]"></a>gui_sport_saving_paint</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, gui_sport.o(i.gui_sport_saving_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396 + Unknown Stack Size
<LI>Call Chain = gui_sport_saving_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[1de]"></a>gui_sport_select_paint</STRONG> (Thumb, 484 bytes, Stack size 56 bytes, gui_sport.o(i.gui_sport_select_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1420 + Unknown Stack Size
<LI>Call Chain = gui_sport_select_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Sport_Nums
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Sport_Index
<LI><a href="#[820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Sport_Num
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Sport_Index
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[805]"></a>gui_sport_start_init</STRONG> (Thumb, 234 bytes, Stack size 8 bytes, gui_sport.o(i.gui_sport_start_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 652 + Unknown Stack Size
<LI>Call Chain = gui_sport_start_init &rArr; StartSport &rArr; trace_back_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_status_get
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseGPSTask
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_init
<LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_init
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_init
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_init
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_init
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_hike_init
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_init
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_init
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_init
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_ready_btn_evt
</UL>

<P><STRONG><a name="[359]"></a>gui_sport_swim_btn_evt</STRONG> (Thumb, 230 bytes, Stack size 8 bytes, gui_swimming.o(i.gui_sport_swim_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = gui_sport_swim_btn_evt &rArr; gui_sport_motor_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_pasue_start
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[35b]"></a>gui_sport_swim_cancel_btn_evt</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, gui_swimming.o(i.gui_sport_swim_cancel_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = gui_sport_swim_cancel_btn_evt &rArr; gui_sport_motor_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SaveSta
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSportTask
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[205]"></a>gui_sport_swim_cancel_paint</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, gui_swimming.o(i.gui_sport_swim_cancel_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_swim_cancel_paint &rArr; gui_sport_cancel_options &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_options
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[35c]"></a>gui_sport_swim_detail_btn_evt</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, gui_swimming.o(i.gui_sport_swim_detail_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_sport_swim_detail_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[206]"></a>gui_sport_swim_detail_paint</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui_swimming.o(i.gui_sport_swim_detail_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1492 + Unknown Stack Size
<LI>Call Chain = gui_sport_swim_detail_paint &rArr; gui_swimming_save_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_2_paint
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_1_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[7f3]"></a>gui_sport_swim_heart_paint</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, gui_swimming.o(i.gui_sport_swim_heart_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1516 + Unknown Stack Size
<LI>Call Chain = gui_sport_swim_heart_paint &rArr; gui_sport_heart_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Sport_Heart
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_index_circle_vert_paint
<LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_1_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_paint
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_and_data_paint
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_location_ok_data_paint
</UL>

<P><STRONG><a name="[790]"></a>gui_sport_swim_init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_swimming.o(i.gui_sport_swim_init))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_btn_evt
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_detail_btn_evt
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_start_init
</UL>

<P><STRONG><a name="[203]"></a>gui_sport_swim_paint</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui_swimming.o(i.gui_sport_swim_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1556 + Unknown Stack Size
<LI>Call Chain = gui_sport_swim_paint &rArr; gui_sport_data_display_preview_paint &rArr; gui_sport_data_four_bar_display_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_preview_paint
<LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_heart_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[35a]"></a>gui_sport_swim_pause_btn_evt</STRONG> (Thumb, 260 bytes, Stack size 16 bytes, gui_swimming.o(i.gui_sport_swim_pause_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = gui_sport_swim_pause_btn_evt &rArr; gui_sport_motor_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_pasue_start
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_feel_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[204]"></a>gui_sport_swim_pause_paint</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, gui_swimming.o(i.gui_sport_swim_pause_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_sport_swim_pause_paint &rArr; gui_sport_pause_time &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_pause_options
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_time
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_acttime
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[34d]"></a>gui_sport_triathlon_cancel_btn_evt</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_cancel_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_cancel_btn_evt &rArr; gui_sport_motor_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SaveSta
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSportTask
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[235]"></a>gui_sport_triathlon_cancel_paint</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_cancel_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_cancel_paint &rArr; gui_sport_triathlon_cancel_options &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cancel_options
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[346]"></a>gui_sport_triathlon_cycling_btn_evt</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_cycling_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 668 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_cycling_btn_evt &rArr; sport_triathlon_change_start &rArr; StartSport &rArr; trace_back_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_triathlon_change_start
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[22d]"></a>gui_sport_triathlon_cycling_paint</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_cycling_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1436 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_cycling_paint &rArr; gui_sport_triathlon_cycling_speed &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_time
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_speed
<LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_distance
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[349]"></a>gui_sport_triathlon_cycling_ready_btn_evt</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_cycling_ready_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_cycling_ready_btn_evt &rArr; gui_sport_motor_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[230]"></a>gui_sport_triathlon_cycling_ready_paint</STRONG> (Thumb, 286 bytes, Stack size 48 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_cycling_ready_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_cycling_ready_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[445]"></a>gui_sport_triathlon_data_get</STRONG> (Thumb, 276 bytes, Stack size 0 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_data_get))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSport
</UL>

<P><STRONG><a name="[82b]"></a>gui_sport_triathlon_detail_1</STRONG> (Thumb, 246 bytes, Stack size 64 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_detail_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_detail_1 &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_paint
</UL>

<P><STRONG><a name="[82c]"></a>gui_sport_triathlon_detail_1_paint</STRONG> (Thumb, 688 bytes, Stack size 72 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_detail_1_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1436 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_paint
</UL>

<P><STRONG><a name="[82d]"></a>gui_sport_triathlon_detail_2</STRONG> (Thumb, 218 bytes, Stack size 56 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_detail_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 1420 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_detail_2 &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_paint
</UL>

<P><STRONG><a name="[82e]"></a>gui_sport_triathlon_detail_3</STRONG> (Thumb, 172 bytes, Stack size 64 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_detail_3))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_detail_3 &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_paint
</UL>

<P><STRONG><a name="[82f]"></a>gui_sport_triathlon_detail_4</STRONG> (Thumb, 246 bytes, Stack size 64 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_detail_4))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_detail_4 &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_paint
</UL>

<P><STRONG><a name="[830]"></a>gui_sport_triathlon_detail_5</STRONG> (Thumb, 218 bytes, Stack size 56 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_detail_5))
<BR><BR>[Stack]<UL><LI>Max Depth = 1420 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_detail_5 &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_paint
</UL>

<P><STRONG><a name="[831]"></a>gui_sport_triathlon_detail_6</STRONG> (Thumb, 172 bytes, Stack size 64 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_detail_6))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_detail_6 &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_paint
</UL>

<P><STRONG><a name="[832]"></a>gui_sport_triathlon_detail_7</STRONG> (Thumb, 178 bytes, Stack size 48 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_detail_7))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_detail_7 &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_paint
</UL>

<P><STRONG><a name="[833]"></a>gui_sport_triathlon_detail_8</STRONG> (Thumb, 180 bytes, Stack size 48 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_detail_8))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_detail_8 &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_paint
</UL>

<P><STRONG><a name="[34e]"></a>gui_sport_triathlon_detail_btn_evt</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_detail_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_sport_triathlon_detail_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[236]"></a>gui_sport_triathlon_detail_paint</STRONG> (Thumb, 292 bytes, Stack size 16 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_detail_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1452 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_detail_paint &rArr; gui_sport_triathlon_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_track_paint
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_8
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_7
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_6
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_5
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_4
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_3
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_2
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_1_paint
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_1
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[834]"></a>gui_sport_triathlon_detail_track_paint</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_detail_track_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_detail_track_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawSaveTrack
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_paint
</UL>

<P><STRONG><a name="[233]"></a>gui_sport_triathlon_finish_paint</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_finish_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_finish_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[348]"></a>gui_sport_triathlon_first_change_btn_evt</STRONG> (Thumb, 232 bytes, Stack size 16 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_first_change_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 668 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_first_change_btn_evt &rArr; sport_triathlon_change_start &rArr; StartSport &rArr; trace_back_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_triathlon_change_start
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[22f]"></a>gui_sport_triathlon_first_change_paint</STRONG> (Thumb, 338 bytes, Stack size 48 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_first_change_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_first_change_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_time
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[34c]"></a>gui_sport_triathlon_pause_btn_evt</STRONG> (Thumb, 306 bytes, Stack size 16 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_pause_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_pause_btn_evt &rArr; gui_sport_motor_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_start
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_status_set
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SaveSta
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSportTask
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[234]"></a>gui_sport_triathlon_pause_paint</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_pause_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_pause_paint &rArr; gui_sport_triathlon_pause_time &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_time
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_pause_time
<LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_pause_options
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[344]"></a>gui_sport_triathlon_ready_btn_evt</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_ready_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 660 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_ready_btn_evt &rArr; StartSport &rArr; trace_back_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_status_set
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySportBack
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[22b]"></a>gui_sport_triathlon_ready_paint</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_ready_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_ready_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[347]"></a>gui_sport_triathlon_running_btn_evt</STRONG> (Thumb, 254 bytes, Stack size 24 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_running_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 532 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_running_btn_evt &rArr; gui_sport_motor_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_start
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SaveSta
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSportTask
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[22e]"></a>gui_sport_triathlon_running_paint</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_running_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1436 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_running_paint &rArr; gui_sport_triathlon_cycling_distance &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_time
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_speed
<LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_distance
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[34b]"></a>gui_sport_triathlon_running_ready_btn_evt</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_running_ready_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_running_ready_btn_evt &rArr; gui_sport_motor_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[232]"></a>gui_sport_triathlon_running_ready_paint</STRONG> (Thumb, 286 bytes, Stack size 48 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_running_ready_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_running_ready_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[34a]"></a>gui_sport_triathlon_second_change_btn_evt</STRONG> (Thumb, 232 bytes, Stack size 16 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_second_change_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 668 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_second_change_btn_evt &rArr; sport_triathlon_change_start &rArr; StartSport &rArr; trace_back_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_triathlon_change_start
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[231]"></a>gui_sport_triathlon_second_change_paint</STRONG> (Thumb, 350 bytes, Stack size 48 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_second_change_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_second_change_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_time
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[446]"></a>gui_sport_triathlon_status_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSport
</UL>

<P><STRONG><a name="[448]"></a>gui_sport_triathlon_status_set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_status_set))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSport
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_ready_btn_evt
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_pause_btn_evt
</UL>

<P><STRONG><a name="[345]"></a>gui_sport_triathlon_swimming_btn_evt</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_swimming_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 668 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_swimming_btn_evt &rArr; sport_triathlon_change_start &rArr; StartSport &rArr; trace_back_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_triathlon_change_start
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[22c]"></a>gui_sport_triathlon_swimming_paint</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_swimming_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_swimming_paint &rArr; gui_sport_triathlon_swimming_1_paint &rArr; gui_sport_triathlon_swimming_1_speed &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_1_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[338]"></a>gui_sport_walk_btn_evt</STRONG> (Thumb, 358 bytes, Stack size 8 bytes, gui_sport_walk.o(i.gui_sport_walk_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 652 + Unknown Stack Size
<LI>Call Chain = gui_sport_walk_btn_evt &rArr; StartSport &rArr; trace_back_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySportBack
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_pasue_start
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_dottrack
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[33a]"></a>gui_sport_walk_cancel_btn_evt</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, gui_sport_walk.o(i.gui_sport_walk_cancel_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = gui_sport_walk_cancel_btn_evt &rArr; gui_sport_motor_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SaveSta
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSportTask
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[221]"></a>gui_sport_walk_cancel_paint</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, gui_sport_walk.o(i.gui_sport_walk_cancel_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_walk_cancel_paint &rArr; gui_sport_cancel_options &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
<LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_options
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[83e]"></a>gui_sport_walk_data_paint</STRONG> (Thumb, 370 bytes, Stack size 48 bytes, gui_sport_walk.o(i.gui_sport_walk_data_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1460 + Unknown Stack Size
<LI>Call Chain = gui_sport_walk_data_paint &rArr; gui_sport_data_display_realtime_pace_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_realtime_pace_paint
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_index_circle_paint
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_paint
</UL>

<P><STRONG><a name="[33b]"></a>gui_sport_walk_detail_btn_evt</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, gui_sport_walk.o(i.gui_sport_walk_detail_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_sport_walk_detail_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[222]"></a>gui_sport_walk_detail_paint</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui_sport_walk.o(i.gui_sport_walk_detail_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1452 + Unknown Stack Size
<LI>Call Chain = gui_sport_walk_detail_paint &rArr; gui_sport_walk_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_2_paint
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_1_paint
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_detail_track_paint
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_detail_heartratezone_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[841]"></a>gui_sport_walk_heart_paint</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, gui_sport_walk.o(i.gui_sport_walk_heart_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1460 + Unknown Stack Size
<LI>Call Chain = gui_sport_walk_heart_paint &rArr; gui_sport_data_display_total_distance_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_walk_prompt_paint
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Sport_Heart
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_total_time_paint
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_total_distance_paint
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hdr_range_color
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_index_circle_paint
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_paint
</UL>

<P><STRONG><a name="[78e]"></a>gui_sport_walk_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_sport_walk.o(i.gui_sport_walk_init))
<BR><BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_btn_evt
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_btn_evt
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_detail_btn_evt
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_start_init
</UL>

<P><STRONG><a name="[21f]"></a>gui_sport_walk_paint</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, gui_sport_walk.o(i.gui_sport_walk_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1476 + Unknown Stack Size
<LI>Call Chain = gui_sport_walk_paint &rArr; gui_sport_walk_heart_paint &rArr; gui_sport_data_display_total_distance_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_track_paint
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_realtime_paint
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_heart_paint
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_data_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[339]"></a>gui_sport_walk_pause_btn_evt</STRONG> (Thumb, 428 bytes, Stack size 16 bytes, gui_sport_walk.o(i.gui_sport_walk_pause_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 612 + Unknown Stack Size
<LI>Call Chain = gui_sport_walk_pause_btn_evt &rArr; trace_back_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_back_timer_start
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_10s_heartrate
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_continue_later_start
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_pasue_start
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackBackFlag
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_feel_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[220]"></a>gui_sport_walk_pause_paint</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, gui_sport_walk.o(i.gui_sport_walk_pause_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_sport_walk_pause_paint &rArr; gui_sport_pause_time &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[845]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_pause_options
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_time
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_acttime
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[843]"></a>gui_sport_walk_realtime_paint</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_sport_walk.o(i.gui_sport_walk_realtime_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = gui_sport_walk_realtime_paint &rArr; gui_sport_index_circle_paint &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_index_circle_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_paint
</UL>

<P><STRONG><a name="[844]"></a>gui_sport_walk_track_paint</STRONG> (Thumb, 260 bytes, Stack size 8 bytes, gui_sport_walk.o(i.gui_sport_walk_track_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1452 + Unknown Stack Size
<LI>Call Chain = gui_sport_walk_track_paint &rArr; gui_sport_walk_1_distance &rArr; gui_sport_every_1_distance &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_walk_track_update_paint
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_1_time
<LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_1_distance
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_PauseSta
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsStatus
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_index_circle_paint
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_dot_draw_prompt
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_compass
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_paint
</UL>

<P><STRONG><a name="[2f6]"></a>gui_sports_record_btn_evt</STRONG> (Thumb, 426 bytes, Stack size 16 bytes, gui_sports_record.o(i.gui_sports_record_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = gui_sports_record_btn_evt &rArr; GetSportDetail &rArr; get_sport_detail_record &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSportDetail
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[2f8]"></a>gui_sports_record_delete_btn_evt</STRONG> (Thumb, 218 bytes, Stack size 16 bytes, gui_sports_record.o(i.gui_sports_record_delete_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 564 + Unknown Stack Size
<LI>Call Chain = gui_sports_record_delete_btn_evt &rArr; GetSportDetail &rArr; get_sport_detail_record &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteActivityRecord
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLoadTrack
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_sport_record
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSportDetail
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[2f9]"></a>gui_sports_record_delete_notify_btn_evt</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_sports_record.o(i.gui_sports_record_delete_notify_btn_evt))
<BR><BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1bb]"></a>gui_sports_record_delete_notify_paint</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, gui_sports_record.o(i.gui_sports_record_delete_notify_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388 + Unknown Stack Size
<LI>Call Chain = gui_sports_record_delete_notify_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[1ba]"></a>gui_sports_record_delete_paint</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gui_sports_record.o(i.gui_sports_record_delete_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380 + Unknown Stack Size
<LI>Call Chain = gui_sports_record_delete_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tick_cross
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2f7]"></a>gui_sports_record_detail_btn_evt</STRONG> (Thumb, 1290 bytes, Stack size 80 bytes, gui_sports_record.o(i.gui_sports_record_detail_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = gui_sports_record_detail_btn_evt &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLoadTrack
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1b9]"></a>gui_sports_record_detail_paint</STRONG> (Thumb, 240 bytes, Stack size 8 bytes, gui_sports_record.o(i.gui_sports_record_detail_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1476 + Unknown Stack Size
<LI>Call Chain = gui_sports_record_detail_paint &rArr; sports_record_detail_page_one &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_two
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_one
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_2_paint
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_1_paint
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cycling_sport_detail_2_paint
<LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_hike_sport_detail_2_paint
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_sport_detail_2_paint
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsTrack
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[1b8]"></a>gui_sports_record_paint</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, gui_sports_record.o(i.gui_sports_record_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1452 + Unknown Stack Size
<LI>Call Chain = gui_sports_record_paint &rArr; List_Current &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;List_Up
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;List_Down
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;List_Current
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;List_None
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[238]"></a>gui_sports_track_paint</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, gui_sports_record.o(i.gui_sports_track_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388 + Unknown Stack Size
<LI>Call Chain = gui_sports_track_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLoadALLTrack
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2b2]"></a>gui_step_btn_evt</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, gui_step.o(i.gui_step_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 812<LI>Call Chain = gui_step_btn_evt &rArr; set_switch_screen_count_evt &rArr; get_current_monitor_screen &rArr; Get_TrainPlanDayRecord &rArr; get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_step_calibration_start
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_weekSteps
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_switch_screen_count_evt
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[2c4]"></a>gui_step_calibration_confirm_save_btn_evt</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, gui_step.o(i.gui_step_calibration_confirm_save_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = gui_step_calibration_confirm_save_btn_evt &rArr; UninitVO2maxMeasing &rArr; task_hrt_close &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseGPSTask
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UninitVO2maxMeasing
<LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCalDistanceStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[183]"></a>gui_step_calibration_confirm_save_paint</STRONG> (Thumb, 324 bytes, Stack size 48 bytes, gui_step.o(i.gui_step_calibration_confirm_save_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_step_calibration_confirm_save_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tick_cross
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2c2]"></a>gui_step_calibration_hint_btn_evt</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, gui_step.o(i.gui_step_calibration_hint_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = gui_step_calibration_hint_btn_evt &rArr; timer_app_step_calibration_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_gps_hint_motor_flag
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseGPSTask
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_get_stepcount
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhysicalParamCalculateInit
<LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_step_calibration_start
<LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCalDistanceStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[181]"></a>gui_step_calibration_hint_paint</STRONG> (Thumb, 272 bytes, Stack size 32 bytes, gui_step.o(i.gui_step_calibration_hint_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396 + Unknown Stack Size
<LI>Call Chain = gui_step_calibration_hint_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2c3]"></a>gui_step_calibration_show_btn_evt</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gui_step.o(i.gui_step_calibration_show_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = gui_step_calibration_show_btn_evt &rArr; UninitVO2maxMeasing &rArr; task_hrt_close &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseGPSTask
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_step_calibration_stop
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UninitVO2maxMeasing
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[182]"></a>gui_step_calibration_show_paint</STRONG> (Thumb, 512 bytes, Stack size 64 bytes, gui_step.o(i.gui_step_calibration_show_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_step_calibration_show_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[16e]"></a>gui_step_paint</STRONG> (Thumb, 194 bytes, Stack size 48 bytes, gui_step.o(i.gui_step_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1508 + Unknown Stack Size
<LI>Call Chain = gui_step_paint &rArr; gui_step_value_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalStep
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_progress_loop
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_value_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[84f]"></a>gui_step_value_paint</STRONG> (Thumb, 450 bytes, Stack size 96 bytes, gui_step.o(i.gui_step_value_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1460 + Unknown Stack Size
<LI>Call Chain = gui_step_value_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalStep
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalDistance
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_paint
</UL>

<P><STRONG><a name="[2c1]"></a>gui_step_week_mileage_btn_evt</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, gui_step.o(i.gui_step_week_mileage_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 572 + Unknown Stack Size
<LI>Call Chain = gui_step_week_mileage_btn_evt &rArr; CreateGPSTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_gps_hint_motor_flag
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateGPSTask
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_step_calibration_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[180]"></a>gui_step_week_mileage_paint</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui_step.o(i.gui_step_week_mileage_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1572 + Unknown Stack Size
<LI>Call Chain = gui_step_week_mileage_paint &rArr; gui_histogram_step_paint &rArr; gui_sidebar_step_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_histogram_step_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2c0]"></a>gui_step_week_steps_btn_evt</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, gui_step.o(i.gui_step_week_steps_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 572 + Unknown Stack Size
<LI>Call Chain = gui_step_week_steps_btn_evt &rArr; CreateGPSTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_gps_hint_motor_flag
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateGPSTask
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_step_calibration_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[17f]"></a>gui_step_week_steps_paint</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui_step.o(i.gui_step_week_steps_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1572 + Unknown Stack Size
<LI>Call Chain = gui_step_week_steps_paint &rArr; gui_histogram_step_paint &rArr; gui_sidebar_step_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_histogram_step_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[4c0]"></a>gui_swich_msg</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_sport.o(i.gui_swich_msg))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_view_motion_trail_btn_evt
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_track_load_btn_evt
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_silent_time_btn_evt
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_autolight_time_btn_evt
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_pause_btn_evt
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_btn_evt
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_pause_btn_evt
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_btn_evt
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_pause_btn_evt
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_btn_evt
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_time_btn_evt
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_swimpool_btn_evt
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_speed_btn_evt
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_pace_btn_evt
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_indoorleng_btn_evt
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_heart_btn_evt
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_goalkcal_btn_evt
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_goalcircle_btn_evt
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_distance_btn_evt
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_btn_evt
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_autocircle_btn_evt
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_altitude_btn_evt
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_ready_btn_evt
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_pause_btn_evt
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_btn_evt
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_pause_btn_evt
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_btn_evt
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_pause_btn_evt
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_btn_evt
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_recovery_btn_evt
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_feel_btn_evt
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_set_btn_evt
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_preview_btn_evt
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_btn_evt
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_pause_btn_evt
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_pause_btn_evt
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_btn_evt
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_pause_btn_evt
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_btn_evt
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_btn_evt
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_projection_btn_evt
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_trail_btn_evt
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_btn_evt
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_del_btn_evt
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_detail_btn_evt
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_btn_evt
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_gps_trail_remind_btn_evt
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_gps_detail_btn_evt
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cloud_navigation_btn_evt
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_btn_detail
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cloud_navigation_btn_item
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_heartrate_recovery
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_vice_pasue
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_btn_load
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cloud_navigation_load
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_evt
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_start_init
</UL>

<P><STRONG><a name="[823]"></a>gui_swimming_save_detail_1_paint</STRONG> (Thumb, 1238 bytes, Stack size 120 bytes, gui_swimming.o(i.gui_swimming_save_detail_1_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1484 + Unknown Stack Size
<LI>Call Chain = gui_swimming_save_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_detail_paint
</UL>

<P><STRONG><a name="[824]"></a>gui_swimming_save_detail_2_paint</STRONG> (Thumb, 708 bytes, Stack size 80 bytes, gui_swimming.o(i.gui_swimming_save_detail_2_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444 + Unknown Stack Size
<LI>Call Chain = gui_swimming_save_detail_2_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_detail_paint
</UL>

<P><STRONG><a name="[305]"></a>gui_system_autolight_btn_evt</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, gui_system.o(i.gui_system_autolight_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_system_autolight_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1ca]"></a>gui_system_autolight_paint</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, gui_system.o(i.gui_system_autolight_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1492 + Unknown Stack Size
<LI>Call Chain = gui_system_autolight_paint &rArr; menu_time &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[306]"></a>gui_system_autolight_time_btn_evt</STRONG> (Thumb, 506 bytes, Stack size 8 bytes, gui_system.o(i.gui_system_autolight_time_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_system_autolight_time_btn_evt &rArr; gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1cb]"></a>gui_system_autolight_time_paint</STRONG> (Thumb, 604 bytes, Stack size 80 bytes, gui_system.o(i.gui_system_autolight_time_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444 + Unknown Stack Size
<LI>Call Chain = gui_system_autolight_time_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[309]"></a>gui_system_backlight_btn_evt</STRONG> (Thumb, 262 bytes, Stack size 16 bytes, gui_system.o(i.gui_system_backlight_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_system_backlight_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1ce]"></a>gui_system_backlight_paint</STRONG> (Thumb, 508 bytes, Stack size 16 bytes, gui_system.o(i.gui_system_backlight_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1340 + Unknown Stack Size
<LI>Call Chain = gui_system_backlight_paint &rArr; menu_system &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_system
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[307]"></a>gui_system_base_heartrate_btn_evt</STRONG> (Thumb, 680 bytes, Stack size 16 bytes, gui_system.o(i.gui_system_base_heartrate_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_system_base_heartrate_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1cc]"></a>gui_system_base_heartrate_paint</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_system.o(i.gui_system_base_heartrate_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1468 + Unknown Stack Size
<LI>Call Chain = gui_system_base_heartrate_paint &rArr; system_base_heartrate &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_base_heartrate
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[302]"></a>gui_system_btn_evt</STRONG> (Thumb, 700 bytes, Stack size 16 bytes, gui_system.o(i.gui_system_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 596 + Unknown Stack Size
<LI>Call Chain = gui_system_btn_evt &rArr; dev_ble_system_on &rArr; task_ble_init &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_ble_system_on
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_ble_system_off
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[308]"></a>gui_system_language_btn_evt</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, gui_system.o(i.gui_system_language_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_system_language_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1cd]"></a>gui_system_language_paint</STRONG> (Thumb, 244 bytes, Stack size 8 bytes, gui_system.o(i.gui_system_language_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1332 + Unknown Stack Size
<LI>Call Chain = gui_system_language_paint &rArr; menu_system &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_system
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[1c7]"></a>gui_system_paint</STRONG> (Thumb, 2926 bytes, Stack size 64 bytes, gui_system.o(i.gui_system_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1476 + Unknown Stack Size
<LI>Call Chain = gui_system_paint &rArr; menu &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[303]"></a>gui_system_silent_btn_evt</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, gui_system.o(i.gui_system_silent_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_system_silent_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1c8]"></a>gui_system_silent_paint</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, gui_system.o(i.gui_system_silent_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1492 + Unknown Stack Size
<LI>Call Chain = gui_system_silent_paint &rArr; menu_time &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[304]"></a>gui_system_silent_time_btn_evt</STRONG> (Thumb, 524 bytes, Stack size 8 bytes, gui_system.o(i.gui_system_silent_time_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_system_silent_time_btn_evt &rArr; gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_silent_mode_set
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_silent_mode_clear
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_silent_time
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1c9]"></a>gui_system_silent_time_paint</STRONG> (Thumb, 604 bytes, Stack size 80 bytes, gui_system.o(i.gui_system_silent_time_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444 + Unknown Stack Size
<LI>Call Chain = gui_system_silent_time_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[30a]"></a>gui_system_sound_btn_evt</STRONG> (Thumb, 270 bytes, Stack size 16 bytes, gui_system.o(i.gui_system_sound_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_system_sound_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1cf]"></a>gui_system_sound_paint</STRONG> (Thumb, 508 bytes, Stack size 16 bytes, gui_system.o(i.gui_system_sound_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1340 + Unknown Stack Size
<LI>Call Chain = gui_system_sound_paint &rArr; menu_system &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_system
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2ec]"></a>gui_theme_app_menu_btn_evt</STRONG> (Thumb, 626 bytes, Stack size 16 bytes, gui_theme.o(i.gui_theme_app_menu_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = gui_theme_app_menu_btn_evt &rArr; com_dial_set_invalid &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_set_invalid
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_custom_write
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_custom_delete
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_init
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_is_valid
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_get
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1ae]"></a>gui_theme_app_menu_paint</STRONG> (Thumb, 334 bytes, Stack size 32 bytes, gui_theme.o(i.gui_theme_app_menu_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1620 + Unknown Stack Size
<LI>Call Chain = gui_theme_app_menu_paint &rArr; gui_dial_preview &rArr; gui_dial_status &rArr; LCD_SetString_ExtFlash &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDialScale
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[857]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_option
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_custom_color
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_invalid_paint
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_init
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_is_valid
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_preview
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_page_down
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2ed]"></a>gui_theme_app_success_btn_evt</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gui_theme.o(i.gui_theme_app_success_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_theme_app_success_btn_evt &rArr; timer_notify_display_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1af]"></a>gui_theme_app_success_paint</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gui_theme.o(i.gui_theme_app_success_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1596 + Unknown Stack Size
<LI>Call Chain = gui_theme_app_success_paint &rArr; gui_dial_preview &rArr; gui_dial_status &rArr; LCD_SetString_ExtFlash &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_preview
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2ea]"></a>gui_theme_btn_evt</STRONG> (Thumb, 462 bytes, Stack size 16 bytes, gui_theme.o(i.gui_theme_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 508 + Unknown Stack Size
<LI>Call Chain = gui_theme_btn_evt &rArr; com_dial_get &rArr; com_dial_is_valid &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_init
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_is_valid
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_get
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[61b]"></a>gui_theme_init</STRONG> (Thumb, 344 bytes, Stack size 24 bytes, gui_theme.o(i.gui_theme_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = gui_theme_init &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_btn_evt
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_btn_evt
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_menu_btn_evt
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_paint
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_face_finish
</UL>

<P><STRONG><a name="[2ee]"></a>gui_theme_invalid_btn_evt</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gui_theme.o(i.gui_theme_invalid_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_theme_invalid_btn_evt &rArr; timer_notify_display_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1b0]"></a>gui_theme_invalid_paint</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gui_theme.o(i.gui_theme_invalid_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380 + Unknown Stack Size
<LI>Call Chain = gui_theme_invalid_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_paint
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[1ac]"></a>gui_theme_paint</STRONG> (Thumb, 200 bytes, Stack size 8 bytes, gui_theme.o(i.gui_theme_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1332 + Unknown Stack Size
<LI>Call Chain = gui_theme_paint &rArr; theme &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;theme
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2eb]"></a>gui_theme_preview_btn_evt</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, gui_theme.o(i.gui_theme_preview_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_theme_preview_btn_evt &rArr; timer_notify_display_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1ad]"></a>gui_theme_preview_paint</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, gui_theme.o(i.gui_theme_preview_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1620 + Unknown Stack Size
<LI>Call Chain = gui_theme_preview_paint &rArr; gui_dial_preview &rArr; gui_dial_status &rArr; LCD_SetString_ExtFlash &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_preview
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[777]"></a>gui_tick_cross</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gui_heartrate.o(i.gui_tick_cross))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = gui_tick_cross &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_iscomplete_paint
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_confirm_save_paint
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_delete_paint
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_stable_paint
</UL>

<P><STRONG><a name="[2f1]"></a>gui_time_alarm_btn_evt</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, gui_time.o(i.gui_time_alarm_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_time_alarm_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1b3]"></a>gui_time_alarm_paint</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, gui_time.o(i.gui_time_alarm_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1436 + Unknown Stack Size
<LI>Call Chain = gui_time_alarm_paint &rArr; alarm &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2f2]"></a>gui_time_alarm_set_btn_evt</STRONG> (Thumb, 546 bytes, Stack size 16 bytes, gui_time.o(i.gui_time_alarm_set_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_time_alarm_set_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1b4]"></a>gui_time_alarm_set_paint</STRONG> (Thumb, 986 bytes, Stack size 48 bytes, gui_time.o(i.gui_time_alarm_set_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1452 + Unknown Stack Size
<LI>Call Chain = gui_time_alarm_set_paint &rArr; alarm_set &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_set
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2f5]"></a>gui_time_alarm_set_repition_btn_evt</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, gui_time.o(i.gui_time_alarm_set_repition_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_time_alarm_set_repition_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1b7]"></a>gui_time_alarm_set_repition_paint</STRONG> (Thumb, 296 bytes, Stack size 8 bytes, gui_time.o(i.gui_time_alarm_set_repition_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1332 + Unknown Stack Size
<LI>Call Chain = gui_time_alarm_set_repition_paint &rArr; alarm_set_repition &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_set_repition
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2f4]"></a>gui_time_alarm_set_sound_N_viberate_btn_evt</STRONG> (Thumb, 340 bytes, Stack size 16 bytes, gui_time.o(i.gui_time_alarm_set_sound_N_viberate_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_time_alarm_set_sound_N_viberate_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1b6]"></a>gui_time_alarm_set_sound_N_viberate_paint</STRONG> (Thumb, 222 bytes, Stack size 8 bytes, gui_time.o(i.gui_time_alarm_set_sound_N_viberate_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1332 + Unknown Stack Size
<LI>Call Chain = gui_time_alarm_set_sound_N_viberate_paint &rArr; alarm_set_sound_N_viberate &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_set_sound_N_viberate
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2f3]"></a>gui_time_alarm_set_time_btn_evt</STRONG> (Thumb, 438 bytes, Stack size 16 bytes, gui_time.o(i.gui_time_alarm_set_time_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_time_alarm_set_time_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1b5]"></a>gui_time_alarm_set_time_paint</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gui_time.o(i.gui_time_alarm_set_time_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380 + Unknown Stack Size
<LI>Call Chain = gui_time_alarm_set_time_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_set_time
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2ef]"></a>gui_time_btn_evt</STRONG> (Thumb, 280 bytes, Stack size 16 bytes, gui_time.o(i.gui_time_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 572 + Unknown Stack Size
<LI>Call Chain = gui_time_btn_evt &rArr; CreateGPSTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_utc_get_init
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateGPSTask
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[36e]"></a>gui_time_calibration_realtime_test_evt</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, gui_time_calibration_test.o(i.gui_time_calibration_realtime_test_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = gui_time_calibration_realtime_test_evt &rArr; StopTimerB2 &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTimerB2
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1dc]"></a>gui_time_calibration_realtime_test_paint</STRONG> (Thumb, 176 bytes, Stack size 96 bytes, gui_time_calibration_test.o(i.gui_time_calibration_realtime_test_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1460 + Unknown Stack Size
<LI>Call Chain = gui_time_calibration_realtime_test_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[375]"></a>gui_time_calibration_status_test_evt</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, gui_time_calibration_test.o(i.gui_time_calibration_status_test_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = gui_time_calibration_status_test_evt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupTimerB2
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_TimeCalibrationStatus
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_TimeCalibration
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCalibrationValueAndConfigAdjValue
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[23c]"></a>gui_time_calibration_status_test_paint</STRONG> (Thumb, 1764 bytes, Stack size 200 bytes, gui_time_calibration_test.o(i.gui_time_calibration_status_test_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1564 + Unknown Stack Size
<LI>Call Chain = gui_time_calibration_status_test_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_TimeCalibrationStatus
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadCalibrationValueAndConfigAdjValue
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsTimeValid
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TimeCalibrationStr
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TimeCalibrationStatus
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TimeCalibrationHintStatus
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TimeAdjStr
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_T1GPSStr
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2c9]"></a>gui_time_done_hint_btn_evt</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, gui_notify_base_hdr.o(i.gui_time_done_hint_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 772 + Unknown Stack Size
<LI>Call Chain = gui_time_done_hint_btn_evt &rArr; get_current_monitor_screen &rArr; Get_TrainPlanDayRecord &rArr; get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_monitor_screen
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[188]"></a>gui_time_done_hint_paint</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, gui_notify_base_hdr.o(i.gui_time_done_hint_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388 + Unknown Stack Size
<LI>Call Chain = gui_time_done_hint_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[1b1]"></a>gui_time_paint</STRONG> (Thumb, 264 bytes, Stack size 8 bytes, gui_time.o(i.gui_time_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1332 + Unknown Stack Size
<LI>Call Chain = gui_time_paint &rArr; time_paint &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[377]"></a>gui_time_realtime_difftime_evt</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gui_time_calibration_test.o(i.gui_time_realtime_difftime_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = gui_time_realtime_difftime_evt &rArr; SetupTimerB2 &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupTimerB2
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_difftime_rtc_gps_time
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[2f0]"></a>gui_time_utc_get_btn_evt</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, gui_time.o(i.gui_time_utc_get_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 508 + Unknown Stack Size
<LI>Call Chain = gui_time_utc_get_btn_evt &rArr; mode_close &rArr; timer_notify_remind_stop &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[85a]"></a>gui_time_utc_get_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_time.o(i.gui_time_utc_get_init))
<BR><BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_btn_evt
</UL>

<P><STRONG><a name="[1b2]"></a>gui_time_utc_get_paint</STRONG> (Thumb, 660 bytes, Stack size 40 bytes, gui_time.o(i.gui_time_utc_get_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404 + Unknown Stack Size
<LI>Call Chain = gui_time_utc_get_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_start
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2e4]"></a>gui_tool_ambient_altitude_btn_evt</STRONG> (Thumb, 232 bytes, Stack size 32 bytes, gui_tool_ambient.o(i.gui_tool_ambient_altitude_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = gui_tool_ambient_altitude_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_ambient_value_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[2e5]"></a>gui_tool_ambient_altitude_calibration_btn_evt</STRONG> (Thumb, 790 bytes, Stack size 48 bytes, gui_tool_ambient.o(i.gui_tool_ambient_altitude_calibration_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = gui_tool_ambient_altitude_calibration_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_ambient_value_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1a7]"></a>gui_tool_ambient_altitude_calibration_paint</STRONG> (Thumb, 496 bytes, Stack size 40 bytes, gui_tool_ambient.o(i.gui_tool_ambient_altitude_calibration_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404 + Unknown Stack Size
<LI>Call Chain = gui_tool_ambient_altitude_calibration_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[1a6]"></a>gui_tool_ambient_altitude_paint</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, gui_tool_ambient.o(i.gui_tool_ambient_altitude_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388 + Unknown Stack Size
<LI>Call Chain = gui_tool_ambient_altitude_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_page_up
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_page_down
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_chart
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2db]"></a>gui_tool_ambient_btn_evt</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, gui_tool_ambient.o(i.gui_tool_ambient_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_tool_ambient_btn_evt &rArr; tool_task_close &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Tool_Index
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_task_close
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[2e2]"></a>gui_tool_ambient_menu_btn_evt</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, gui_tool_ambient.o(i.gui_tool_ambient_menu_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_tool_ambient_menu_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1a4]"></a>gui_tool_ambient_menu_paint</STRONG> (Thumb, 282 bytes, Stack size 32 bytes, gui_tool_ambient.o(i.gui_tool_ambient_menu_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396 + Unknown Stack Size
<LI>Call Chain = gui_tool_ambient_menu_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_page_down
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[19d]"></a>gui_tool_ambient_paint</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, gui_tool_ambient.o(i.gui_tool_ambient_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = gui_tool_ambient_paint &rArr; gui_tool_ambient_value &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_value
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2e3]"></a>gui_tool_ambient_pressure_btn_evt</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, gui_tool_ambient.o(i.gui_tool_ambient_pressure_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_tool_ambient_pressure_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[860]"></a>gui_tool_ambient_pressure_chart</STRONG> (Thumb, 2078 bytes, Stack size 168 bytes, gui_tool_ambient.o(i.gui_tool_ambient_pressure_chart))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = gui_tool_ambient_pressure_chart &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_pressure_paint
</UL>

<P><STRONG><a name="[1a5]"></a>gui_tool_ambient_pressure_paint</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, gui_tool_ambient.o(i.gui_tool_ambient_pressure_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388 + Unknown Stack Size
<LI>Call Chain = gui_tool_ambient_pressure_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_page_up
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_page_down
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_pressure_chart
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[4a7]"></a>gui_tool_ambient_value</STRONG> (Thumb, 634 bytes, Stack size 72 bytes, gui_tool_ambient.o(i.gui_tool_ambient_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = gui_tool_ambient_value &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_paint
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[2ca]"></a>gui_tool_btn_evt</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, gui_tool.o(i.gui_tool_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_tool_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Tool_Index
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_menu_index_record
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_tool_countdown_index
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[2d9]"></a>gui_tool_calendar_btn_evt</STRONG> (Thumb, 278 bytes, Stack size 16 bytes, gui_tool_calendar.o(i.gui_tool_calendar_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 796<LI>Call Chain = gui_tool_calendar_btn_evt &rArr; set_switch_screen_count_evt &rArr; get_current_monitor_screen &rArr; Get_TrainPlanDayRecord &rArr; get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_task_close
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_switch_screen_count_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[862]"></a>gui_tool_calendar_date</STRONG> (Thumb, 1658 bytes, Stack size 80 bytes, gui_tool_calendar.o(i.gui_tool_calendar_date))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444 + Unknown Stack Size
<LI>Call Chain = gui_tool_calendar_date &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MonthMaxDay
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_info_init
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_get
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LunarCalendar
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_paint
</UL>

<P><STRONG><a name="[19a]"></a>gui_tool_calendar_paint</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gui_tool_calendar.o(i.gui_tool_calendar_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1460 + Unknown Stack Size
<LI>Call Chain = gui_tool_calendar_paint &rArr; gui_tool_calendar_date &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_bottom_time
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_date
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2da]"></a>gui_tool_calendar_weather_btn_evt</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, gui_tool_calendar.o(i.gui_tool_calendar_weather_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_tool_calendar_weather_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[760]"></a>gui_tool_calendar_weather_get</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, gui_tool_calendar.o(i.gui_tool_calendar_weather_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = gui_tool_calendar_weather_get
</UL>
<BR>[Called By]<UL><LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_weather
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_get_weather
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_date
</UL>

<P><STRONG><a name="[63d]"></a>gui_tool_calendar_weather_info_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_tool_calendar.o(i.gui_tool_calendar_weather_info_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = gui_tool_calendar_weather_info_init &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_data_init
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_weather_info_request
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_get_weather
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_date
</UL>

<P><STRONG><a name="[864]"></a>gui_tool_calendar_weather_no_info</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, gui_tool_calendar.o(i.gui_tool_calendar_weather_no_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_tool_calendar_weather_no_info &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_paint
</UL>

<P><STRONG><a name="[19b]"></a>gui_tool_calendar_weather_paint</STRONG> (Thumb, 814 bytes, Stack size 64 bytes, gui_tool_calendar.o(i.gui_tool_calendar_weather_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444 + Unknown Stack Size
<LI>Call Chain = gui_tool_calendar_weather_paint &rArr; gui_tool_calendar_weather_no_info &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_no_info
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_air_standard
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2d7]"></a>gui_tool_compass_btn_evt</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, gui_tool_compass.o(i.gui_tool_compass_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = gui_tool_compass_btn_evt &rArr; magn_para_init &rArr; read_magn_calibration_paremeter &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Tool_Index
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_task_close
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_para_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[6d5]"></a>gui_tool_compass_bubble_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_tool_compass.o(i.gui_tool_compass_bubble_set))
<BR><BR>[Called By]<UL><LI><a href="#[869]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_init
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_bubble_get
</UL>

<P><STRONG><a name="[868]"></a>gui_tool_compass_cail_update</STRONG> (Thumb, 260 bytes, Stack size 40 bytes, gui_tool_compass.o(i.gui_tool_compass_cail_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = gui_tool_compass_cail_update &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_cali_paint
</UL>

<P><STRONG><a name="[2d8]"></a>gui_tool_compass_cali_btn_evt</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gui_tool_compass.o(i.gui_tool_compass_cali_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_tool_compass_cali_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_para_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[199]"></a>gui_tool_compass_cali_paint</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, gui_tool_compass.o(i.gui_tool_compass_cali_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380 + Unknown Stack Size
<LI>Call Chain = gui_tool_compass_cali_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_cail_update
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[869]"></a>gui_tool_compass_init</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, gui_tool_compass.o(i.gui_tool_compass_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = gui_tool_compass_init
</UL>
<BR>[Calls]<UL><LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_bubble_set
</UL>
<BR>[Called By]<UL><LI><a href="#[956]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_task_init
</UL>

<P><STRONG><a name="[198]"></a>gui_tool_compass_paint</STRONG> (Thumb, 524 bytes, Stack size 80 bytes, gui_tool_compass.o(i.gui_tool_compass_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444 + Unknown Stack Size
<LI>Call Chain = gui_tool_compass_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_circle_point
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[867]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_bubble
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2df]"></a>gui_tool_countdown_exit_btn_evt</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, gui_tool_countdown.o(i.gui_tool_countdown_exit_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = gui_tool_countdown_exit_btn_evt &rArr; am_util_stopwatch_start &rArr; elapsed_time_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_task_close
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_start
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1a1]"></a>gui_tool_countdown_exit_paint</STRONG> (Thumb, 270 bytes, Stack size 40 bytes, gui_tool_countdown.o(i.gui_tool_countdown_exit_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404 + Unknown Stack Size
<LI>Call Chain = gui_tool_countdown_exit_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_page_down
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2e0]"></a>gui_tool_countdown_finish_btn_evt</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gui_tool_countdown.o(i.gui_tool_countdown_finish_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_tool_countdown_finish_btn_evt &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1a2]"></a>gui_tool_countdown_finish_paint</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, gui_tool_countdown.o(i.gui_tool_countdown_finish_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380 + Unknown Stack Size
<LI>Call Chain = gui_tool_countdown_finish_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[86a]"></a>gui_tool_countdown_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_tool_countdown.o(i.gui_tool_countdown_init))
<BR><BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_menu_btn_evt
</UL>

<P><STRONG><a name="[2dc]"></a>gui_tool_countdown_menu_btn_evt</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, gui_tool_countdown.o(i.gui_tool_countdown_menu_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = gui_tool_countdown_menu_btn_evt &rArr; tool_task_start &rArr; tool_task_init &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_task_start
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_init
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_restart
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[19e]"></a>gui_tool_countdown_menu_paint</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, gui_tool_countdown.o(i.gui_tool_countdown_menu_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404 + Unknown Stack Size
<LI>Call Chain = gui_tool_countdown_menu_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_page_down
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2dd]"></a>gui_tool_countdown_setting_btn_evt</STRONG> (Thumb, 446 bytes, Stack size 16 bytes, gui_tool_countdown.o(i.gui_tool_countdown_setting_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_tool_countdown_setting_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[19f]"></a>gui_tool_countdown_setting_paint</STRONG> (Thumb, 288 bytes, Stack size 48 bytes, gui_tool_countdown.o(i.gui_tool_countdown_setting_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_tool_countdown_setting_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2de]"></a>gui_tool_countdown_time_btn_evt</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gui_tool_countdown.o(i.gui_tool_countdown_time_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_tool_countdown_time_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1a0]"></a>gui_tool_countdown_time_paint</STRONG> (Thumb, 256 bytes, Stack size 64 bytes, gui_tool_countdown.o(i.gui_tool_countdown_time_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = gui_tool_countdown_time_paint &rArr; LCD_SetArc &rArr; draw_arc &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_countdown_target_time_get
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2e1]"></a>gui_tool_findphone_btn_evt</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, gui_tool_findphone.o(i.gui_tool_findphone_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 492 + Unknown Stack Size
<LI>Call Chain = gui_tool_findphone_btn_evt &rArr; gui_tool_findphone_timer_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_task_close
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1a3]"></a>gui_tool_findphone_paint</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, gui_tool_findphone.o(i.gui_tool_findphone_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380 + Unknown Stack Size
<LI>Call Chain = gui_tool_findphone_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_timer_stop
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_timer_start
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_display
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[86e]"></a>gui_tool_findphone_timer_init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui_tool_findphone.o(i.gui_tool_findphone_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 588 + Unknown Stack Size
<LI>Call Chain = gui_tool_findphone_timer_init &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_tasks
</UL>

<P><STRONG><a name="[86d]"></a>gui_tool_findphone_timer_start</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, gui_tool_findphone.o(i.gui_tool_findphone_timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 484 + Unknown Stack Size
<LI>Call Chain = gui_tool_findphone_timer_start &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_paint
</UL>

<P><STRONG><a name="[64b]"></a>gui_tool_findphone_timer_stop</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, gui_tool_findphone.o(i.gui_tool_findphone_timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 452 + Unknown Stack Size
<LI>Call Chain = gui_tool_findphone_timer_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_btn_evt
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_paint
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_find_phone
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback
</UL>

<P><STRONG><a name="[2cb]"></a>gui_tool_gps_btn_evt</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, gui_tool_gps.o(i.gui_tool_gps_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_tool_gps_btn_evt &rArr; tool_task_close &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Tool_Index
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_task_close
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[18b]"></a>gui_tool_gps_paint</STRONG> (Thumb, 1732 bytes, Stack size 128 bytes, gui_tool_gps.o(i.gui_tool_gps_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1492 + Unknown Stack Size
<LI>Call Chain = gui_tool_gps_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_gauss_point_get
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_gauss_number_get
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_gauss_init
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[18a]"></a>gui_tool_select_paint</STRONG> (Thumb, 402 bytes, Stack size 56 bytes, gui_tool.o(i.gui_tool_select_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1420 + Unknown Stack Size
<LI>Call Chain = gui_tool_select_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCircle
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Tool_Index
<LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Tool_Nums
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Tool_Index
<LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Tool_Num
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2e6]"></a>gui_tool_stopwatch_btn_evt</STRONG> (Thumb, 800 bytes, Stack size 32 bytes, gui_tool_stopwatch.o(i.gui_tool_stopwatch_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 532 + Unknown Stack Size
<LI>Call Chain = gui_tool_stopwatch_btn_evt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Tool_Index
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_task_close
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_stop
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_start
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_restart
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_init
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_elapsed_get
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_menu_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[4aa]"></a>gui_tool_stopwatch_button</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, gui_tool_stopwatch.o(i.gui_tool_stopwatch_button))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = gui_tool_stopwatch_button &rArr; gui_button_middle &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_button_middle
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_button_back
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_paint
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[504]"></a>gui_tool_stopwatch_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_tool_stopwatch.o(i.gui_tool_stopwatch_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gui_tool_stopwatch_init &rArr; am_util_stopwatch_clear &rArr; am_hal_rtc_time_get
</UL>
<BR>[Calls]<UL><LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_clear
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_menu_btn_evt
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTools
</UL>

<P><STRONG><a name="[2e7]"></a>gui_tool_stopwatch_menu_btn_evt</STRONG> (Thumb, 306 bytes, Stack size 16 bytes, gui_tool_stopwatch.o(i.gui_tool_stopwatch_menu_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = gui_tool_stopwatch_menu_btn_evt &rArr; am_util_stopwatch_start &rArr; elapsed_time_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_init
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_task_close
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_start
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[872]"></a>gui_tool_stopwatch_menu_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_tool_stopwatch.o(i.gui_tool_stopwatch_menu_init))
<BR><BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_btn_evt
</UL>

<P><STRONG><a name="[1a9]"></a>gui_tool_stopwatch_menu_paint</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, gui_tool_stopwatch.o(i.gui_tool_stopwatch_menu_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_tool_stopwatch_menu_paint &rArr; gui_tool_stopwatch_menu &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_time
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_page_down
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_menu
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[1a8]"></a>gui_tool_stopwatch_paint</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gui_tool_stopwatch.o(i.gui_tool_stopwatch_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_tool_stopwatch_paint &rArr; gui_tool_stopwatch_record &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_time
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_button
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_record
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[874]"></a>gui_tool_stopwatch_record</STRONG> (Thumb, 566 bytes, Stack size 56 bytes, gui_tool_stopwatch.o(i.gui_tool_stopwatch_record))
<BR><BR>[Stack]<UL><LI>Max Depth = 1420 + Unknown Stack Size
<LI>Call Chain = gui_tool_stopwatch_record &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_paint
</UL>

<P><STRONG><a name="[2e8]"></a>gui_tool_stopwatch_record_btn_evt</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, gui_tool_stopwatch.o(i.gui_tool_stopwatch_record_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_tool_stopwatch_record_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1aa]"></a>gui_tool_stopwatch_record_paint</STRONG> (Thumb, 928 bytes, Stack size 48 bytes, gui_tool_stopwatch.o(i.gui_tool_stopwatch_record_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_tool_stopwatch_record_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_page_down
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[4a9]"></a>gui_tool_stopwatch_time</STRONG> (Thumb, 526 bytes, Stack size 64 bytes, gui_tool_stopwatch.o(i.gui_tool_stopwatch_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = gui_tool_stopwatch_time &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_paint
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_menu_paint
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[196]"></a>gui_track__trail_load_paint</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gui_tool_gps.o(i.gui_track__trail_load_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380 + Unknown Stack Size
<LI>Call Chain = gui_track__trail_load_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[2d6]"></a>gui_track_load_btn_evt</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_tool_gps.o(i.gui_track_load_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_track_load_btn_evt &rArr; gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLoadTrack
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[79c]"></a>gui_trail_distance_paint</STRONG> (Thumb, 160 bytes, Stack size 48 bytes, gui_tool_gps.o(i.gui_trail_distance_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_trail_distance_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_trail_paint
</UL>

<P><STRONG><a name="[7be]"></a>gui_train_options</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, gui_notify_ble.o(i.gui_train_options))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_train_options &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_pause_paint
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cast_pause_paint
</UL>

<P><STRONG><a name="[7bd]"></a>gui_train_pause_time</STRONG> (Thumb, 202 bytes, Stack size 48 bytes, gui_notify_ble.o(i.gui_train_pause_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_train_pause_time &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_pause_paint
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cast_pause_paint
</UL>

<P><STRONG><a name="[380]"></a>gui_training_cast_btn_evt</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, gui_notify_ble.o(i.gui_training_cast_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 500 + Unknown Stack Size
<LI>Call Chain = gui_training_cast_btn_evt &rArr; timer_notify_display_start &rArr; timer_notify_display_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_sport_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[37d]"></a>gui_training_cast_end_remind_btn_evt</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gui_notify_ble.o(i.gui_training_cast_end_remind_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_training_cast_end_remind_btn_evt &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[246]"></a>gui_training_cast_end_remind_paint</STRONG> (Thumb, 326 bytes, Stack size 48 bytes, gui_notify_ble.o(i.gui_training_cast_end_remind_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_training_cast_end_remind_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[875]"></a>gui_training_cast_heart_paint</STRONG> (Thumb, 340 bytes, Stack size 64 bytes, gui_notify_ble.o(i.gui_training_cast_heart_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_training_cast_heart_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_getHdrValue
<LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hdr_range_color
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hdr_range
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_paint
</UL>

<P><STRONG><a name="[248]"></a>gui_training_cast_paint</STRONG> (Thumb, 1046 bytes, Stack size 72 bytes, gui_notify_ble.o(i.gui_training_cast_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1532 + Unknown Stack Size
<LI>Call Chain = gui_training_cast_paint &rArr; gui_training_cast_title_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCircle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_title_paint
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_time_paint
<LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_heart_paint
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[37e]"></a>gui_training_cast_pause_btn_evt</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, gui_notify_ble.o(i.gui_training_cast_pause_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = gui_training_cast_pause_btn_evt &rArr; ble_uart_response_application_sport_ctrl &rArr; drv_ble_send_data &rArr; drv_ble_timer_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_vice_pasue_stop
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_train_pause_time
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_sport_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[247]"></a>gui_training_cast_pause_paint</STRONG> (Thumb, 230 bytes, Stack size 64 bytes, gui_notify_ble.o(i.gui_training_cast_pause_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1476 + Unknown Stack Size
<LI>Call Chain = gui_training_cast_pause_paint &rArr; gui_train_pause_time &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_getHdrValue
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_train_pause_time
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_train_options
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[245]"></a>gui_training_cast_press_remind_paint</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, gui_notify_ble.o(i.gui_training_cast_press_remind_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380 + Unknown Stack Size
<LI>Call Chain = gui_training_cast_press_remind_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[37f]"></a>gui_training_cast_remind_btn_evt</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gui_notify_ble.o(i.gui_training_cast_remind_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = gui_training_cast_remind_btn_evt &rArr; timer_app_vice_pasue_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_vice_pasue_start
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[244]"></a>gui_training_cast_start_remind_paint</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, gui_notify_ble.o(i.gui_training_cast_start_remind_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380 + Unknown Stack Size
<LI>Call Chain = gui_training_cast_start_remind_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[876]"></a>gui_training_cast_time_paint</STRONG> (Thumb, 78 bytes, Stack size 48 bytes, gui_notify_ble.o(i.gui_training_cast_time_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = gui_training_cast_time_paint &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_paint
</UL>

<P><STRONG><a name="[877]"></a>gui_training_cast_title_paint</STRONG> (Thumb, 388 bytes, Stack size 96 bytes, gui_notify_ble.o(i.gui_training_cast_title_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1460 + Unknown Stack Size
<LI>Call Chain = gui_training_cast_title_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log10
</UL>
<BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_paint
</UL>

<P><STRONG><a name="[351]"></a>gui_trainplan_home_today_hint_btn_evt</STRONG> (Thumb, 282 bytes, Stack size 24 bytes, gui_trainplan.o(i.gui_trainplan_home_today_hint_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 652 + Unknown Stack Size
<LI>Call Chain = gui_trainplan_home_today_hint_btn_evt &rArr; SportContinueLaterDisplay &rArr; sport_continue_later_end &rArr; OpenSensor &rArr; ParameterInitialization &rArr; MatCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trainplan_valid_flag
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IsTrainPlanOnGoing
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySportBack
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySport
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportContinueLaterDisplay
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_init
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanType
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IsCompleteTodayTrainPlan
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_enter_trainplan_way
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[353]"></a>gui_trainplan_is_complete_btn_evt</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, gui_trainplan.o(i.gui_trainplan_is_complete_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 764<LI>Call Chain = gui_trainplan_is_complete_btn_evt &rArr; Get_Curr_Home_Index &rArr; Get_TrainPlanDayRecord &rArr; get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IsTrainPlanOnGoing
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IsCompleteTodayTrainPlan
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Home_Index
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_TranPlanUploadData
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IsCompleteTodayTrainPlan
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1fc]"></a>gui_trainplan_iscomplete_paint</STRONG> (Thumb, 128 bytes, Stack size 48 bytes, gui_trainplan.o(i.gui_trainplan_iscomplete_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1332 + Unknown Stack Size
<LI>Call Chain = gui_trainplan_iscomplete_paint &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tick_cross
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[357]"></a>gui_trainplan_pace_inter_btn_evt</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gui_trainplan.o(i.gui_trainplan_pace_inter_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_trainplan_pace_inter_btn_evt &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[4b0]"></a>gui_trainplan_pace_inter_paint</STRONG> (Thumb, 336 bytes, Stack size 80 bytes, gui_trainplan.o(i.gui_trainplan_pace_inter_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444 + Unknown Stack Size
<LI>Call Chain = gui_trainplan_pace_inter_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_point_direction
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Intervals_TrainPlan_Single_Distance
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[356]"></a>gui_trainplan_pace_up_down_btn_evt</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gui_trainplan.o(i.gui_trainplan_pace_up_down_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_trainplan_pace_up_down_btn_evt &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[4af]"></a>gui_trainplan_pace_up_down_paint</STRONG> (Thumb, 396 bytes, Stack size 208 bytes, gui_trainplan.o(i.gui_trainplan_pace_up_down_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1572 + Unknown Stack Size
<LI>Call Chain = gui_trainplan_pace_up_down_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[374]"></a>gui_trainplan_run_select_btn_evt</STRONG> (Thumb, 482 bytes, Stack size 24 bytes, gui_trainplan.o(i.gui_trainplan_run_select_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 652 + Unknown Stack Size
<LI>Call Chain = gui_trainplan_run_select_btn_evt &rArr; SportContinueLaterDisplay &rArr; sport_continue_later_end &rArr; OpenSensor &rArr; ParameterInitialization &rArr; MatCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trainplan_valid_flag
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IsTrainPlanOnGoing
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySportBack
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySport
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportContinueLaterDisplay
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_init
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanType
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IsCompleteTodayTrainPlan
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_enter_trainplan_way
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[23b]"></a>gui_trainplan_run_select_paint</STRONG> (Thumb, 612 bytes, Stack size 64 bytes, gui_trainplan.o(i.gui_trainplan_run_select_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1348 + Unknown Stack Size
<LI>Call Chain = gui_trainplan_run_select_paint &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[352]"></a>gui_trainplan_sport_today_hint_btn_evt</STRONG> (Thumb, 296 bytes, Stack size 24 bytes, gui_trainplan.o(i.gui_trainplan_sport_today_hint_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 652 + Unknown Stack Size
<LI>Call Chain = gui_trainplan_sport_today_hint_btn_evt &rArr; SportContinueLaterDisplay &rArr; sport_continue_later_end &rArr; OpenSensor &rArr; ParameterInitialization &rArr; MatCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trainplan_valid_flag
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_IsTrainPlanOnGoing
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySportBack
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySport
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportContinueLaterDisplay
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_init
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanType
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IsCompleteTodayTrainPlan
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[358]"></a>gui_trainplan_sw_hint_btn_evt</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, gui_trainplan.o(i.gui_trainplan_sw_hint_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = gui_trainplan_sw_hint_btn_evt &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[4b1]"></a>gui_trainplan_sw_hint_paint</STRONG> (Thumb, 194 bytes, Stack size 56 bytes, gui_trainplan.o(i.gui_trainplan_sw_hint_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1340 + Unknown Stack Size
<LI>Call Chain = gui_trainplan_sw_hint_paint &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[2b8]"></a>gui_trainplan_target_btn_evt</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, gui_trainplan.o(i.gui_trainplan_target_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 796<LI>Call Chain = gui_trainplan_target_btn_evt &rArr; set_switch_screen_count_evt &rArr; get_current_monitor_screen &rArr; Get_TrainPlanDayRecord &rArr; get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trainplan_valid_flag
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_TodayTimeTrainPlan
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_switch_screen_count_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[355]"></a>gui_trainplan_target_hint_btn_evt</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, gui_trainplan.o(i.gui_trainplan_target_hint_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 532 + Unknown Stack Size
<LI>Call Chain = gui_trainplan_target_hint_btn_evt &rArr; gui_sport_pause_evt &rArr; gui_sport_motor_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1fe]"></a>gui_trainplan_target_hint_paint</STRONG> (Thumb, 204 bytes, Stack size 56 bytes, gui_trainplan.o(i.gui_trainplan_target_hint_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1340 + Unknown Stack Size
<LI>Call Chain = gui_trainplan_target_hint_paint &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_point_direction
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[174]"></a>gui_trainplan_target_paint</STRONG> (Thumb, 328 bytes, Stack size 72 bytes, gui_trainplan.o(i.gui_trainplan_target_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1492 + Unknown Stack Size
<LI>Call Chain = gui_trainplan_target_paint &rArr; gui_trainplan_beforedays_paint &rArr; gui_trainplan_title_paint &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trainplan_valid_flag
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_TodayTimeTrainPlan
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_ValidTimeTrainPlan
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanTotalDays
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanBeforeDays
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_SomeDayofTrainPlan
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_yesterday_tommorow_paint
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_content_paint
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_title_paint
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_morethran_paint
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_hint_paint
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_enddays_paint
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_beforedays_paint
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[354]"></a>gui_trainplan_today_hint_btn_evt</STRONG> (Thumb, 362 bytes, Stack size 24 bytes, gui_trainplan.o(i.gui_trainplan_today_hint_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 652 + Unknown Stack Size
<LI>Call Chain = gui_trainplan_today_hint_btn_evt &rArr; SportContinueLaterDisplay &rArr; sport_continue_later_end &rArr; OpenSensor &rArr; ParameterInitialization &rArr; MatCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySportBack
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySport
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportContinueLaterDisplay
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_init
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanType
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IsCompleteTodayTrainPlan
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_enter_trainplan_way
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1fd]"></a>gui_trainplan_today_hint_paint</STRONG> (Thumb, 368 bytes, Stack size 216 bytes, gui_trainplan.o(i.gui_trainplan_today_hint_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1564 + Unknown Stack Size
<LI>Call Chain = gui_trainplan_today_hint_paint &rArr; gui_trainplan_today_content_paint &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanType
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_content_paint
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_title_paint
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[1fb]"></a>gui_trainplan_today_type_content_paint</STRONG> (Thumb, 366 bytes, Stack size 200 bytes, gui_trainplan.o(i.gui_trainplan_today_type_content_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1484 + Unknown Stack Size
<LI>Call Chain = gui_trainplan_today_type_content_paint &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[240]"></a>gui_update_cod_dial_paint</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, gui_dfu.o(i.gui_update_cod_dial_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396 + Unknown Stack Size
<LI>Call Chain = gui_update_cod_dial_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dfu_timer_start
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;progress_display
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[880]"></a>gui_vice_climbing_save_detail_1_paint</STRONG> (Thumb, 1232 bytes, Stack size 120 bytes, gui_sport.o(i.gui_vice_climbing_save_detail_1_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1484 + Unknown Stack Size
<LI>Call Chain = gui_vice_climbing_save_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_climb_detail_paint
</UL>

<P><STRONG><a name="[881]"></a>gui_vice_climbing_save_detail_2_paint</STRONG> (Thumb, 932 bytes, Stack size 96 bytes, gui_sport.o(i.gui_vice_climbing_save_detail_2_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1460 + Unknown Stack Size
<LI>Call Chain = gui_vice_climbing_save_detail_2_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_climb_detail_paint
</UL>

<P><STRONG><a name="[1e4]"></a>gui_vice_pause_hint_paint</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, gui_sport.o(i.gui_vice_pause_hint_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = gui_vice_pause_hint_paint &rArr; LCD_SetArc &rArr; draw_arc &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCircle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[882]"></a>gui_vice_run_save_detail_1_paint</STRONG> (Thumb, 1200 bytes, Stack size 120 bytes, gui_sport.o(i.gui_vice_run_save_detail_1_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1484 + Unknown Stack Size
<LI>Call Chain = gui_vice_run_save_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_run_detail_paint
</UL>

<P><STRONG><a name="[883]"></a>gui_vice_run_save_detail_2_paint</STRONG> (Thumb, 1254 bytes, Stack size 96 bytes, gui_sport.o(i.gui_vice_run_save_detail_2_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1460 + Unknown Stack Size
<LI>Call Chain = gui_vice_run_save_detail_2_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_run_detail_paint
</UL>

<P><STRONG><a name="[1bf]"></a>gui_vice_screen_data_paint</STRONG> (Thumb, 398 bytes, Stack size 64 bytes, gui_sport.o(i.gui_vice_screen_data_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1548 + Unknown Stack Size
<LI>Call Chain = gui_vice_screen_data_paint &rArr; gui_sport_data_four_bar_display_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_four_bar_display_paint
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_app_sport_data_show_str
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[1be]"></a>gui_vice_screen_hint_paint</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, gui_sport.o(i.gui_vice_screen_hint_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380 + Unknown Stack Size
<LI>Call Chain = gui_vice_screen_hint_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[382]"></a>gui_vice_sport_btn_evt</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_notify_ble.o(i.gui_vice_sport_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = gui_vice_sport_btn_evt &rArr; ble_uart_response_application_sport_ctrl &rArr; drv_ble_send_data &rArr; drv_ble_timer_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_sport_ctrl
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[884]"></a>gui_vice_sport_climb_detail_paint</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui_sport.o(i.gui_vice_sport_climb_detail_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1492 + Unknown Stack Size
<LI>Call Chain = gui_vice_sport_climb_detail_paint &rArr; gui_vice_climbing_save_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_2_paint
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_1_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_detail_paint
</UL>

<P><STRONG><a name="[885]"></a>gui_vice_sport_cycling_detail_1_paint</STRONG> (Thumb, 1232 bytes, Stack size 120 bytes, gui_sport.o(i.gui_vice_sport_cycling_detail_1_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1484 + Unknown Stack Size
<LI>Call Chain = gui_vice_sport_cycling_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_ride_detail_paint
</UL>

<P><STRONG><a name="[886]"></a>gui_vice_sport_cycling_detail_2_paint</STRONG> (Thumb, 1336 bytes, Stack size 96 bytes, gui_sport.o(i.gui_vice_sport_cycling_detail_2_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1460 + Unknown Stack Size
<LI>Call Chain = gui_vice_sport_cycling_detail_2_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_ride_detail_paint
</UL>

<P><STRONG><a name="[383]"></a>gui_vice_sport_detail_btn_evt</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, gui_sport.o(i.gui_vice_sport_detail_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = gui_vice_sport_detail_btn_evt &rArr; timer_app_vice_pasue_stop &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_vice_pasue_stop
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_train_pause_time
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1c0]"></a>gui_vice_sport_detail_paint</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gui_sport.o(i.gui_vice_sport_detail_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1500 + Unknown Stack Size
<LI>Call Chain = gui_vice_sport_detail_paint &rArr; gui_vice_sport_walk_detail_paint &rArr; gui_vice_sport_walk_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_walk_detail_paint
<LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_run_detail_paint
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_ride_detail_paint
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_climb_detail_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[889]"></a>gui_vice_sport_ride_detail_paint</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui_sport.o(i.gui_vice_sport_ride_detail_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1492 + Unknown Stack Size
<LI>Call Chain = gui_vice_sport_ride_detail_paint &rArr; gui_vice_sport_cycling_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_2_paint
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_1_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_detail_paint
</UL>

<P><STRONG><a name="[887]"></a>gui_vice_sport_run_detail_paint</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui_sport.o(i.gui_vice_sport_run_detail_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1492 + Unknown Stack Size
<LI>Call Chain = gui_vice_sport_run_detail_paint &rArr; gui_vice_run_save_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_2_paint
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_1_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_detail_paint
</UL>

<P><STRONG><a name="[88a]"></a>gui_vice_sport_walk_detail_1_paint</STRONG> (Thumb, 1204 bytes, Stack size 120 bytes, gui_sport.o(i.gui_vice_sport_walk_detail_1_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1484 + Unknown Stack Size
<LI>Call Chain = gui_vice_sport_walk_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_walk_detail_paint
</UL>

<P><STRONG><a name="[88b]"></a>gui_vice_sport_walk_detail_2_paint</STRONG> (Thumb, 414 bytes, Stack size 56 bytes, gui_sport.o(i.gui_vice_sport_walk_detail_2_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1420 + Unknown Stack Size
<LI>Call Chain = gui_vice_sport_walk_detail_2_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_walk_detail_paint
</UL>

<P><STRONG><a name="[888]"></a>gui_vice_sport_walk_detail_paint</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui_sport.o(i.gui_vice_sport_walk_detail_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1492 + Unknown Stack Size
<LI>Call Chain = gui_vice_sport_walk_detail_paint &rArr; gui_vice_sport_walk_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_walk_detail_2_paint
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_walk_detail_1_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_detail_paint
</UL>

<P><STRONG><a name="[2d2]"></a>gui_view_motion_trail_btn_evt</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gui_tool_gps.o(i.gui_view_motion_trail_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_view_motion_trail_btn_evt &rArr; gui_swich_msg &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[192]"></a>gui_view_motion_trail_paint</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gui_tool_gps.o(i.gui_view_motion_trail_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1436 + Unknown Stack Size
<LI>Call Chain = gui_view_motion_trail_paint &rArr; gui_realtime_battery_paint_gps &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_c_1_track
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_realtime_battery_paint_gps
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_distance_paint_gps
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[842]"></a>gui_walk_prompt_paint</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, gui_sport_walk.o(i.gui_walk_prompt_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_walk_prompt_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_heart_paint
</UL>

<P><STRONG><a name="[846]"></a>gui_walk_track_update_paint</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_sport_walk.o(i.gui_walk_track_update_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_walk_track_update_paint &rArr; draw_track_mark &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_track_mark
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsport_arrows
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTrack
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLoadTrack
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_dottrack_nums
</UL>
<BR>[Called By]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_track_paint
</UL>

<P><STRONG><a name="[30b]"></a>gui_watch_info_btn_evt</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gui_watch_info.o(i.gui_watch_info_btn_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = gui_watch_info_btn_evt &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandler
</UL>

<P><STRONG><a name="[1d0]"></a>gui_watch_info_paint</STRONG> (Thumb, 82 bytes, Stack size 176 bytes, gui_watch_info.o(i.gui_watch_info_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1612 + Unknown Stack Size
<LI>Call Chain = gui_watch_info_paint &rArr; watch_info_page_one &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ble_info_set
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watch_info_page_one
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_boot_setting_read
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[6bb]"></a>hzbmp16</STRONG> (Thumb, 122 bytes, Stack size 64 bytes, hfma2ylib.o(i.hzbmp16))
<BR><BR>[Stack]<UL><LI>Max Depth = 692<LI>Call Chain = hzbmp16 &rArr; decompressbmp16 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[8cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdram_map
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gt
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompressbmp16
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KSC_16_GetData
<LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JIS_16_GetData
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_gb_getdata
</UL>

<P><STRONG><a name="[6bc]"></a>hzbmp24</STRONG> (Thumb, 72 bytes, Stack size 104 bytes, hfma2ylib.o(i.hzbmp24))
<BR><BR>[Stack]<UL><LI>Max Depth = 996<LI>Call Chain = hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[8cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcdram_map
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompressbmp24
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GB2312_24_GetData
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_gb_getdata
</UL>

<P><STRONG><a name="[92f]"></a>init_steps</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, algo_step_count.o(i.init_steps))
<BR><BR>[Called By]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_filt_stepcount
</UL>

<P><STRONG><a name="[5a3]"></a>isRevB0</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, am_hal_iom.o(i.isRevB0))
<BR><BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write_nq
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write_nb
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_read_nq
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_read_nb
</UL>

<P><STRONG><a name="[385]"></a>is_auto_back_home</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, com_sport.o(i.is_auto_back_home))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = is_auto_back_home
</UL>
<BR>[Calls]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSportReady
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSportMode
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandlerScreenAutoBackHome
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
</UL>

<P><STRONG><a name="[930]"></a>is_custom_monitor</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, gui_home.o(i.is_custom_monitor))
<BR><BR>[Called By]<UL><LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_select_monitor_index
</UL>

<P><STRONG><a name="[452]"></a>is_custom_sport</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, gui_sport.o(i.is_custom_sport))
<BR><BR>[Called By]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Select_Sport_Index
</UL>

<P><STRONG><a name="[454]"></a>is_custom_tool</STRONG> (Thumb, 176 bytes, Stack size 0 bytes, gui_tool.o(i.is_custom_tool))
<BR><BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Select_Tool_Index
</UL>

<P><STRONG><a name="[939]"></a>is_raiselight_time</STRONG> (Thumb, 214 bytes, Stack size 0 bytes, gui_system.o(i.is_raiselight_time))
<BR><BR>[Called By]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_raiselight_mode_get
</UL>

<P><STRONG><a name="[854]"></a>is_silent_time</STRONG> (Thumb, 214 bytes, Stack size 0 bytes, gui_system.o(i.is_silent_time))
<BR><BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_silent_time_btn_evt
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_silent_mode_get
</UL>

<P><STRONG><a name="[388]"></a>is_sport_record_detail_screen</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, com_sport.o(i.is_sport_record_detail_screen))
<BR><BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandlerScreenSportRecord
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
</UL>

<P><STRONG><a name="[71d]"></a>judge_value</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, algo_magn_cal.o(i.judge_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = judge_value
</UL>
<BR>[Called By]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_four_point
</UL>

<P><STRONG><a name="[8d1]"></a>kalmanFilter</STRONG> (Thumb, 928 bytes, Stack size 104 bytes, algo_trackoptimizing.o(i.kalmanFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = kalmanFilter &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kalmanFilterPoint
</UL>

<P><STRONG><a name="[8d2]"></a>kalmanFilterPoint</STRONG> (Thumb, 160 bytes, Stack size 80 bytes, algo_trackoptimizing.o(i.kalmanFilterPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = kalmanFilterPoint &rArr; kalmanFilter &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kf_initial
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kalmanFilter
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kalmanfilter_path
</UL>

<P><STRONG><a name="[729]"></a>kalmanfilter_path</STRONG> (Thumb, 274 bytes, Stack size 40 bytes, algo_trackoptimizing.o(i.kalmanfilter_path))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = kalmanfilter_path &rArr; kalmanFilterPoint &rArr; kalmanFilter &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kalmanFilterPoint
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_sm_data_kf_receive
</UL>

<P><STRONG><a name="[47b]"></a>kf_initial</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, algo_trackoptimizing.o(i.kf_initial))
<BR><BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nogps_maxgap_init
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kalmanFilterPoint
</UL>

<P><STRONG><a name="[8cd]"></a>lcdram_map</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, hfma2ylib.o(i.lcdram_map))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lcdram_map
</UL>
<BR>[Called By]<UL><LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzbmp24
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hzbmp16
</UL>

<P><STRONG><a name="[649]"></a>lib_app_data_crc_check_bootsetting</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lib_app_data.o(i.lib_app_data_crc_check_bootsetting))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lib_app_data_crc_check_bootsetting &rArr; am_bootloader_fast_crc32
</UL>
<BR>[Calls]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_bootloader_fast_crc32
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_menu_btn_evt
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_watch_info_paint
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_presonse_application_ble_info
</UL>

<P><STRONG><a name="[255]"></a>lib_app_data_erase</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lib_app_data.o(i.lib_app_data_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lib_app_data_erase &rArr; drv_intFlash_erase_page &rArr; am_hal_flash_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_intFlash_erase_page
</UL>
<BR>[Called By]<UL><LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_app_ble_dfu_finish
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_app_ble_dfu_apollo_reset_n_activate
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Reset
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_event_handle
</UL>

<P><STRONG><a name="[609]"></a>lib_app_data_read</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lib_app_data.o(i.lib_app_data_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lib_app_data_read &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_menu_btn_evt
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ble_info_set
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_watch_info_paint
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_presonse_application_ble_info
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_dev_name_update
</UL>

<P><STRONG><a name="[60a]"></a>lib_app_data_write</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lib_app_data.o(i.lib_app_data_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = lib_app_data_write &rArr; drv_intFlash_write_page &rArr; am_hal_flash_program_main
</UL>
<BR>[Calls]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_intFlash_write_page
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_intFlash_erase_page
</UL>
<BR>[Called By]<UL><LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_info_read_response
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_presonse_application_ble_info
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_dev_name_update
</UL>

<P><STRONG><a name="[5d5]"></a>lib_boot_jump_to_bootloader</STRONG> (Thumb, 62 bytes, Stack size 120 bytes, lib_boot.o(i.lib_boot_jump_to_bootloader))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = lib_boot_jump_to_bootloader &rArr; lib_boot_setting_write &rArr; drv_intFlash_write_page &rArr; am_hal_flash_program_main
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_boot_setting_read
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_reset_por
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_bootloader_fast_crc32
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_boot_setting_write
<LI><a href="#[8d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_boot_setting_crc_check_bootsetting
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_boot_setting_crc_check_bootloader
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_app_ble_dfu_apollo_reset_n_activate
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_event_handle
</UL>

<P><STRONG><a name="[8d4]"></a>lib_boot_setting_crc_check_bootloader</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, lib_boot_setting.o(i.lib_boot_setting_crc_check_bootloader))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lib_boot_setting_crc_check_bootloader &rArr; am_bootloader_fast_crc32
</UL>
<BR>[Calls]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_bootloader_fast_crc32
</UL>
<BR>[Called By]<UL><LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_boot_jump_to_bootloader
</UL>

<P><STRONG><a name="[8d3]"></a>lib_boot_setting_crc_check_bootsetting</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lib_boot_setting.o(i.lib_boot_setting_crc_check_bootsetting))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = lib_boot_setting_crc_check_bootsetting &rArr; am_bootloader_fast_crc32
</UL>
<BR>[Calls]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_bootloader_fast_crc32
</UL>
<BR>[Called By]<UL><LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_boot_jump_to_bootloader
</UL>

<P><STRONG><a name="[443]"></a>lib_boot_setting_read</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lib_boot_setting.o(i.lib_boot_setting_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lib_boot_setting_read &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSport
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_watch_info_paint
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_info_apollo2
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_boot_jump_to_bootloader
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_event_handle
</UL>

<P><STRONG><a name="[8d5]"></a>lib_boot_setting_write</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lib_boot_setting.o(i.lib_boot_setting_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = lib_boot_setting_write &rArr; drv_intFlash_write_page &rArr; am_hal_flash_program_main
</UL>
<BR>[Calls]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_intFlash_write_page
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_intFlash_erase_page
</UL>
<BR>[Called By]<UL><LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_boot_jump_to_bootloader
</UL>

<P><STRONG><a name="[5f7]"></a>lib_utf16_gbk</STRONG> (Thumb, 188 bytes, Stack size 232 bytes, lib_utf8_gbk.o(i.lib_utf16_gbk))
<BR><BR>[Stack]<UL><LI>Max Depth = 740<LI>Call Chain = lib_utf16_gbk &rArr; U2G &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_wakeup
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_sleep
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_enable
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_disable
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U2G
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_training_cast
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_location_info
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_android
</UL>

<P><STRONG><a name="[5f9]"></a>lib_utf8_gbk</STRONG> (Thumb, 146 bytes, Stack size 224 bytes, lib_utf8_gbk.o(i.lib_utf8_gbk))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = lib_utf8_gbk &rArr; U2G &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_wakeup
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_sleep
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_enable
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_disable
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U2G
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromUTF8ToUnicode
</UL>
<BR>[Called By]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_ios
</UL>

<P><STRONG><a name="[4f6]"></a>load_track_mark</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, com_sport.o(i.load_track_mark))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = load_track_mark &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
</UL>

<P><STRONG><a name="[52d]"></a>log</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, log.o(i.log))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = log &rArr; __hardfp_log &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
</UL>
<BR>[Called By]<UL><LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log10
</UL>

<P><STRONG><a name="[717]"></a>log_back_trackjudge</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, algo_trackjudge.o(i.log_back_trackjudge))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = log_back_trackjudge &rArr; back_remaindistance &rArr; trackjudge &rArr; findtrackindex &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trackjudge
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_DirectionAngle
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_remaindistance
</UL>
<BR>[Called By]<UL><LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_back_OfftrackDetail
</UL>

<P><STRONG><a name="[721]"></a>log_navi_trackjudge</STRONG> (Thumb, 184 bytes, Stack size 16 bytes, algo_trackjudge.o(i.log_navi_trackjudge))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = log_navi_trackjudge &rArr; navi_remaindistance &rArr; trackjudge &rArr; findtrackindex &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trackjudge
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;navi_remaindistance
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_DirectionAngle
</UL>
<BR>[Called By]<UL><LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_navi_OfftrackDetail
</UL>

<P><STRONG><a name="[4e3]"></a>magn_angle_and_cal</STRONG> (Thumb, 3792 bytes, Stack size 208 bytes, algo_magn_cal.o(i.magn_angle_and_cal))
<BR><BR>[Stack]<UL><LI>Max Depth = 1716 + Unknown Stack Size
<LI>Call Chain = magn_angle_and_cal &rArr; fit_ellipsoid &rArr; magn_solve_inverse &rArr; magn_solve &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_enable
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_disable
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_data
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_axes_raw
<LI><a href="#[8d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_magn_calibration_paremeter
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_cal_auto
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_ellipsoid
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_bubble_get
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std_seconds_data
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mean_data
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrtf
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTools
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_compass_enable
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[8d8]"></a>magn_cal_auto</STRONG> (Thumb, 808 bytes, Stack size 152 bytes, algo_magn_cal.o(i.magn_cal_auto))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = magn_cal_auto &rArr; get_four_point &rArr; cal_point_dis &rArr; __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_four_point
<LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_point
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
</UL>

<P><STRONG><a name="[4ff]"></a>magn_cal_flag_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, algo_magn_cal.o(i.magn_cal_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTools
</UL>

<P><STRONG><a name="[8dd]"></a>magn_descomposition</STRONG> (Thumb, 556 bytes, Stack size 96 bytes, algo_magn_cal.o(i.magn_descomposition))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = magn_descomposition &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_solve_inverse
</UL>

<P><STRONG><a name="[401]"></a>magn_dev_para_init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, algo_magn_cal.o(i.magn_dev_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = magn_dev_para_init &rArr; magn_para_init &rArr; read_magn_calibration_paremeter &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_enable
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_disable
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_para_init
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis3mdl_reg_write
</UL>
<BR>[Called By]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_drv_init
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_compass_enable
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSensor
</UL>

<P><STRONG><a name="[866]"></a>magn_para_init</STRONG> (Thumb, 360 bytes, Stack size 16 bytes, algo_magn_cal.o(i.magn_para_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = magn_para_init &rArr; read_magn_calibration_paremeter &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[8de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_magn_calibration_paremeter
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_btn_evt
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_dev_para_init
</UL>

<P><STRONG><a name="[500]"></a>magn_para_reset</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, algo_magn_cal.o(i.magn_para_reset))
<BR><BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_cali_btn_evt
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTools
</UL>

<P><STRONG><a name="[8df]"></a>magn_solve</STRONG> (Thumb, 356 bytes, Stack size 64 bytes, algo_magn_cal.o(i.magn_solve))
<BR><BR>[Stack]<UL><LI>Max Depth = 532 + Unknown Stack Size
<LI>Call Chain = magn_solve &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_solve_inverse
</UL>

<P><STRONG><a name="[712]"></a>magn_solve_inverse</STRONG> (Thumb, 268 bytes, Stack size 72 bytes, algo_magn_cal.o(i.magn_solve_inverse))
<BR><BR>[Stack]<UL><LI>Max Depth = 604 + Unknown Stack Size
<LI>Call Chain = magn_solve_inverse &rArr; magn_solve &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transpose_m
<LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_solve
<LI><a href="#[8dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_descomposition
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_ellipsoid
</UL>

<P><STRONG><a name="[8b]"></a>main</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 852 + Unknown Stack Size
<LI>Call Chain = main &rArr; com_data_init &rArr; Get_TrainPlanDayRecord &rArr; get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[8e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;semaphore_create
<LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_tasks
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motor_enable
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motor_disable
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enter_deep_sleep
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_init
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_data_init
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_init
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_interrupt
<LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_init
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtt_init
<LI><a href="#[8e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_handle
<LI><a href="#[8e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;priority_init
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[4ce]"></a>marathon_cal_time</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, task_sport.o(i.marathon_cal_time))
<BR><BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[8f9]"></a>max_min_data</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, algo_step_count.o(i.max_min_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = max_min_data
</UL>
<BR>[Called By]<UL><LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;step_count_entrance
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedometer
</UL>

<P><STRONG><a name="[8db]"></a>mean_data</STRONG> (Thumb, 222 bytes, Stack size 64 bytes, algo_step_count.o(i.mean_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = mean_data &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fabs
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;step_count_entrance
</UL>

<P><STRONG><a name="[8e8]"></a>min_track_mark</STRONG> (Thumb, 372 bytes, Stack size 72 bytes, com_sport.o(i.min_track_mark))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = min_track_mark &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerTracebackCallback
</UL>

<P><STRONG><a name="[477]"></a>minuteMeanSpeedCalculate</STRONG> (Thumb, 582 bytes, Stack size 12 bytes, algo_trackoptimizing.o(i.minuteMeanSpeedCalculate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = minuteMeanSpeedCalculate &rArr; track_bubble_sort
</UL>
<BR>[Calls]<UL><LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedResult
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;track_bubble_sort
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportsCalculateDistSpeed
</UL>

<P><STRONG><a name="[4cc]"></a>mode_button_pof</STRONG> (Thumb, 262 bytes, Stack size 8 bytes, mode_power_off.o(i.mode_button_pof))
<BR><BR>[Stack]<UL><LI>Max Depth = 508 + Unknown Stack Size
<LI>Call Chain = mode_button_pof &rArr; mode_power_off_store_set_value &rArr; Store_SetData &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_disable
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_power_off_store_set_value
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplaySomeLine
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motor_disable
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Poweroff
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_ble_system_off
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_timer_uninit
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_standby
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_backlight_stop
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_disable
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_filt_stepcount
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseStepTask
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_reset
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_gyro_powerdown
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_powerdown
<LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_uninit
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_stop
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_uninit
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ohr_timer_stop
<LI><a href="#[8e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_uninit
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskKey
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[4ca]"></a>mode_button_pon</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, mode_power_on.o(i.mode_button_pon))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = mode_button_pon &rArr; dev_ble_system_off &rArr; task_ble_uninit &rArr; vTaskDelete &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_ble_system_off
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_reset_por
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskKey
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[4a4]"></a>mode_close</STRONG> (Thumb, 440 bytes, Stack size 16 bytes, mode_power_off.o(i.mode_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 492 + Unknown Stack Size
<LI>Call Chain = mode_close &rArr; timer_notify_remind_stop &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_sport_record_detail_stop
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_sport_record_detail_screen
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_task_close
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_close
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSportReady
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSportMode
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseGPSTask
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_stop
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SaveSta
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySportBack
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSportTask
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dfu_timer_stop
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_statu_get
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_switch_screen_count
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_switch_screen
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_tool_stop
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_step_calibration_stop
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_countdown_stop
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_VO2max_stop
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_VO2max_Countdown_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_btn_evt
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_utc_get_btn_evt
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_hdr_time_btn_evt
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_countdown_finish
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_update_bp_start
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_training_cast
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_sport_cast
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_app_ble_dfu_start
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
</UL>

<P><STRONG><a name="[4cb]"></a>mode_power_off_store_set_value</STRONG> (Thumb, 232 bytes, Stack size 8 bytes, mode_power_off.o(i.mode_power_off_store_set_value))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = mode_power_off_store_set_value &rArr; Store_SetData &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_SetData
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_AmbientData
</UL>
<BR>[Called By]<UL><LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationStackOverflowHook
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskKey
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_app_ble_dfu_finish
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_app_ble_dfu_apollo_reset_n_activate
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_event_handle
</UL>

<P><STRONG><a name="[683]"></a>modify_data_config</STRONG> (Thumb, 386 bytes, Stack size 0 bytes, com_data.o(i.modify_data_config))
<BR><BR>[Called By]<UL><LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_data_init
</UL>

<P><STRONG><a name="[4e6]"></a>monitor_count_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, algo_step_count.o(i.monitor_count_init))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStep
</UL>

<P><STRONG><a name="[8ee]"></a>move_data</STRONG> (Thumb, 90 bytes, Stack size 28 bytes, algo_magn_cal.o(i.move_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = move_data &rArr; get_pre
</UL>
<BR>[Calls]<UL><LI><a href="#[8ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pre
</UL>
<BR>[Called By]<UL><LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transpose_m
</UL>

<P><STRONG><a name="[8d7]"></a>navi_remaindistance</STRONG> (Thumb, 310 bytes, Stack size 56 bytes, algo_trackjudge.o(i.navi_remaindistance))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = navi_remaindistance &rArr; trackjudge &rArr; findtrackindex &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trackjudge
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;partdistancerate
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findtrackindex
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance5Bit
</UL>
<BR>[Called By]<UL><LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_navi_trackjudge
</UL>

<P><STRONG><a name="[727]"></a>nogps_maxgap_init</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, algo_trackoptimizing.o(i.nogps_maxgap_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = nogps_maxgap_init &rArr; sport_over_or_restart &rArr; GpsDistance &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kf_initial
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_over_or_restart
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_exception
</UL>

<P><STRONG><a name="[77f]"></a>notify_low_bat_start</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, gui_home.o(i.notify_low_bat_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = notify_low_bat_start &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
</UL>

<P><STRONG><a name="[8f0]"></a>outOfChina</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, com_sport.o(i.outOfChina))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = outOfChina &rArr; __aeabi_cdcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
</UL>

<P><STRONG><a name="[5e1]"></a>partdistancerate</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, algo_trackjudge.o(i.partdistancerate))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = partdistancerate &rArr; GpsDistance5Bit &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance5Bit
</UL>
<BR>[Called By]<UL><LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;navi_remaindistance
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_remaindistance
</UL>

<P><STRONG><a name="[5dc]"></a>pc_uart_ccommand_application_mac_read</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, task_pc.o(i.pc_uart_ccommand_application_mac_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = pc_uart_ccommand_application_mac_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_event_handle
</UL>

<P><STRONG><a name="[5dd]"></a>pc_uart_ccommand_application_mac_write</STRONG> (Thumb, 108 bytes, Stack size 56 bytes, task_pc.o(i.pc_uart_ccommand_application_mac_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = pc_uart_ccommand_application_mac_write &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_event_handle
</UL>

<P><STRONG><a name="[8f6]"></a>pedometer</STRONG> (Thumb, 4358 bytes, Stack size 80 bytes, algo_step_count.o(i.pedometer))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = pedometer &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sign_sum
<LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max_min_data
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cross_mean
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;step_amount_count
</UL>

<P><STRONG><a name="[3e9]"></a>pvPortMalloc</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, heap_2.o(i.pvPortMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 468 + Unknown Stack Size
<LI>Call Chain = pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[91f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationMallocFailedHook
<LI><a href="#[91e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvHeapInit
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupCreate
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extFlash_sector
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_solve_inverse
<LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_solve
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_ellipsoid
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evector_judge
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatCreate
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;median(float*, int)
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BR_Only_omega_x_a_z_DynamicBoundForDurationTest(BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, int*, int*, int*, int*, bool*, float*, float*, float*)
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Average_acc_z_Peak_Valley(BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, bool*)
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveOutliers(float*, int, bool*, int*)
</UL>

<P><STRONG><a name="[976]"></a>pvTaskIncrementMutexHeldCount</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tasks.o(i.pvTaskIncrementMutexHeldCount))
<BR><BR>[Called By]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[920]"></a>pvTimerGetTimerID</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, timers.o(i.pvTimerGetTimerID))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pvTimerGetTimerID
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
</UL>

<P><STRONG><a name="[90f]"></a>pxPortInitialiseStack</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, port.o(i.pxPortInitialiseStack))
<BR><BR>[Called By]<UL><LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[f8]"></a>r_dat_bat</STRONG> (Thumb, 96 bytes, Stack size 168 bytes, drv_gt24l24.o(i.r_dat_bat))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_read
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ASCII_GetData
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U2G
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;unziphfmex
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompressbmp24
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompressbmp16
</UL>

<P><STRONG><a name="[555]"></a>range_in_half</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, task_step.o(i.range_in_half))
<BR><BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_swim_acc_fifo__data
</UL>

<P><STRONG><a name="[605]"></a>read_all_day_steps</STRONG> (Thumb, 440 bytes, Stack size 144 bytes, com_data.o(i.read_all_day_steps))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = read_all_day_steps &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DaysDiff
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_data_frame_num
</UL>

<P><STRONG><a name="[8de]"></a>read_magn_calibration_paremeter</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, algo_magn_cal.o(i.read_magn_calibration_paremeter))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = read_magn_calibration_paremeter &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_para_init
</UL>

<P><STRONG><a name="[4d2]"></a>remind_autocircle_display</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, com_sport.o(i.remind_autocircle_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = remind_autocircle_display &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[559]"></a>ring_buffer_data_left</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, com_ringbuffer.o(i.ring_buffer_data_left))
<BR><BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_swim_acc_fifo__data
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_hrt_acc_fifo_data
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_read
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_cod_sensor
</UL>

<P><STRONG><a name="[55a]"></a>ring_buffer_get</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, com_ringbuffer.o(i.ring_buffer_get))
<BR><BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_swim_acc_fifo__data
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_hrt_acc_fifo_data
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_read
</UL>

<P><STRONG><a name="[67c]"></a>ring_buffer_init</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, com_ringbuffer.o(i.ring_buffer_init))
<BR><BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_start
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_user_sensor_open
</UL>

<P><STRONG><a name="[556]"></a>ring_buffer_is_full</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, com_ringbuffer.o(i.ring_buffer_is_full))
<BR><BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_swim_acc_fifo__data
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_hrt_acc_fifo_data
</UL>

<P><STRONG><a name="[557]"></a>ring_buffer_put</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, com_ringbuffer.o(i.ring_buffer_put))
<BR><BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_swim_acc_fifo__data
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_hrt_acc_fifo_data
</UL>

<P><STRONG><a name="[923]"></a>ring_buffer_read</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, com_ringbuffer.o(i.ring_buffer_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ring_buffer_read
</UL>
<BR>[Calls]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_get
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_data_left
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_cod_sensor
</UL>

<P><STRONG><a name="[558]"></a>ring_buffer_space_left</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, com_ringbuffer.o(i.ring_buffer_space_left))
<BR><BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_swim_acc_fifo__data
</UL>

<P><STRONG><a name="[8e7]"></a>run_tasks</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, rtos.o(i.run_tasks))
<BR><BR>[Stack]<UL><LI>Max Depth = 660 + Unknown Stack Size
<LI>Call Chain = run_tasks &rArr; task_battery_init &rArr; timer_battery_init &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_init
<LI><a href="#[92b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_init
<LI><a href="#[927]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_init
<LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_init
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_init
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_backlight_init
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_init
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_init
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ble_init
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_battery_init
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_timer_init
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_findwatch_timer_init
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dfu_timer_init
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_timer_init
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_ble_init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateToolTask
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateStepTask
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateKeyTask
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatTimerTask
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatDisplayTask
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[92e]"></a>save_heartrate</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, algo_hdr.o(i.save_heartrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = save_heartrate
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_getHdrValue
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
</UL>

<P><STRONG><a name="[8d9]"></a>save_magn_calibration_paremeter</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, algo_magn_cal.o(i.save_magn_calibration_paremeter))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = save_magn_calibration_paremeter &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
</UL>

<P><STRONG><a name="[270]"></a>search_sport_record</STRONG> (Thumb, 308 bytes, Stack size 48 bytes, com_sport.o(i.search_sport_record))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = search_sport_record &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeSecond
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_delete_btn_evt
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motionsrecord_last_btn_evt
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_longtool_screen
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_monitor_screen
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Home_Index
</UL>

<P><STRONG><a name="[8e6]"></a>semaphore_create</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, rtos.o(i.semaphore_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 508 + Unknown Stack Size
<LI>Call Chain = semaphore_create &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a0]"></a>setOhrcurrent</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, si117x_config.o(i.setOhrcurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = setOhrcurrent &rArr; Si117xParamSet &rArr; _sendCmd &rArr; Si117xWriteToRegister &rArr; drv_i2c_hw1_write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Si117xParamSet
</UL>
<BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartRateMonitor_interrupt_handle
</UL>

<P><STRONG><a name="[12e]"></a>set_cyclingsta</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task_sport.o(i.set_cyclingsta))
<BR><BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSensor
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSport
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSensor
</UL>

<P><STRONG><a name="[87c]"></a>set_enter_trainplan_way</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_trainplan.o(i.set_enter_trainplan_way))
<BR><BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_btn_evt
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_run_select_btn_evt
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_home_today_hint_btn_evt
</UL>

<P><STRONG><a name="[120]"></a>set_filt_stepcount</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, task_step.o(i.set_filt_stepcount))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = set_filt_stepcount
</UL>
<BR>[Calls]<UL><LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_steps
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearStepCount
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayMainData_Init
</UL>

<P><STRONG><a name="[4be]"></a>set_gps_flicker</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_sport.o(i.set_gps_flicker))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
</UL>

<P><STRONG><a name="[125]"></a>set_gps_hint_motor_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, task_gps.o(i.set_gps_hint_motor_flag))
<BR><BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_week_steps_btn_evt
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_week_mileage_btn_evt
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_hint_btn_evt
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_threshold_value_btn_evt
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_value_btn_evt
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_hint_mesuring_btn_evt
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateGPSTask
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseGPSTask
</UL>

<P><STRONG><a name="[687]"></a>set_m_AutoBackScreen</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, com_sport.o(i.set_m_AutoBackScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = set_m_AutoBackScreen &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_data_init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
</UL>

<P><STRONG><a name="[706]"></a>set_m_is_pc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, isr_uart.o(i.set_m_is_pc))
<BR><BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweron
</UL>

<P><STRONG><a name="[3fc]"></a>set_nmea_rmc_data_valid</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, drv_ublox.o(i.set_nmea_rmc_data_valid))
<BR><BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPRMC_Analysis
</UL>

<P><STRONG><a name="[77d]"></a>set_select_monitor_index</STRONG> (Thumb, 80 bytes, Stack size 12 bytes, gui_home.o(i.set_select_monitor_index))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = set_select_monitor_index
</UL>
<BR>[Calls]<UL><LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_custom_monitor
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
</UL>

<P><STRONG><a name="[14c]"></a>set_step_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, algo_step_count.o(i.set_step_status))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DayMainData_Init
</UL>

<P><STRONG><a name="[739]"></a>set_switch_screen_count_evt</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, gui_home.o(i.set_switch_screen_count_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 780<LI>Call Chain = set_switch_screen_count_evt &rArr; get_current_monitor_screen &rArr; Get_TrainPlanDayRecord &rArr; get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_monitor_screen
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_btn_evt
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_btn_evt
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_btn_evt
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_btn_evt
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motionsrecord_last_btn_evt
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_btn_evt
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_average_based_btn_evt
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_sports_foundation_btn_evt
</UL>

<P><STRONG><a name="[861]"></a>set_tool_countdown_index</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_tool_countdown.o(i.set_tool_countdown_index))
<BR><BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_btn_evt
</UL>

<P><STRONG><a name="[600]"></a>set_train_pause_time</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_notify_ble.o(i.set_train_pause_time))
<BR><BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_detail_btn_evt
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_pause_btn_evt
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cast_pause_btn_evt
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_training_cast
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_sport_cast
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_reset
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_disconnect
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_vice_pasue
</UL>

<P><STRONG><a name="[8f8]"></a>sign_sum</STRONG> (Thumb, 240 bytes, Stack size 28 bytes, algo_step_count.o(i.sign_sum))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = sign_sum
</UL>
<BR>[Called By]<UL><LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedometer
</UL>

<P><STRONG><a name="[470]"></a>sport_continue_later_end</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, task_sport.o(i.sport_continue_later_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 612 + Unknown Stack Size
<LI>Call Chain = sport_continue_later_end &rArr; OpenSensor &rArr; ParameterInitialization &rArr; MatCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_back_timer_start
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportContinueLaterFlagClr
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSensor
</UL>
<BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportContinueLaterDisplay
</UL>

<P><STRONG><a name="[7c9]"></a>sport_continue_later_start</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, task_sport.o(i.sport_continue_later_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = sport_continue_later_start &rArr; CloseSensor &rArr; drv_lsm6dsl_acc_init &rArr; drv_lsm6dsl_acc_lowpower &rArr; LSM6DSL_ACC_GYRO_W_LowPower_XL &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_back_timer_delete
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportContinueLaterFlagSet
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSensor
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_pause_btn_evt
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_pause_btn_evt
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_pause_btn_evt
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_pause_btn_evt
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_pause_btn_evt
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_pause_btn_evt
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_pause_btn_evt
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_pause_btn_evt
</UL>

<P><STRONG><a name="[4e0]"></a>sport_cycling_cadence</STRONG> (Thumb, 274 bytes, Stack size 0 bytes, task_sport.o(i.sport_cycling_cadence))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[442]"></a>sport_data_end</STRONG> (Thumb, 2192 bytes, Stack size 56 bytes, task_sport.o(i.sport_data_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 784<LI>Call Chain = sport_data_end &rArr; sport_data_input &rArr; TrackOptimizingDataAccept &rArr; SportsCalculateDistSpeed &rArr; gps_raw_data_rn_receive &rArr; gps_raw_data_process_rn &rArr; calculateDistanceFromPoint &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Timer_Cmd
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DistanceResult
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwimResultsPostProcessing
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_cod_StepData
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_cod_HeartRateData
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_StepData
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_SpeedData
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_HeartRateData
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_GPSData
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_EnergyData
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_DistanceData
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_CircleTimeData
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MeanSpeedResult
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateWalkEnergy
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateSwolf
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateSwimmingEnergy
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateSpeed
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateRunningEnergy
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateOptimumSpeed
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateOptimumPace
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateFrequency_swimming
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateFrequency
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_input
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;marathon_cal_time
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSport
</UL>

<P><STRONG><a name="[4cd]"></a>sport_data_input</STRONG> (Thumb, 184 bytes, Stack size 72 bytes, task_sport.o(i.sport_data_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = sport_data_input &rArr; TrackOptimizingDataAccept &rArr; SportsCalculateDistSpeed &rArr; gps_raw_data_rn_receive &rArr; gps_raw_data_process_rn &rArr; calculateDistanceFromPoint &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsStatus
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsLon
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsLat
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackOptimizingDataAccept
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_data_end
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[7c4]"></a>sport_dottrack</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, gui_sport.o(i.sport_dottrack))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = sport_dottrack &rArr; gui_sport_dot_prompt &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsStatus
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_DotTrack
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_dot_prompt
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_btn_evt
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_btn_evt
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_btn_evt
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_btn_evt
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_btn_evt
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_btn_evt
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_btn_evt
</UL>

<P><STRONG><a name="[507]"></a>sport_over_or_restart</STRONG> (Thumb, 752 bytes, Stack size 32 bytes, algo_trackoptimizing.o(i.sport_over_or_restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = sport_over_or_restart &rArr; GpsDistance &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackOptimizingDataAccept
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nogps_maxgap_init
</UL>

<P><STRONG><a name="[807]"></a>sport_ready_menu</STRONG> (Thumb, 1684 bytes, Stack size 88 bytes, gui_sport.o(i.sport_ready_menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 1452 + Unknown Stack Size
<LI>Call Chain = sport_ready_menu &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsStatus
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_page_up
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_page_down
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_ready_paint
</UL>

<P><STRONG><a name="[827]"></a>sport_triathlon_change_start</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, task_sport.o(i.sport_triathlon_change_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 652 + Unknown Stack Size
<LI>Call Chain = sport_triathlon_change_start &rArr; StartSport &rArr; trace_back_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_SaveSta
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PauseSta
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_start
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_btn_evt
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_second_change_btn_evt
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_first_change_btn_evt
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_btn_evt
</UL>

<P><STRONG><a name="[1dd]"></a>sports_menu_index_record</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, gui_sport.o(i.sports_menu_index_record))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sports_menu_index_record &rArr; Get_Curr_Sport_Index
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Sport_Index
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_btn_evt
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_btn_evt
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportIndexRecAdjust
</UL>

<P><STRONG><a name="[517]"></a>sqrt</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[518]"></a>sqrtf</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, sqrtf.o(i.sqrtf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sqrtf &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acosf
</UL>

<P><STRONG><a name="[551]"></a>staticjudgment_cycling</STRONG> (Thumb, 264 bytes, Stack size 0 bytes, algo_sport_cycling.o(i.staticjudgment_cycling))
<BR><BR>[Called By]<UL><LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_sport_cycling_start
</UL>

<P><STRONG><a name="[474]"></a>staticjudgment_cycling_result</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, algo_sport_cycling.o(i.staticjudgment_cycling_result))
<BR><BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportsCalculateDistSpeed
</UL>

<P><STRONG><a name="[550]"></a>staticjudgment_diff</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, algo_sport_cycling.o(i.staticjudgment_diff))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = staticjudgment_diff
</UL>
<BR>[Called By]<UL><LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_sport_cycling_start
</UL>

<P><STRONG><a name="[8da]"></a>std_seconds_data</STRONG> (Thumb, 328 bytes, Stack size 72 bytes, algo_step_count.o(i.std_seconds_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = std_seconds_data &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;step_count_entrance
</UL>

<P><STRONG><a name="[932]"></a>step_amount_count</STRONG> (Thumb, 386 bytes, Stack size 40 bytes, algo_step_count.o(i.step_amount_count))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = step_amount_count &rArr; pedometer &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedometer
</UL>
<BR>[Called By]<UL><LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;step_count_entrance
</UL>

<P><STRONG><a name="[55f]"></a>step_count_entrance</STRONG> (Thumb, 688 bytes, Stack size 16 bytes, algo_step_count.o(i.step_count_entrance))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = step_count_entrance &rArr; std_seconds_data &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;step_amount_count
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std_seconds_data
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mean_data
<LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;max_min_data
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_swim_acc_fifo__data
</UL>

<P><STRONG><a name="[508]"></a>steps_freq</STRONG> (Thumb, 1206 bytes, Stack size 56 bytes, algo_trackoptimizing.o(i.steps_freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = steps_freq &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackOptimizingDataAccept
</UL>

<P><STRONG><a name="[55b]"></a>system_raiselight_mode_get</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, gui_system.o(i.system_raiselight_mode_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = system_raiselight_mode_get
</UL>
<BR>[Calls]<UL><LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_raiselight_time
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_swim_acc_fifo__data
</UL>

<P><STRONG><a name="[856]"></a>system_silent_mode_clear</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_system.o(i.system_silent_mode_clear))
<BR><BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_silent_time_btn_evt
</UL>

<P><STRONG><a name="[76d]"></a>system_silent_mode_get</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, gui_system.o(i.system_silent_mode_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = system_silent_mode_get
</UL>
<BR>[Calls]<UL><LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_silent_time
</UL>
<BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_widget
</UL>

<P><STRONG><a name="[855]"></a>system_silent_mode_set</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_system.o(i.system_silent_mode_set))
<BR><BR>[Called By]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_silent_time_btn_evt
</UL>

<P><STRONG><a name="[93d]"></a>system_voltage_flag_clear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, drv_battery.o(i.system_voltage_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[6aa]"></a>system_voltage_flag_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, drv_battery.o(i.system_voltage_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_management
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_bat_chg_paint
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_paint
</UL>

<P><STRONG><a name="[6a7]"></a>system_voltage_flag_set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, drv_battery.o(i.system_voltage_flag_set))
<BR><BR>[Called By]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_init
</UL>

<P><STRONG><a name="[92c]"></a>task_battery_init</STRONG> (Thumb, 216 bytes, Stack size 64 bytes, task_battery.o(i.task_battery_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 652 + Unknown Stack Size
<LI>Call Chain = task_battery_init &rArr; timer_battery_init &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_init
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupCreate
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_pc_init
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_battery_init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_tasks
</UL>

<P><STRONG><a name="[88c]"></a>task_ble_info_set</STRONG> (Thumb, 78 bytes, Stack size 72 bytes, gui_watch_info.o(i.task_ble_info_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = task_ble_info_set &rArr; lib_app_data_read &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_app_data_read
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_watch_info_paint
</UL>

<P><STRONG><a name="[693]"></a>task_ble_init</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, task_ble.o(i.task_ble_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 572 + Unknown Stack Size
<LI>Call Chain = task_ble_init &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_init
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_tasks
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_ble_system_on
</UL>

<P><STRONG><a name="[692]"></a>task_ble_uninit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, task_ble.o(i.task_ble_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = task_ble_uninit &rArr; vTaskDelete &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close_on_ble_sys_off
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEventGroupDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_ble_system_off
</UL>

<P><STRONG><a name="[128]"></a>task_hrt_close</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, task_hrt.o(i.task_hrt_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = task_hrt_close &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_irq_disable
<LI><a href="#[948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_hdr_stop
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OHRL_reset
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ohr_timer_stop
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_btn_evt
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_btn_evt
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostHdr_btn_evt
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostHdr_SNR_btn_evt
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_sport_cast
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_rt_data_trans
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_reset
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_disconnect
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSport
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSensor
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_user_sensor_close
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UninitVO2maxMeasing
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_timeout_back
</UL>

<P><STRONG><a name="[55]"></a>task_hrt_handler</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, task_hrt.o(i.task_hrt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = task_hrt_handler &rArr; vTaskNotifyGiveFromISR &rArr; vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_irq_disable
<LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotify
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskNotifyGiveFromISR
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_close
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task_hrt.o(i.task)
</UL>
<P><STRONG><a name="[924]"></a>task_hrt_init</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, task_hrt.o(i.task_hrt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 596 + Unknown Stack Size
<LI>Call Chain = task_hrt_init &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_tasks
</UL>

<P><STRONG><a name="[162]"></a>task_hrt_start</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, task_hrt.o(i.task_hrt_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = task_hrt_start &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[94b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_hdr_start
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_handler
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_ready_btn_evt
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_hdr_time_explain_btn_evt
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_hint_measuring_btn_evt
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_average_based_btn_evt
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostSettings_btn_evt
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_sport_cast
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_rt_data_trans
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_triathlon_change_start
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadySport
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenSensor
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_user_sensor_open
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
</UL>

<P><STRONG><a name="[8ea]"></a>task_ohr_timer_stop</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, task_hrt.o(i.task_ohr_timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = task_ohr_timer_stop &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_close
</UL>

<P><STRONG><a name="[94c]"></a>task_ohrcounter_handler</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, task_hrt.o(i.task_ohrcounter_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = task_ohrcounter_handler &rArr; vTaskNotifyGiveFromISR &rArr; vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotify
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskNotifyGiveFromISR
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_callback
</UL>

<P><STRONG><a name="[93a]"></a>task_pc_init</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, task_pc.o(i.task_pc_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 556 + Unknown Stack Size
<LI>Call Chain = task_pc_init &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_init
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_battery_init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[93c]"></a>task_pc_uninit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, task_pc.o(i.task_pc_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = task_pc_uninit &rArr; drv_pc_uninit &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_uninit
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEventGroupDelete
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[415]"></a>time_notify_is_ok</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, time_notify.o(i.time_notify_is_ok))
<BR><BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_btn_evt
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_delete_btn_evt
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_tools_btn_evt
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_sports_btn_evt
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_mesuring_btn_evt
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_DailyStep
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_DailyKcal
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_training_cast
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_sport_cast
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_reset
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_on_bind_device
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_passkey
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_disconnect
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_connect
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_bond
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_bind_status
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_ios
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_android
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_alarm_handler
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback_remind
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remind_autocircle_display
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_TrainPlan_Complete
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Speed
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Pace_TrainPlan
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Pace
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Heartrate
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_GoalTime
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_GoalKcal
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_GoalDistance
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_GoalCircle
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Altitude
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
</UL>

<P><STRONG><a name="[765]"></a>timer_app_LOCK_start</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, timer_app.o(i.timer_app_LOCK_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_app_LOCK_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_paint
</UL>

<P><STRONG><a name="[77c]"></a>timer_app_LOCK_stop</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, timer_app.o(i.timer_app_LOCK_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_app_LOCK_stop &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
</UL>

<P><STRONG><a name="[178]"></a>timer_app_UNLOCK_HINT_start</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, timer_app.o(i.timer_app_UNLOCK_HINT_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_app_UNLOCK_HINT_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[94e]"></a>timer_app_VO2max_Countdown_start</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, timer_app.o(i.timer_app_VO2max_Countdown_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_app_VO2max_Countdown_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
</UL>

<P><STRONG><a name="[50c]"></a>timer_app_VO2max_Countdown_stop</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, timer_app.o(i.timer_app_VO2max_Countdown_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_app_VO2max_Countdown_stop &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UninitVO2maxMeasing
</UL>

<P><STRONG><a name="[94f]"></a>timer_app_VO2max_start</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, timer_app.o(i.timer_app_VO2max_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_app_VO2max_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
</UL>

<P><STRONG><a name="[50d]"></a>timer_app_VO2max_stop</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, timer_app.o(i.timer_app_VO2max_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_app_VO2max_stop &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UninitVO2maxMeasing
</UL>

<P><STRONG><a name="[386]"></a>timer_app_auto_back_home_start</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, timer_app.o(i.timer_app_auto_back_home_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_app_auto_back_home_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandlerScreenAutoBackHome
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[950]"></a>timer_app_auto_back_home_stop</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, timer_app.o(i.timer_app_auto_back_home_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_app_auto_back_home_stop &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
</UL>

<P><STRONG><a name="[72c]"></a>timer_app_countdown_start</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, timer_app.o(i.timer_app_countdown_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_app_countdown_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_threshold_hint_btn_evt
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_hint_mesuring_btn_evt
</UL>

<P><STRONG><a name="[8ed]"></a>timer_app_countdown_stop</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, timer_app.o(i.timer_app_countdown_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_app_countdown_stop &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
</UL>

<P><STRONG><a name="[94b]"></a>timer_app_hdr_start</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, timer_app.o(i.timer_app_hdr_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_app_hdr_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_start
</UL>

<P><STRONG><a name="[948]"></a>timer_app_hdr_stop</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, timer_app.o(i.timer_app_hdr_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_app_hdr_stop &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_close
</UL>

<P><STRONG><a name="[925]"></a>timer_app_init</STRONG> (Thumb, 414 bytes, Stack size 8 bytes, timer_app.o(i.timer_app_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 588 + Unknown Stack Size
<LI>Call Chain = timer_app_init &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_tasks
</UL>

<P><STRONG><a name="[7c3]"></a>timer_app_pasue_start</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, timer_app.o(i.timer_app_pasue_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_app_pasue_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_pause_btn_evt
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_btn_evt
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_pause_btn_evt
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_btn_evt
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_pause_btn_evt
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_btn_evt
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_pause_hint_btn_evt
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_pause_btn_evt
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_btn_evt
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_pause_btn_evt
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_btn_evt
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_pause_btn_evt
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_btn_evt
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_btn_evt
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_pause_btn_evt
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_btn_evt
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_pause_btn_evt
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_btn_evt
</UL>

<P><STRONG><a name="[951]"></a>timer_app_pasue_stop</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, timer_app.o(i.timer_app_pasue_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_app_pasue_stop &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_pasue
</UL>

<P><STRONG><a name="[38a]"></a>timer_app_sport_record_detail_start</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, timer_app.o(i.timer_app_sport_record_detail_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_app_sport_record_detail_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandlerScreenSportRecord
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback
</UL>

<P><STRONG><a name="[389]"></a>timer_app_sport_record_detail_stop</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, timer_app.o(i.timer_app_sport_record_detail_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_app_sport_record_detail_stop &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEventHandlerScreenSportRecord
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
</UL>

<P><STRONG><a name="[84c]"></a>timer_app_step_calibration_start</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, timer_app.o(i.timer_app_step_calibration_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_app_step_calibration_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_hint_btn_evt
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_btn_evt
</UL>

<P><STRONG><a name="[84e]"></a>timer_app_step_calibration_stop</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, timer_app.o(i.timer_app_step_calibration_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_app_step_calibration_stop &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_week_steps_btn_evt
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_week_mileage_btn_evt
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_show_btn_evt
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
</UL>

<P><STRONG><a name="[276]"></a>timer_app_tool_start</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, timer_app.o(i.timer_app_tool_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_app_tool_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_hdr_time_btn_evt
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_longtool_screen
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_monitor_screen
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Home_Index
</UL>

<P><STRONG><a name="[774]"></a>timer_app_tool_stop</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, timer_app.o(i.timer_app_tool_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_app_tool_stop &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_btn_evt
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
</UL>

<P><STRONG><a name="[8e9]"></a>timer_app_uninit</STRONG> (Thumb, 274 bytes, Stack size 8 bytes, timer_app.o(i.timer_app_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = timer_app_uninit &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
</UL>

<P><STRONG><a name="[633]"></a>timer_app_vice_pasue_start</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, timer_app.o(i.timer_app_vice_pasue_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = timer_app_vice_pasue_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_remind_btn_evt
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_training_cast
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_sport_cast
</UL>

<P><STRONG><a name="[5ff]"></a>timer_app_vice_pasue_stop</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, timer_app.o(i.timer_app_vice_pasue_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_app_vice_pasue_stop &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_detail_btn_evt
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_pause_btn_evt
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cast_pause_btn_evt
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_training_cast
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_sport_cast
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_reset
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_disconnect
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_vice_pasue
</UL>

<P><STRONG><a name="[945]"></a>timer_battery_init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, task_battery.o(i.timer_battery_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 588 + Unknown Stack Size
<LI>Call Chain = timer_battery_init &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_battery_init
</UL>

<P><STRONG><a name="[66d]"></a>timer_battery_start</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, task_battery.o(i.timer_battery_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_battery_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback
</UL>

<P><STRONG><a name="[78b]"></a>timer_battery_stop</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, task_battery.o(i.timer_battery_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 452 + Unknown Stack Size
<LI>Call Chain = timer_battery_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_bat_chg_btn_evt
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[67e]"></a>timer_cod_sensor_start</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, timer_app.o(i.timer_cod_sensor_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_cod_sensor_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_user_sensor_open
</UL>

<P><STRONG><a name="[67a]"></a>timer_cod_sensor_stop</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, timer_app.o(i.timer_cod_sensor_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_cod_sensor_stop &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_user_sensor_close
</UL>

<P><STRONG><a name="[399]"></a>timer_lcd_start</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, timer_app.o(i.timer_lcd_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_lcd_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplaySomeLine
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_disable
</UL>

<P><STRONG><a name="[929]"></a>timer_notify_backlight_init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, time_notify.o(i.timer_notify_backlight_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 588 + Unknown Stack Size
<LI>Call Chain = timer_notify_backlight_init &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_tasks
</UL>

<P><STRONG><a name="[4c5]"></a>timer_notify_backlight_is_enable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, time_notify.o(i.timer_notify_backlight_is_enable))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskKey
</UL>

<P><STRONG><a name="[4c6]"></a>timer_notify_backlight_start</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, time_notify.o(i.timer_notify_backlight_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 468 + Unknown Stack Size
<LI>Call Chain = timer_notify_backlight_start &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskKey
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brighten_screen_entrance
</UL>

<P><STRONG><a name="[4c7]"></a>timer_notify_backlight_stop</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, time_notify.o(i.timer_notify_backlight_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = timer_notify_backlight_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskKey
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brighten_screen_entrance
</UL>

<P><STRONG><a name="[928]"></a>timer_notify_buzzer_init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, time_notify.o(i.timer_notify_buzzer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 588 + Unknown Stack Size
<LI>Call Chain = timer_notify_buzzer_init &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_tasks
</UL>

<P><STRONG><a name="[417]"></a>timer_notify_buzzer_start</STRONG> (Thumb, 336 bytes, Stack size 40 bytes, time_notify.o(i.timer_notify_buzzer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 500 + Unknown Stack Size
<LI>Call Chain = timer_notify_buzzer_start &rArr; timer_notify_buzzer_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_buzzer_enable
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_silent_mode_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_keytone_start
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_btn_evt
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_sport_today_hint_btn_evt
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_run_select_btn_evt
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_home_today_hint_btn_evt
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_btn_evt
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_status_test_evt
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_btn_evt
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_hdr_time_btn_evt
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_mesuring_btn_evt
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskKey
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_track_paint
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_track_paint
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_countdown_finish
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTools
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_DailyStep
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_DailyKcal
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_motor_restart
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_training_cast
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_sport_cast
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_on_bind_device
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_find_watch
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_bind_status
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_ios
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_android
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_start
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback_remind
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remind_autocircle_display
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_TrainPlan_Complete
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Speed
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Pace_TrainPlan
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Pace
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Heartrate
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_GoalTime
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_GoalKcal
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_GoalDistance
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_GoalCircle
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Altitude
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_heartrate_recovery
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_vice_pasue
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notify_low_bat_start
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_track_paint
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_track_paint
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_track_paint
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_track_paint
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_track_paint
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_dot_prompt
</UL>

<P><STRONG><a name="[421]"></a>timer_notify_buzzer_stop</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, time_notify.o(i.timer_notify_buzzer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = timer_notify_buzzer_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_buzzer_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_btn_evt
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_hint_btn_evt
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_sw_hint_btn_evt
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_up_down_btn_evt
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_inter_btn_evt
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_end_remind_btn_evt
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_finish_btn_evt
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_done_hint_btn_evt
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_train_step_btn_evt
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_train_calory_btn_evt
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_time_btn_evt
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_speed_btn_evt
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_pace_btn_evt
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_height_btn_evt
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_distance_btn_evt
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_circle_btn_evt
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_calory_btn_evt
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_autocircle_btn_evt
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_on_bind_device_btn_evt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_locatin_ok_btn_evt
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_heartrate_warning_btn_evt
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_find_watch_btn_evt
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_bind_status_btn_evt
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_app_msg_btn_evt
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_alarm_btn_evt
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_hdr_time_btn_evt
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_bat_low_btn_evt
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_tools_btn_evt
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_sports_btn_evt
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_lactate_eraly_end_hint_btn_evt
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_phone_call_status
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_find_watch
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_passkey
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_disconnect
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_connect
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_bond
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_stop
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_motor_stop
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Heartrate
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_pasue
</UL>

<P><STRONG><a name="[926]"></a>timer_notify_display_init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, time_notify.o(i.timer_notify_display_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 588 + Unknown Stack Size
<LI>Call Chain = timer_notify_display_init &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_tasks
</UL>

<P><STRONG><a name="[179]"></a>timer_notify_display_start</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, time_notify.o(i.timer_notify_display_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 484 + Unknown Stack Size
<LI>Call Chain = timer_notify_display_start &rArr; timer_notify_display_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_btn_evt
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_btn_evt
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_btn_evt
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_delete_btn_evt
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_second_change_btn_evt
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_first_change_btn_evt
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_menu_btn_evt
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_tools_btn_evt
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_sports_btn_evt
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_btn_evt
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_mesuring_btn_evt
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_DailyStep
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_DailyKcal
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_paint
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_training_cast
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_sport_cast
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_on_bind_device
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_find_watch
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_passkey
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_disconnect
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_connect
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_bond
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_bind_status
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_ios
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_android
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remind_autocircle_display
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Speed
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Pace_TrainPlan
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Pace
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Heartrate
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_GoalTime
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_GoalKcal
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_GoalDistance
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_GoalCircle
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Altitude
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notify_low_bat_start
</UL>

<P><STRONG><a name="[41f]"></a>timer_notify_display_stop</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, time_notify.o(i.timer_notify_display_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = timer_notify_display_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_sw_hint_btn_evt
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_up_down_btn_evt
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_inter_btn_evt
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_end_remind_btn_evt
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_done_hint_btn_evt
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_preview_btn_evt
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_invalid_btn_evt
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_success_btn_evt
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_ready_btn_evt
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_ready_btn_evt
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_train_step_btn_evt
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_train_calory_btn_evt
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_time_btn_evt
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_speed_btn_evt
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_pace_btn_evt
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_height_btn_evt
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_distance_btn_evt
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_circle_btn_evt
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_calory_btn_evt
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_autocircle_btn_evt
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_on_bind_device_btn_evt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_locatin_ok_btn_evt
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_heartrate_warning_btn_evt
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_find_watch_btn_evt
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_passkey_btn_evt
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_disconnect_btn_evt
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_connect_btn_evt
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_bond_btn_evt
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_bind_status_btn_evt
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_app_msg_btn_evt
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_alarm_btn_evt
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_hdr_time_btn_evt
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_bat_low_btn_evt
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_lock_hint_btn_evt
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_lactate_eraly_end_hint_btn_evt
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_phone_call_status
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_find_watch
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_alarm_handler
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Heartrate
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_pasue
</UL>

<P><STRONG><a name="[4c4]"></a>timer_notify_keytone_start</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, time_notify.o(i.timer_notify_keytone_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 508 + Unknown Stack Size
<LI>Call Chain = timer_notify_keytone_start &rArr; timer_notify_buzzer_start &rArr; timer_notify_buzzer_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerIsTimerActive
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskKey
</UL>

<P><STRONG><a name="[927]"></a>timer_notify_motor_init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, time_notify.o(i.timer_notify_motor_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 588 + Unknown Stack Size
<LI>Call Chain = timer_notify_motor_init &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_tasks
</UL>

<P><STRONG><a name="[416]"></a>timer_notify_motor_start</STRONG> (Thumb, 336 bytes, Stack size 40 bytes, time_notify.o(i.timer_notify_motor_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 500 + Unknown Stack Size
<LI>Call Chain = timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motor_enable
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_silent_mode_get
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_btn_evt
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_sport_today_hint_btn_evt
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_run_select_btn_evt
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_home_today_hint_btn_evt
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_btn_evt
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_status_test_evt
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_btn_evt
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_mesuring_btn_evt
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskKey
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_track_paint
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_track_paint
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_countdown_finish
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTools
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_DailyStep
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_DailyKcal
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_motor_restart
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_training_cast
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_sport_cast
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_on_bind_device
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_find_watch
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_bind_status
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_ios
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_android
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_start
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback_remind
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remind_autocircle_display
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_TrainPlan_Complete
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Speed
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Pace_TrainPlan
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Pace
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Heartrate
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_GoalTime
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_GoalKcal
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_GoalDistance
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_GoalCircle
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Altitude
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_heartrate_recovery
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_vice_pasue
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notify_low_bat_start
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_track_paint
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_track_paint
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_track_paint
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_track_paint
<LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_track_paint
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_motor_prompt
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_dot_prompt
</UL>

<P><STRONG><a name="[420]"></a>timer_notify_motor_stop</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, time_notify.o(i.timer_notify_motor_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motor_disable
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_btn_evt
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_hint_btn_evt
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_sw_hint_btn_evt
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_up_down_btn_evt
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_inter_btn_evt
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_end_remind_btn_evt
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_finish_btn_evt
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_done_hint_btn_evt
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_train_step_btn_evt
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_train_calory_btn_evt
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_time_btn_evt
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_speed_btn_evt
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_pace_btn_evt
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_height_btn_evt
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_distance_btn_evt
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_circle_btn_evt
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_calory_btn_evt
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_autocircle_btn_evt
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_on_bind_device_btn_evt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_locatin_ok_btn_evt
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_heartrate_warning_btn_evt
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_find_watch_btn_evt
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_bind_status_btn_evt
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_app_msg_btn_evt
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_alarm_btn_evt
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_hdr_time_btn_evt
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_bat_low_btn_evt
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_tools_btn_evt
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_sports_btn_evt
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_lactate_eraly_end_hint_btn_evt
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_phone_call_status
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_find_watch
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_passkey
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_disconnect
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_connect
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_bond
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_stop
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_motor_stop
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Heartrate
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_pasue
</UL>

<P><STRONG><a name="[92b]"></a>timer_notify_remind_init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, time_notify.o(i.timer_notify_remind_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 588 + Unknown Stack Size
<LI>Call Chain = timer_notify_remind_init &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_tasks
</UL>

<P><STRONG><a name="[1d5]"></a>timer_notify_remind_motor_restart</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, time_notify.o(i.timer_notify_remind_motor_restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = timer_notify_remind_motor_restart &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[673]"></a>timer_notify_remind_motor_stop</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, time_notify.o(i.timer_notify_remind_motor_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 468 + Unknown Stack Size
<LI>Call Chain = timer_notify_remind_motor_stop &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback_remind
</UL>

<P><STRONG><a name="[6a0]"></a>timer_notify_remind_start</STRONG> (Thumb, 332 bytes, Stack size 48 bytes, time_notify.o(i.timer_notify_remind_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 548 + Unknown Stack Size
<LI>Call Chain = timer_notify_remind_start &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_alarm_handler
</UL>

<P><STRONG><a name="[7a1]"></a>timer_notify_remind_stop</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, time_notify.o(i.timer_notify_remind_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = timer_notify_remind_stop &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_alarm_btn_evt
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_start
</UL>

<P><STRONG><a name="[8ec]"></a>timer_notify_remind_uninit</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, time_notify.o(i.timer_notify_remind_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 452 + Unknown Stack Size
<LI>Call Chain = timer_notify_remind_uninit &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
</UL>

<P><STRONG><a name="[64c]"></a>timer_notify_rollback</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, time_notify.o(i.timer_notify_rollback))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = timer_notify_rollback &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_find_phone
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback
</UL>

<P><STRONG><a name="[92a]"></a>timer_progress_init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, time_progress.o(i.timer_progress_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 588 + Unknown Stack Size
<LI>Call Chain = timer_progress_init &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_tasks
</UL>

<P><STRONG><a name="[66b]"></a>timer_progress_start</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, time_progress.o(i.timer_progress_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = timer_progress_start &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_btn_evt
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_pause_btn_evt
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_recovery_btn_evt
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_feel_btn_evt
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_utc_get_paint
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_heartrate_recovery
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_init
</UL>

<P><STRONG><a name="[66e]"></a>timer_progress_stop</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, time_progress.o(i.timer_progress_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 452 + Unknown Stack Size
<LI>Call Chain = timer_progress_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_utc_get_btn_evt
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_btn_evt
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_alarm_btn_evt
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback
</UL>

<P><STRONG><a name="[8eb]"></a>timer_progress_uninit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, time_progress.o(i.timer_progress_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 452 + Unknown Stack Size
<LI>Call Chain = timer_progress_uninit &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
</UL>

<P><STRONG><a name="[62e]"></a>timer_rt_cod_start</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, timer_app.o(i.timer_rt_cod_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_rt_cod_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_rt_data_trans
</UL>

<P><STRONG><a name="[62f]"></a>timer_rt_cod_stop</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, timer_app.o(i.timer_rt_cod_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_rt_cod_stop &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_rt_data_trans
</UL>

<P><STRONG><a name="[77e]"></a>timer_timeout_back_start</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, timer_app.o(i.timer_timeout_back_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_timeout_back_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
</UL>

<P><STRONG><a name="[479]"></a>timer_timeout_back_stop</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, timer_app.o(i.timer_timeout_back_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = timer_timeout_back_stop &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_btn_evt
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
</UL>

<P><STRONG><a name="[19c]"></a>tool_ambient_value_get</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, task_tool.o(i.tool_ambient_value_get))
<BR><BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_calibration_btn_evt
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_btn_evt
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[197]"></a>tool_compass_angle_get</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, task_tool.o(i.tool_compass_angle_get))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
</UL>

<P><STRONG><a name="[503]"></a>tool_countdown_finish</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, gui_tool_countdown.o(i.tool_countdown_finish))
<BR><BR>[Stack]<UL><LI>Max Depth = 508 + Unknown Stack Size
<LI>Call Chain = tool_countdown_finish &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_countdown_target_time_get
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTools
</UL>

<P><STRONG><a name="[501]"></a>tool_countdown_real_time_get</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui_tool_countdown.o(i.tool_countdown_real_time_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = tool_countdown_real_time_get &rArr; am_util_stopwatch_elapsed_get &rArr; elapsed_time_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_elapsed_get
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTools
</UL>

<P><STRONG><a name="[502]"></a>tool_countdown_target_time_get</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gui_tool_countdown.o(i.tool_countdown_target_time_get))
<BR><BR>[Called By]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_countdown_finish
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTools
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_time_paint
</UL>

<P><STRONG><a name="[189]"></a>tool_menu_index_record</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, gui_tool.o(i.tool_menu_index_record))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = tool_menu_index_record
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Tool_Index
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayScreen
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ToolIndexRecAdjust
</UL>

<P><STRONG><a name="[4fe]"></a>tool_stopwatch_overtime</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_tool_stopwatch.o(i.tool_stopwatch_overtime))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tool_stopwatch_overtime &rArr; am_util_stopwatch_stop &rArr; am_hal_rtc_time_get
</UL>
<BR>[Calls]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTools
</UL>

<P><STRONG><a name="[4fc]"></a>tool_stopwatch_status_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_tool_stopwatch.o(i.tool_stopwatch_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTools
</UL>

<P><STRONG><a name="[4fd]"></a>tool_stopwatch_time_get</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_tool_stopwatch.o(i.tool_stopwatch_time_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = tool_stopwatch_time_get &rArr; am_util_stopwatch_elapsed_get &rArr; elapsed_time_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_elapsed_get
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTools
</UL>

<P><STRONG><a name="[47a]"></a>tool_task_close</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, task_tool.o(i.tool_task_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = tool_task_close &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_menu_btn_evt
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_btn_evt
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_gps_btn_evt
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_btn_evt
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_exit_btn_evt
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_btn_evt
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_btn_evt
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_btn_evt
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_find_phone
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback
</UL>

<P><STRONG><a name="[956]"></a>tool_task_init</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, task_tool.o(i.tool_task_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = tool_task_init &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[869]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_task_start
</UL>

<P><STRONG><a name="[4a6]"></a>tool_task_start</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, task_tool.o(i.tool_task_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = tool_task_start &rArr; tool_task_init &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[956]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_task_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_menu_btn_evt
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
</UL>

<P><STRONG><a name="[136]"></a>trace_back_timer_delete</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, timer_traceback.o(i.trace_back_timer_delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = trace_back_timer_delete &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cancel_btn_evt
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_continue_later_start
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSportTask
</UL>

<P><STRONG><a name="[47d]"></a>trace_back_timer_start</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, timer_traceback.o(i.trace_back_timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 596 + Unknown Stack Size
<LI>Call Chain = trace_back_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_pause_btn_evt
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_pause_btn_evt
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_pause_btn_evt
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_pause_btn_evt
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_pause_btn_evt
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_pause_btn_evt
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_pause_btn_evt
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_continue_later_end
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
</UL>

<P><STRONG><a name="[46d]"></a>track_bubble_sort</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, algo_trackoptimizing.o(i.track_bubble_sort))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = track_bubble_sort
</UL>
<BR>[Called By]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;minuteMeanSpeedCalculate
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedOptimizingDataCollection
</UL>

<P><STRONG><a name="[5df]"></a>trackjudge</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, algo_trackjudge.o(i.trackjudge))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = trackjudge &rArr; findtrackindex &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findtrackindex
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance5Bit
</UL>
<BR>[Called By]<UL><LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;navi_remaindistance
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_navi_trackjudge
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_back_trackjudge
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back_remaindistance
</UL>

<P><STRONG><a name="[3e4]"></a>transform</STRONG> (Thumb, 636 bytes, Stack size 112 bytes, com_sport.o(i.transform))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = transform &rArr; transformLat &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLon
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLat
<LI><a href="#[8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outOfChina
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMotiontTrail
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreTrackPoint
</UL>

<P><STRONG><a name="[957]"></a>transformLat</STRONG> (Thumb, 1000 bytes, Stack size 104 bytes, com_sport.o(i.transformLat))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = transformLat &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
</UL>

<P><STRONG><a name="[958]"></a>transformLon</STRONG> (Thumb, 972 bytes, Stack size 96 bytes, com_sport.o(i.transformLon))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = transformLon &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
</UL>

<P><STRONG><a name="[8e0]"></a>transpose_m</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, algo_magn_cal.o(i.transpose_m))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = transpose_m &rArr; move_data &rArr; get_pre
</UL>
<BR>[Calls]<UL><LI><a href="#[8ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_data
<LI><a href="#[959]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_next
</UL>
<BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_solve_inverse
</UL>

<P><STRONG><a name="[6eb]"></a>uart0_handler_register</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, isr_uart.o(i.uart0_handler_register))
<BR><BR>[Called By]<UL><LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_init
</UL>

<P><STRONG><a name="[6ed]"></a>uart0_handler_unregister</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, isr_uart.o(i.uart0_handler_unregister))
<BR><BR>[Called By]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_uninit
</UL>

<P><STRONG><a name="[4ba]"></a>ublox_init</STRONG> (Thumb, 372 bytes, Stack size 8 bytes, task_gps.o(i.ublox_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 724 + Unknown Stack Size
<LI>Call Chain = ublox_init &rArr; ublox_start &rArr; agps_lle_import &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_reset_rtc
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweron
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_offline_ephemeris
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_hotstart
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_clodstart
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_VTG
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_RXM_SAVE
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_RMC
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GSV
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GSA
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GNSS
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GLL
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GGA
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_clodstart
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_NMEA_RMC_GSA_GSV
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_GNSS_mode
<LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_start
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
</UL>

<P><STRONG><a name="[60e]"></a>ublox_is_offline_data_in_flash_uptodate</STRONG> (Thumb, 168 bytes, Stack size 40 bytes, drv_ublox.o(i.ublox_is_offline_data_in_flash_uptodate))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = ublox_is_offline_data_in_flash_uptodate &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcToUtc
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeSecond
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_astro_sync_request
</UL>

<P><STRONG><a name="[95a]"></a>ublox_start</STRONG> (Thumb, 1202 bytes, Stack size 56 bytes, task_gps.o(i.ublox_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 716 + Unknown Stack Size
<LI>Call Chain = ublox_start &rArr; agps_lle_import &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_receive_buffered
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweron
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweroff
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_utc_time_set
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_positioning_algo
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_operation_mode
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_idle
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_hotstart
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_clodstart
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_NMEA_RMC_GSA_GSV
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_NMEA_RMC_GSA
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_NMEA_RMC_GGA_GSA
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_NMEA_RMC
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_GNSS_mode
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_lle_import
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_init
</UL>

<P><STRONG><a name="[941]"></a>ulTaskNotifyTake</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, tasks.o(i.ulTaskNotifyTake))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ulTaskNotifyTake &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[68f]"></a>unziphfmex</STRONG> (Thumb, 300 bytes, Stack size 80 bytes, hfma2ylib.o(i.unziphfmex))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;r_dat_bat
</UL>
<BR>[Called By]<UL><LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompressbmp24
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;decompressbmp16
</UL>

<P><STRONG><a name="[8fb]"></a>uxListRemove</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, list.o(i.uxListRemove))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotify
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskNotifyGiveFromISR
<LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromUnorderedEventList
</UL>

<P><STRONG><a name="[973]"></a>uxTaskResetEventItemValue</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tasks.o(i.uxTaskResetEventItemValue))
<BR><BR>[Called By]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
</UL>

<P><STRONG><a name="[91f]"></a>vApplicationMallocFailedHook</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtos.o(i.vApplicationMallocFailedHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 444 + Unknown Stack Size
<LI>Call Chain = vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[95c]"></a>vApplicationStackOverflowHook</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, rtos.o(i.vApplicationStackOverflowHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 984 + Unknown Stack Size
<LI>Call Chain = vApplicationStackOverflowHook &rArr; SaveSport &rArr; sport_data_end &rArr; sport_data_input &rArr; TrackOptimizingDataAccept &rArr; SportsCalculateDistSpeed &rArr; gps_raw_data_rn_receive &rArr; gps_raw_data_process_rn &rArr; calculateDistanceFromPoint &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_power_off_store_set_value
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSport
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetErrCode
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplaySomeLine
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TaskSportSta
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>

<P><STRONG><a name="[946]"></a>vEventGroupDelete</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, event_groups.o(i.vEventGroupDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = vEventGroupDelete &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromUnorderedEventList
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_pc_uninit
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ble_uninit
</UL>

<P><STRONG><a name="[59]"></a>vEventGroupSetBitsCallback</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, event_groups.o(i.vEventGroupSetBitsCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = vEventGroupSetBitsCallback &rArr; xEventGroupSetBits &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSetBits
</UL>
<BR>[Address Reference Count : 4]<UL><LI> task_key.o(i.task_cb)
<LI> task_battery.o(i.task_cb)
<LI> task_pc.o(i.task_cb)
<LI> task_ble.o(i.task_cb)
</UL>
<P><STRONG><a name="[901]"></a>vListInitialise</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, list.o(i.vListInitialise))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupCreate
<LI><a href="#[900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[8ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
<LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>

<P><STRONG><a name="[90e]"></a>vListInitialiseItem</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, list.o(i.vListInitialiseItem))
<BR><BR>[Called By]<UL><LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTimer
<LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[8fd]"></a>vListInsert</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, list.o(i.vListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[911]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[96a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[8fc]"></a>vListInsertEnd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, list.o(i.vListInsertEnd))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotify
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskNotifyGiveFromISR
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromUnorderedEventList
<LI><a href="#[96b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnUnorderedEventList
</UL>

<P><STRONG><a name="[256]"></a>vPortEnterCritical</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, port.o(i.vPortEnterCritical))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_intFlash_write_page
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_intFlash_erase_page
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pon
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_app_ble_dfu_finish
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_boot_jump_to_bootloader
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Reset
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_event_handle
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerIsTimerActive
<LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotify
<LI><a href="#[941]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulTaskNotifyTake
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTimerGetTimerID
<LI><a href="#[900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[913]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[6ce]"></a>vPortExitCritical</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, port.o(i.vPortExitCritical))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_intFlash_write_page
<LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_intFlash_erase_page
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerIsTimerActive
<LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotify
<LI><a href="#[941]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulTaskNotifyTake
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTimerGetTimerID
<LI><a href="#[900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[913]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[3ea]"></a>vPortFree</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, heap_2.o(i.vPortFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEventGroupDelete
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extFlash_sector
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_solve_inverse
<LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_solve
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_ellipsoid
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evector_judge
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatDelete
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatCreate
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;median(float*, int)
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BR_Only_omega_x_a_z_DynamicBoundForDurationTest(BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, int*, int*, int*, int*, bool*, float*, float*, float*)
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Average_acc_z_Peak_Valley(BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, bool*)
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveOutliers(float*, int, bool*, int*)
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[905]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
</UL>

<P><STRONG><a name="[95f]"></a>vPortSetupTimerInterrupt</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, port.o(i.vPortSetupTimerInterrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vPortSetupTimerInterrupt &rArr; am_hal_stimer_compare_delta_set
</UL>
<BR>[Calls]<UL><LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_priority_set
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_enable
<LI><a href="#[960]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_stimer_int_enable
<LI><a href="#[961]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_stimer_config
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_stimer_compare_delta_set
</UL>
<BR>[Called By]<UL><LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[90a]"></a>vPortSuppressTicksAndSleep</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, port.o(i.vPortSuppressTicksAndSleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = vPortSuppressTicksAndSleep &rArr; am_freertos_sleep &rArr; am_hal_sysctrl_sleep &rArr; am_hal_ctimer_period_set
</UL>
<BR>[Calls]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_sysctrl_sleep
<LI><a href="#[964]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_freertos_wakeup
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_freertos_sleep
<LI><a href="#[965]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStepTick
<LI><a href="#[963]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;eTaskConfirmSleepModeStatus
<LI><a href="#[962]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_stimer_counter_get
<LI><a href="#[961]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_stimer_config
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_stimer_compare_delta_set
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[966]"></a>vPortValidateInterruptPriority</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, port.o(i.vPortValidateInterruptPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[967]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortGetIPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskNotifyGiveFromISR
</UL>

<P><STRONG><a name="[918]"></a>vQueueWaitForMessageRestricted</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, queue.o(i.vQueueWaitForMessageRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = vQueueWaitForMessageRestricted &rArr; vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[4b4]"></a>vTaskDelay</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, tasks.o(i.vTaskDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_init
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ble_init
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;whether_lcd_te_high
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_lcd_te_high
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_lcd_light_te_high
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_reset_rtc
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_offline_ephemeris
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_hotstart
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_clodstart
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_VTG
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_RXM_SAVE
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_RMC
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_REVERT
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GSV
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GSA
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GNSS
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GLL
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GGA
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_btn_evt
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_detail_btn_evt
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_menu_btn_evt
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_btn_evt
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_real_time_log_trains
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_findwatch_response
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_send_gps_test_data
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_accessory_data_upload
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_app_ble_dfu_finish
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_app_ble_dfu_apollo_reset_n_activate
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_mac_write
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_mac_read
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_enable
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_compass_enable
<LI><a href="#[8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_rssi_read_stop
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_rssi_read
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_info_read
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_extflash_read
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_event_handle
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_triathlon_change_start
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_sport_ctrl
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_sensor_data_trains
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_on_bind_device
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_phone_call_ctrl
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_cod
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_timer_start
</UL>

<P><STRONG><a name="[13a]"></a>vTaskDelete</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, tasks.o(i.vTaskDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = vTaskDelete &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[905]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_pc_uninit
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStep
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseStepTask
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ble_uninit
</UL>

<P><STRONG><a name="[91d]"></a>vTaskMissedYield</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tasks.o(i.vTaskMissedYield))
<BR><BR>[Called By]<UL><LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[949]"></a>vTaskNotifyGiveFromISR</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, tasks.o(i.vTaskNotifyGiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = vTaskNotifyGiveFromISR &rArr; vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[966]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ohrcounter_handler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_handler
</UL>

<P><STRONG><a name="[96a]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, tasks.o(i.vTaskPlaceOnEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[968]"></a>vTaskPlaceOnEventListRestricted</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, tasks.o(i.vTaskPlaceOnEventListRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[96b]"></a>vTaskPlaceOnUnorderedEventList</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, tasks.o(i.vTaskPlaceOnUnorderedEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vTaskPlaceOnUnorderedEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
</UL>

<P><STRONG><a name="[96c]"></a>vTaskPriorityInherit</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, tasks.o(i.vTaskPriorityInherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vTaskPriorityInherit
</UL>
<BR>[Calls]<UL><LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[13f]"></a>vTaskResume</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, tasks.o(i.vTaskResume))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vTaskResume &rArr; prvTaskIsTaskSuspended
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[96d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTaskIsTaskSuspended
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateGPSTask
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatSportTask
</UL>

<P><STRONG><a name="[977]"></a>vTaskSetTimeOutState</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, tasks.o(i.vTaskSetTimeOutState))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
</UL>

<P><STRONG><a name="[92d]"></a>vTaskStartScheduler</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, tasks.o(i.vTaskStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 572 + Unknown Stack Size
<LI>Call Chain = vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[96e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[96f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>
<BR>[Called By]<UL><LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_tasks
</UL>

<P><STRONG><a name="[965]"></a>vTaskStepTick</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, tasks.o(i.vTaskStepTick))
<BR><BR>[Called By]<UL><LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSuppressTicksAndSleep
</UL>

<P><STRONG><a name="[4b8]"></a>vTaskSuspend</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, tasks.o(i.vTaskSuspend))
<BR><BR>[Stack]<UL><LI>Max Depth = 1016 + Unknown Stack Size
<LI>Call Chain = vTaskSuspend &rArr; vTaskSwitchContext &rArr; vApplicationStackOverflowHook &rArr; SaveSport &rArr; sport_data_end &rArr; sport_data_input &rArr; TrackOptimizingDataAccept &rArr; SportsCalculateDistSpeed &rArr; gps_raw_data_rn_receive &rArr; gps_raw_data_process_rn &rArr; calculateDistanceFromPoint &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStep
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
</UL>

<P><STRONG><a name="[903]"></a>vTaskSuspendAll</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tasks.o(i.vTaskSuspendAll))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEventGroupDelete
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSetBits
</UL>

<P><STRONG><a name="[91]"></a>vTaskSwitchContext</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, tasks.o(i.vTaskSwitchContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 1000 + Unknown Stack Size
<LI>Call Chain = vTaskSwitchContext &rArr; vApplicationStackOverflowHook &rArr; SaveSport &rArr; sport_data_end &rArr; sport_data_input &rArr; TrackOptimizingDataAccept &rArr; SportsCalculateDistSpeed &rArr; gps_raw_data_rn_receive &rArr; gps_raw_data_process_rn &rArr; calculateDistanceFromPoint &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[95c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationStackOverflowHook
</UL>
<BR>[Called By]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_pendsv_isr
</UL>

<P><STRONG><a name="[6d3]"></a>wait_lcd_light_te_high</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, drv_lcd.o(i.wait_lcd_light_te_high))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = wait_lcd_light_te_high &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_enable
</UL>

<P><STRONG><a name="[396]"></a>wait_lcd_te_high</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, drv_lcd.o(i.wait_lcd_te_high))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = wait_lcd_te_high &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplaySomeLine
</UL>

<P><STRONG><a name="[3a0]"></a>whether_lcd_te_high</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, drv_lcd.o(i.whether_lcd_te_high))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = whether_lcd_te_high &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[144]"></a>xEventGroupCreate</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, event_groups.o(i.xEventGroupCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = xEventGroupCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[901]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ble_init
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_battery_init
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateKeyTask
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_pc_init
</UL>

<P><STRONG><a name="[95e]"></a>xEventGroupSetBits</STRONG> (Thumb, 170 bytes, Stack size 48 bytes, event_groups.o(i.xEventGroupSetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = xEventGroupSetBits &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[95d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromUnorderedEventList
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEventGroupSetBitsCallback
</UL>

<P><STRONG><a name="[4c3]"></a>xEventGroupWaitBits</STRONG> (Thumb, 262 bytes, Stack size 64 bytes, event_groups.o(i.xEventGroupWaitBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = xEventGroupWaitBits &rArr; vTaskPlaceOnUnorderedEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[96b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnUnorderedEventList
<LI><a href="#[973]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskResetEventItemValue
<LI><a href="#[972]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTestWaitCondition
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskKey
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[96f]"></a>xPortStartScheduler</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, port.o(i.xPortStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = xPortStartScheduler &rArr; vPortSetupTimerInterrupt &rArr; am_hal_stimer_compare_delta_set
</UL>
<BR>[Calls]<UL><LI><a href="#[95f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
<LI><a href="#[974]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvEnableVFP
<LI><a href="#[975]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvStartFirstTask
</UL>
<BR>[Called By]<UL><LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[5c3]"></a>xPortStimerTickHandler</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, port.o(i.xPortStimerTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xPortStimerTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[961]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_stimer_config
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_stimer_compare_delta_set
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_stimer_cmpr0_isr
</UL>

<P><STRONG><a name="[4fa]"></a>xQueueCreateCountingSemaphore</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, queue.o(i.xQueueCreateCountingSemaphore))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTools
</UL>

<P><STRONG><a name="[13d]"></a>xQueueGenericCreate</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, queue.o(i.xQueueGenericCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 500 + Unknown Stack Size
<LI>Call Chain = xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateStepTask
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatTimerTask
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatDisplayTask
<LI><a href="#[8e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;semaphore_create
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_data_init
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateGPSTask
<LI><a href="#[900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
</UL>

<P><STRONG><a name="[4a3]"></a>xQueueGenericReceive</STRONG> (Thumb, 392 bytes, Stack size 56 bytes, queue.o(i.xQueueGenericReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = xQueueGenericReceive &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[96c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[96a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[976]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTaskIncrementMutexHeldCount
<LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[906]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_enable
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_enable
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_enable
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_enable
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_disable
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_enable
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_enable
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_utc_time_set
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_positioning_algo
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_operation_mode
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_idle
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_hotstart
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_clodstart
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_backup_data_save
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_NMEA_RMC_GSA_GSV
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_NMEA_RMC_GSA
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_NMEA_RMC_GGA_GSA
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_NMEA_RMC
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_GNSS_mode
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rtc_i2c_enable
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_enable
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTools
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStep
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_start
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_init
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_write
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_search
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_footer
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_erase
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_set_lle_check
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_lle_import
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_enable
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSport
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[90c]"></a>xQueueGenericReset</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, queue.o(i.xQueueGenericReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[901]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
</UL>

<P><STRONG><a name="[124]"></a>xQueueGenericSend</STRONG> (Thumb, 348 bytes, Stack size 56 bytes, queue.o(i.xQueueGenericSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[978]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[96a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[913]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ble_init
<LI><a href="#[8e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;semaphore_create
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_disable
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_disable
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_disable
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_init
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_disable
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_disable
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_disable
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_disable
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_watch_info_btn_evt
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_detail_btn_evt
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_btn_evt
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_hint_btn_evt
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_btn_evt
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_sw_hint_btn_evt
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_sport_today_hint_btn_evt
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_run_select_btn_evt
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_up_down_btn_evt
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_pace_inter_btn_evt
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_is_complete_btn_evt
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_home_today_hint_btn_evt
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_remind_btn_evt
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_pause_btn_evt
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_end_remind_btn_evt
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_btn_evt
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_record_btn_evt
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_menu_btn_evt
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_btn_evt
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_gps_btn_evt
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_btn_evt
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_time_btn_evt
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_setting_btn_evt
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_menu_btn_evt
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_finish_btn_evt
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_countdown_exit_btn_evt
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_cali_btn_evt
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_btn_evt
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_btn_evt
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_btn_evt
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_btn_evt
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_pressure_btn_evt
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_menu_btn_evt
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_btn_evt
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_calibration_btn_evt
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_btn_evt
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_utc_get_btn_evt
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_realtime_difftime_evt
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_done_hint_btn_evt
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_status_test_evt
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_calibration_realtime_test_evt
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_btn_evt
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_time_btn_evt
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_sound_N_viberate_btn_evt
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_repition_btn_evt
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_btn_evt
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_btn_evt
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_preview_btn_evt
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_invalid_btn_evt
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_btn_evt
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_success_btn_evt
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_btn_evt
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_sound_btn_evt
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_silent_btn_evt
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_language_btn_evt
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_btn_evt
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_base_heartrate_btn_evt
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_backlight_btn_evt
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_autolight_btn_evt
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_week_steps_btn_evt
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_week_mileage_btn_evt
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_show_btn_evt
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_hint_btn_evt
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_confirm_save_btn_evt
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_btn_evt
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_detail_btn_evt
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_delete_btn_evt
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_btn_evt
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_pause_btn_evt
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_btn_evt
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_cancel_btn_evt
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_btn_evt
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_second_change_btn_evt
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_ready_btn_evt
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_btn_evt
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_ready_btn_evt
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_pause_btn_evt
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_first_change_btn_evt
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_btn_evt
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_ready_btn_evt
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_btn_evt
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cancel_btn_evt
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_pause_btn_evt
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_detail_btn_evt
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_cancel_btn_evt
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_pause_btn_evt
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_detail_btn_evt
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_cancel_btn_evt
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_pause_btn_evt
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_btn_evt
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_cancel_btn_evt
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_pause_btn_evt
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_btn_evt
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_cancel_btn_evt
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_pause_btn_evt
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_detail_btn_evt
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_cancel_btn_evt
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_pause_btn_evt
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_btn_evt
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_cancel_btn_evt
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_btn_evt
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_pause_btn_evt
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_detail_btn_evt
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_cancel_btn_evt
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_pause_btn_evt
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_detail_btn_evt
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_cancel_btn_evt
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cast_pause_btn_evt
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_btn_evt
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_recovery_time_btn_evt
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_watch_info_btn_evt
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_gps_evt
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_gps_details_evt
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_post_auto_back_home_btn_evt
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_train_step_btn_evt
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_train_calory_btn_evt
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_time_btn_evt
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_speed_btn_evt
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_pace_btn_evt
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_height_btn_evt
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_distance_btn_evt
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_circle_btn_evt
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_calory_btn_evt
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_autocircle_btn_evt
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_on_bind_device_btn_evt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_locatin_ok_btn_evt
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_heartrate_warning_btn_evt
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_find_watch_btn_evt
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_passkey_btn_evt
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_disconnect_btn_evt
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_connect_btn_evt
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_ble_bond_btn_evt
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_bind_status_btn_evt
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_app_msg_btn_evt
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_alarm_btn_evt
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_info_btn_evt
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_btn_evt
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_btn_evt
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motionsrecord_last_btn_evt
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_detail_btn_evt
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_hdr_time_explain_btn_evt
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_hdr_time_btn_evt
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_bat_low_btn_evt
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_monitor_bat_chg_btn_evt
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_menu_btn_evt
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_threshold_value_btn_evt
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_threshold_hint_btn_evt
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_lock_hint_btn_evt
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_home_btn_evt
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_stable_btn_evt
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_hint_measuring_btn_evt
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_btn_evt
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_average_based_btn_evt
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_end_unfinished_sport_hint_btn_evt
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_tools_hint_btn_evt
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_tools_btn_evt
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_sports_btn_evt
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_week_sports_btn_evt
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_sports_foundation_btn_evt
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_running_btn_evt
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_heartrate_btn_evt
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_cycling_wheel_btn_evt
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_cycling_cadence_btn_evt
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_btn_evt
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_value_btn_evt
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_mesuring_btn_evt
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_lactate_eraly_end_hint_btn_evt
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_hint_mesuring_btn_evt
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostSettings_btn_evt
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostHdr_btn_evt
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPostHdr_SNR_btn_evt
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskKey
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_rtc_i2c_disable
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_disable
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsTrack
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_task_close
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTools
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_DailyStep
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_DailyKcal
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTimer
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskStep
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_task_start
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Timer_Cmd
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDisplay
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[95a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_start
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;agps_lle_import
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseGPSTask
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_presonse_application_ble_info
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_notify_switch
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_weather_info_request
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_update_bp_start
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_update_bp_finish
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_training_cast
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_sport_cast
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_reset
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_phone_call_status
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_on_bind_device
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_face_finish
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_find_watch
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_dev_name_update
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_current_time_write
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_passkey
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_disconnect
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_connect
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_bond
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_bind_status
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_ios
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_android
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_accessory_running_disconnect
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_accessory_running_connect
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_accessory_heartrate_disconnect
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_accessory_heartrate_connect
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_accessory_cycling_disconnect
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_accessory_cycling_connect
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_app_ble_dfu_start
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_mode_enable
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_mode_disable
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_alarm_handler
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_disable
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback_remind
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback_display
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remind_autocircle_display
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_TrainPlan_Complete
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Speed
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Pace_TrainPlan
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Pace
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Heartrate
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_GoalTime
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_GoalKcal
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_GoalDistance
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_GoalCircle
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Remind_Altitude
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_triathlon_change_start
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseSportTask
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_rollback
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_user_sensor_open
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_vice_pasue
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_timeout_back
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback_pasue
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTimerCallback
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportContinueLaterDisplay
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateToolDisplay
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateSportDisplay
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_switch_screen_count_evt
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notify_low_bat_start
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback
</UL>

<P><STRONG><a name="[108]"></a>xQueueGenericSendFromISR</STRONG> (Thumb, 194 bytes, Stack size 40 bytes, queue.o(i.xQueueGenericSendFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[966]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_clkgen_isr
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTimerB2TickHandler
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[947]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerPendFunctionCallFromISR
</UL>

<P><STRONG><a name="[567]"></a>xQueueGiveFromISR</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, queue.o(i.xQueueGiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[966]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_clkgen_isr
</UL>

<P><STRONG><a name="[978]"></a>xTaskCheckForTimeOut</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, tasks.o(i.xTaskCheckForTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskCheckForTimeOut
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[977]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[13c]"></a>xTaskCreate</STRONG> (Thumb, 96 bytes, Stack size 72 bytes, tasks.o(i.xTaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 540 + Unknown Stack Size
<LI>Call Chain = xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>
<BR>[Called By]<UL><LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_init
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ble_init
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_battery_init
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateToolTask
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateStepTask
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateKeyTask
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatTimerTask
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatDisplayTask
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_pc_init
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateGPSTask
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreatSportTask
<LI><a href="#[96e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[94a]"></a>xTaskGenericNotify</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, tasks.o(i.xTaskGenericNotify))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xTaskGenericNotify
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ohrcounter_handler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_handler
</UL>

<P><STRONG><a name="[971]"></a>xTaskGetSchedulerState</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetSchedulerState))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
</UL>

<P><STRONG><a name="[675]"></a>xTaskGetTickCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetTickCount))
<BR><BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_lcd_start
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charging_timer_start
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_sport_record_detail_start
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_auto_back_home_start
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_UNLOCK_HINT_start
<LI><a href="#[94b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_hdr_start
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_back_timer_start
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_rt_cod_start
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cod_sensor_start
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_vice_pasue_start
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeout_back_start
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_tool_start
<LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_step_calibration_start
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_pasue_start
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_countdown_start
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_VO2max_start
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_VO2max_Countdown_start
<LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_LOCK_start
<LI><a href="#[916]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[5c4]"></a>xTaskIncrementTick</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, tasks.o(i.xTaskIncrementTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStimerTickHandler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_systick_isr
</UL>

<P><STRONG><a name="[908]"></a>xTaskPriorityDisinherit</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, tasks.o(i.xTaskPriorityDisinherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>

<P><STRONG><a name="[91c]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, tasks.o(i.xTaskRemoveFromEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[95d]"></a>xTaskRemoveFromUnorderedEventList</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, tasks.o(i.xTaskRemoveFromUnorderedEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskRemoveFromUnorderedEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEventGroupDelete
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSetBits
</UL>

<P><STRONG><a name="[904]"></a>xTaskResumeAll</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, tasks.o(i.xTaskResumeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[969]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEventGroupDelete
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[95e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSetBits
</UL>

<P><STRONG><a name="[674]"></a>xTimerCreate</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, timers.o(i.xTimerCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 580 + Unknown Stack Size
<LI>Call Chain = xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_init
<LI><a href="#[92b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_init
<LI><a href="#[927]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_init
<LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_init
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_init
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_backlight_init
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_init
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_init
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_timer_init
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_findwatch_timer_init
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dfu_timer_init
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_timer_init
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charging_timer_start
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_battery_init
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_back_timer_start
</UL>

<P><STRONG><a name="[96e]"></a>xTimerCreateTimerTask</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, timers.o(i.xTimerCreateTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 556 + Unknown Stack Size
<LI>Call Chain = xTimerCreateTimerTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[66f]"></a>xTimerGenericCommand</STRONG> (Thumb, 110 bytes, Stack size 48 bytes, timers.o(i.xTimerGenericCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[971]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
</UL>
<BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_lcd_start
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_timer_uninit
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_timer_stop
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_timer_start
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_battery_start
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charging_timer_start
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charging_timer_delete
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_backlight_stop
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_sport_record_detail_stop
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_sport_record_detail_start
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_auto_back_home_start
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_findwatch_timer_start
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_battery_stop
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_UNLOCK_HINT_start
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_start
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_backlight_start
<LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_uninit
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_stop
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback_remind
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback_motor
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback_display
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;callback_buzzer
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_uninit
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_stop
<LI><a href="#[948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_hdr_stop
<LI><a href="#[94b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_hdr_start
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ohr_timer_stop
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ohr_timer_start
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_back_timer_start
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_back_timer_delete
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeout_back_stop
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_start
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_rt_cod_stop
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_rt_cod_start
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cod_sensor_stop
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_cod_sensor_start
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_vice_pasue_stop
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_vice_pasue_start
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_timer_stop
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_findwatch_timer_stop
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dfu_timer_stop
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dfu_timer_start
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeout_back_start
<LI><a href="#[8e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_uninit
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_tool_stop
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_tool_start
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_step_calibration_stop
<LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_step_calibration_start
<LI><a href="#[951]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_pasue_stop
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_pasue_start
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_countdown_stop
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_countdown_start
<LI><a href="#[950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_auto_back_home_stop
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_VO2max_stop
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_VO2max_start
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_VO2max_Countdown_stop
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_VO2max_Countdown_start
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_LOCK_stop
<LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_LOCK_start
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_timer_start
<LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
</UL>

<P><STRONG><a name="[954]"></a>xTimerIsTimerActive</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, timers.o(i.xTimerIsTimerActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTimerIsTimerActive
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_keytone_start
</UL>

<P><STRONG><a name="[947]"></a>xTimerPendFunctionCallFromISR</STRONG> (Thumb, 48 bytes, Stack size 40 bytes, timers.o(i.xTimerPendFunctionCallFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = xTimerPendFunctionCallFromISR &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_cb
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_cb
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_cb
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_cb
</UL>

<P><STRONG><a name="[85]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[3a]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[51e]"></a>__aeabi_dneg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basic.o(x$fpl$basic))
<BR><BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_ellipsoid
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evector_judge
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evalue_judge
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log10
</UL>

<P><STRONG><a name="[9db]"></a>_dneg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[9dc]"></a>__aeabi_fneg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[9dd]"></a>_fneg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[9de]"></a>_dabs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[9df]"></a>_fabs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[11a]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_to_batt_voltage
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_rel_altitude
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_altitude_to_press
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brighten_screen_entrance
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_swim_acc_fifo__data
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_store_gpsdata
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackOptimizingDataAccept
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateVO2max
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_cal_auto
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_four_point
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_point_dis
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrokeStyleIdentification
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_rn_data_sm_receive
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateDistanceFromPoint
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportsCalculateDistSpeed
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedOptimizingDataCollection
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;median(float*, int)
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BR_Only_omega_x_a_z_DynamicBoundForDurationTest(BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, int*, int*, int*, int*, bool*, float*, float*, float*)
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std_seconds_data
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedometer
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mean_data
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getangle
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findtrackindex
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance5Bit
</UL>

<P><STRONG><a name="[979]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[a7]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_circle_point
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_voltage_to_percent_charge
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_base_heartrate
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_two
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_one
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_2_paint
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_1_paint
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cycling_sport_detail_2_paint
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_sport_detail_2_paint
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_gyro_sensitivity_conv
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_acc_sensitivity_conv
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_gps_paint
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_silent_time_paint
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_autolight_time_paint
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_store_gpsdata
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveGpsToXY
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateRunningEnergy
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateMountaineeringEnergy
<LI><a href="#[8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;min_track_mark
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clactate_threshold_value_title_paint
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_value_paint
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_gauss_point_get
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_save_detail_1_paint
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_2_paint
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_1_paint
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_2_paint
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_1_paint
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_ellipsoid
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evector_judge
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evalue_judge
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VecMagnitude
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_hike_detail_1_paint
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_2_paint
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_1_paint
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_2_paint
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_1_paint
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hdr_range
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_track_mark
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_ready_menu
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_walk_detail_1_paint
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_2_paint
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_1_paint
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_2_paint
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_1_paint
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_2_paint
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_1_paint
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_freq
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kalmanFilter
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_rn_data_sm_receive
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateDistanceFromPoint
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportsCalculateDistSpeed
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance
<LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLon
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLat
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadGpsToXY
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawViewTrack
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLoadViewTrack
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std_seconds_data
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mean_data
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getangle
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findtrackindex
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance5Bit
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_round
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log10
</UL>

<P><STRONG><a name="[97c]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[97f]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>

<P><STRONG><a name="[983]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[986]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[982]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[10d]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_voltage_to_percent_release
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_voltage_to_percent_charge
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_to_batt_voltage
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_altitude_to_press
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMotiontTrail
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackOptimizingDataAccept
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreTrackPoint
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveGpsToXY
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateSwimmingEnergy
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateSpeed
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateMountaineeringEnergy
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateFrequency_swimming
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_7
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_1
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clactate_threshold_value_title_paint
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_value_paint
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sidebar_step_paint
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_histogram_step_paint
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_gauss_point_get
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_gauss_init
<LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_solve
<LI><a href="#[8dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_descomposition
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_ellipsoid
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evector_judge
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evalue_judge
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitialPreparationForLengthCount
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_four_bar_display_paint
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_freq
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kalmanFilter
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_rn_data_sm_receive
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_raw_data_rn_receive
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateDistanceFromPoint
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportsCalculateDistSpeed
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance
<LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLon
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLat
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadGpsToXY
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;median(float*, int)
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BR_Only_omega_x_a_z_DynamicBoundForDurationTest(BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, int*, int*, int*, int*, bool*, float*, float*, float*)
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std_seconds_data
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mean_data
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Degree2Rad
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getangle
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance5Bit
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[981]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[292]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[8dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_descomposition
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evalue_judge
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kalmanfilter_path
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kalmanFilterPoint
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateDistanceFromPoint
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getangle
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
</UL>

<P><STRONG><a name="[982]"></a>_dcmpeq</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[983]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[a8]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_title_paint
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMotiontTrail
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreTrackPoint
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateMountaineeringEnergy
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_histogram_step_paint
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_gauss_init
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_over_or_restart
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_sm_data_kf_receive
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_distance_cal
<LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLon
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLat
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[984]"></a>_dfix</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[10f]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_circle_point
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture_ExtFlash
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber_ExtFlash
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChinese
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChar
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_voltage_to_percent_release
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_voltage_to_percent_charge
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_base_heartrate
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_two
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_one
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_2_paint
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_1_paint
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cycling_sport_detail_2_paint
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_sport_detail_2_paint
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_gyro_sensitivity_conv
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_acc_sensitivity_conv
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_silent_time_paint
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_autolight_time_paint
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_heart_paint
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_bar_display_paint
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_rest_heartrate
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveGpsToXY
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateWalkEnergy
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateSwimmingEnergy
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateSpeed
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateRunningEnergy
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateRecoveryTime
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateFrequency_swimming
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_7
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_6
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_5
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_4
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_3
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_1
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clactate_threshold_value_title_paint
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_value_paint
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sidebar_step_paint
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_histogram_step_paint
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_wave_paint
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_gauss_number_get
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_save_detail_1_paint
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_2_paint
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_1_paint
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_2_paint
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_1_paint
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_hike_detail_1_paint
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_2_paint
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_1_paint
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_2_paint
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_1_paint
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_ready_menu
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_walk_detail_1_paint
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_2_paint
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_1_paint
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_2_paint
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_1_paint
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_2_paint
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_1_paint
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_four_bar_display_paint
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_freq
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadGpsToXY
</UL>

<P><STRONG><a name="[985]"></a>_dfixu</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[a9]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_voltage_to_percent_release
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_voltage_to_percent_charge
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_base_heartrate
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_title_paint
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMotiontTrail
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_gyro_sensitivity_conv
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_acc_sensitivity_conv
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_store_gpsdata
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackOptimizingDataAccept
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreTrackPoint
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveGpsToXY
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clactate_threshold_value_title_paint
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_value_paint
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_gauss_init
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitialPreparationForLengthCount
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hdr_range
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_track_mark
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_ready_menu
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_four_bar_display_paint
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_rn_data_sm_receive
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_raw_data_rn_receive
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportsCalculateDistSpeed
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance
<LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLon
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLat
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadGpsToXY
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawViewTrack
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLoadViewTrack
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BR_Only_omega_x_a_z_DynamicBoundForDurationTest(BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, int*, int*, int*, int*, bool*, float*, float*, float*)
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std_seconds_data
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getangle
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log10
</UL>

<P><STRONG><a name="[9e0]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[9d]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_circle_point
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber_ExtFlash
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_voltage_to_percent_release
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_voltage_to_percent_charge
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_to_batt_voltage
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_base_heartrate
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_two
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_one
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_2_paint
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_1_paint
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cycling_sport_detail_2_paint
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_sport_detail_2_paint
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_training_cast_title_paint
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_silent_time_paint
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_autolight_time_paint
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_heart_paint
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_bar_display_paint
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_rest_heartrate
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackOptimizingDataAccept
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateWalkEnergy
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateSpeed
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateRunningEnergy
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateRecoveryTime
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateMountaineeringEnergy
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateFrequency_swimming
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_VO2max_range
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateVO2max
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clactate_threshold_value_title_paint
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_value_paint
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sidebar_step_paint
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_histogram_step_paint
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_wave_paint
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_save_detail_1_paint
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_2_paint
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_1_paint
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_2_paint
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_1_paint
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_hike_detail_1_paint
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_2_paint
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_1_paint
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_2_paint
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_1_paint
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hdr_range
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_walk_detail_1_paint
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_2_paint
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_1_paint
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_2_paint
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_1_paint
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_2_paint
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_1_paint
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_four_bar_display_paint
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_freq
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_rn_data_sm_receive
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportsCalculateDistSpeed
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std_seconds_data
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedometer
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mean_data
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compareAxis
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[9e1]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[3e2]"></a>__aeabi_ul2d</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dfltll_clz.o(x$fpl$dfltull))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_ul2d
</UL>
<BR>[Called By]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveGpsToXY
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadGpsToXY
</UL>

<P><STRONG><a name="[9e2]"></a>_ll_uto_d</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, dfltll_clz.o(x$fpl$dfltull), UNUSED)

<P><STRONG><a name="[aa]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brighten_screen_entrance
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_store_gpsdata
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_VO2max_range
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_ellipsoid
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evalue_judge
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hdr_range
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_track_mark
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateDistanceFromPoint
<LI><a href="#[8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outOfChina
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawViewTrack
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLoadViewTrack
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getangle
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_round
</UL>

<P><STRONG><a name="[986]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[983]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[989]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[988]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[a4]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_circle_point
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber_ExtFlash
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_voltage_to_percent_release
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_voltage_to_percent_charge
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_to_batt_voltage
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_rel_altitude
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_altitude_to_press
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_base_heartrate
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMotiontTrail
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brighten_screen_entrance
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_gyro_sensitivity_conv
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_acc_sensitivity_conv
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_silent_time_paint
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_autolight_time_paint
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_remind_set_heart_paint
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_rest_heartrate
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_store_gpsdata
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackOptimizingDataAccept
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreTrackPoint
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateWalkEnergy
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateSwimmingEnergy
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateSpeed
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateRunningEnergy
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateRecoveryTime
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateMountaineeringEnergy
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateFrequency_swimming
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_7
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_1
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateVO2max
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clactate_threshold_value_title_paint
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_value_paint
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_histogram_step_paint
<LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_wave_paint
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_gauss_point_get
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_gauss_init
<LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_solve
<LI><a href="#[8dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_descomposition
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_ellipsoid
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evector_judge
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evalue_judge
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitialPreparationForLengthCount
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hdr_range
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_ready_menu
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_four_bar_display_paint
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_freq
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_over_or_restart
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kalmanFilter
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_sm_data_kf_receive
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_rn_data_sm_receive
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_exception
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_data_distance_cal
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateDistanceFromPoint
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportsCalculateDistSpeed
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance
<LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLon
<LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transformLat
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BR_Only_omega_x_a_z_DynamicBoundForDurationTest(BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, int*, int*, int*, int*, bool*, float*, float*, float*)
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std_seconds_data
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedometer
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mean_data
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Degree2Rad
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getangle
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance5Bit
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log10
</UL>

<P><STRONG><a name="[987]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[97b]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[987]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[986]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[993]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_ufrom_d
<LI><a href="#[985]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfixu
<LI><a href="#[984]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[982]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
<LI><a href="#[981]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[979]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drnd
</UL>

<P><STRONG><a name="[97e]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[98d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[987]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[981]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[9e]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_VO2max_range
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSportDetail
<LI><a href="#[8dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_descomposition
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_ellipsoid
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evector_judge
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evalue_judge
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitialPreparationForLengthCount
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hdr_range
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_raw_data_rn_receive
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_exception
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateDistanceFromPoint
<LI><a href="#[8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outOfChina
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getangle
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compareAxis
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_round
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[988]"></a>_drcmple</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[989]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmple_InfNaN
</UL>

<P><STRONG><a name="[534]"></a>_drnd</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, drnd.o(x$fpl$drnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _drnd &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_round
</UL>

<P><STRONG><a name="[a6]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;batt_voltage_to_percent_release
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_rel_altitude
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_time
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_silent_time_paint
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_autolight_time_paint
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_bar_display_paint
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_gauss_point_get
<LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_solve
<LI><a href="#[8dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_descomposition
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evector_judge
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_ready_menu
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_four_bar_display_paint
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getangle
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[98a]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[98b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[536]"></a>_dsqrt</STRONG> (Thumb, 404 bytes, Stack size 24 bytes, dsqrt_umaal.o(x$fpl$dsqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>

<P><STRONG><a name="[af]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_base_heartrate
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_two
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_one
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_2_paint
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_1_paint
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cycling_sport_detail_2_paint
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_sport_detail_2_paint
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brighten_screen_entrance
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateMountaineeringEnergy
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateVO2max
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_value_paint
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_gauss_point_get
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_gauss_init
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_crosscountry_save_detail_1_paint
<LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_2_paint
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_save_detail_1_paint
<LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_2_paint
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_1_paint
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_ellipsoid
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evector_judge
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;evalue_judge
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_hike_detail_1_paint
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_2_paint
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_1_paint
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_2_paint
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_save_detail_1_paint
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_ready_menu
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_walk_detail_1_paint
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_2_paint
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_sport_cycling_detail_1_paint
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_2_paint
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_run_save_detail_1_paint
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_2_paint
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_vice_climbing_save_detail_1_paint
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_four_bar_display_paint
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kalmanFilter
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculateDistanceFromPoint
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;transform
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedometer
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getangle
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doOHRLAlgorithm
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_log
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan2
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atan
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_asin
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_round
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[98c]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
<LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[114]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_circle_point
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture_ExtFlash
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber_ExtFlash
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChinese
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetChar
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_rel_altitude
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_altitude_to_press
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_btn_evt
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sports_record_detail_page_one
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swimming_sport_detail_1_paint
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cycling_sport_detail_2_paint
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_2_paint
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_1_paint
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_1_distance
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_2_paint
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_1_paint
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_cycling_atuocircle_paint
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTools
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brighten_screen_entrance
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_swim_acc_fifo__data
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_gps_paint
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_value
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_show_paint
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_calibration_confirm_save_paint
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_heart_recovery_paint
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_speed_paint
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_sport_distance_paint
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pressure_read
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_store_gpsdata
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateSwimmingEnergy
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateRunningEnergy
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculateRecoveryTime
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_status
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_ambient
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_7
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_6
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_5
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_4
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_3
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_1
<LI><a href="#[8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;min_track_mark
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_distance_paint
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motionsrecord_mile_time_pace_paint
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_display_total_distance_paint
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_value_paint
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_histogram_hdr_paint
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSportDetail
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trail_distance_paint
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_data_paint
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_distance_paint_gps
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cloud_navigation_options_paint
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_pressure_chart
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_2_paint
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_1_paint
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_5
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_detail_2
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_speed
<LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_distance
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_climbing_save_detail_1_paint
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_cal_auto
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_four_point
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_ellipsoid
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_point_dis
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VecMagnitude
<LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_2_paint
<LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_1_distance
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_run_track_distance
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_every_1_distance
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_data_show_str
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_raw_data_rn_receive
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gps_exception
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportsCalculateDistSpeed
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpeedOptimizingDataCollection
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;median(float*, int)
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std_seconds_data
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pedometer
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mean_data
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;findtrackindex
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsDistance5Bit
</UL>

<P><STRONG><a name="[98d]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[97e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[990]"></a>__fcmp4</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fcmp4.o(x$fpl$fcmp4), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmp4
</UL>

<P><STRONG><a name="[529]"></a>__ARM_fcmp4</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fcmp4.o(x$fpl$fcmp4))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_fcmp4
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fminf
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_fmaxf
</UL>

<P><STRONG><a name="[98f]"></a>_fcmp4</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, fcmp4.o(x$fpl$fcmp4), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[990]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fcmp4
<LI><a href="#[991]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_Inf
</UL>

<P><STRONG><a name="[991]"></a>__fpl_fcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fcmpi.o(x$fpl$fcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmp4
</UL>

<P><STRONG><a name="[9e3]"></a>__aeabi_ul2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffltll_clz.o(x$fpl$ffltll), UNUSED)

<P><STRONG><a name="[9e4]"></a>_ll_uto_f</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ffltll_clz.o(x$fpl$ffltll), UNUSED)

<P><STRONG><a name="[6e5]"></a>__aeabi_l2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffltll_clz.o(x$fpl$ffltll))
<BR><BR>[Called By]<UL><LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_CalcPT2nd
</UL>

<P><STRONG><a name="[9e5]"></a>_ll_sto_f</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, ffltll_clz.o(x$fpl$ffltll), UNUSED)

<P><STRONG><a name="[98e]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __fpl_fnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[992]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_sfrom_f
<LI><a href="#[98d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frnd
<LI><a href="#[98f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmp4
</UL>

<P><STRONG><a name="[80]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[9e6]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[9e7]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[97a]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[979]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[535]"></a>_frnd</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, frnd.o(x$fpl$frnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _frnd &rArr; __fpl_fnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_roundf
</UL>

<P><STRONG><a name="[6e4]"></a>__aeabi_f2lz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ffixll.o(x$fpl$llsfromf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2lz
</UL>
<BR>[Called By]<UL><LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_CalcPT2nd
</UL>

<P><STRONG><a name="[992]"></a>_ll_sfrom_f</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, ffixll.o(x$fpl$llsfromf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[98e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[3e1]"></a>__aeabi_d2ulz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfixull.o(x$fpl$llufromd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveGpsToXY
<LI><a href="#[8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;min_track_mark
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadGpsToXY
</UL>

<P><STRONG><a name="[993]"></a>_ll_ufrom_d</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dfixull.o(x$fpl$llufromd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[78]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[980]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[994]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[97f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[530]"></a>__ARM_scalbn</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn))
<BR><BR>[Calls]<UL><LI><a href="#[97f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>

<P><STRONG><a name="[994]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[980]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[8e4]"></a>priority_init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, main.o(i.priority_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = priority_init &rArr; am_hal_interrupt_priority_set
</UL>
<BR>[Calls]<UL><LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_priority_set
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e2]"></a>reset_handle</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, main.o(i.reset_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = reset_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_reset_status_get
<LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_reset_status_clear
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e1]"></a>rtt_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, main.o(i.rtt_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = rtt_init &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e3]"></a>system_init</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, main.o(i.system_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = system_init &rArr; am_hal_cachectrl_enable &rArr; am_hal_pwrctrl_memory_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_osc_select
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_osc_enable
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_int_enable
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_int_clear
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_alarm_interval_set
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_memory_enable
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_low_power_init
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_bucks_init
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_clkgen_sysclk_select
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_clkgen_osc_start
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_cachectrl_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e5]"></a>system_interrupt</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, main.o(i.system_interrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = system_interrupt
</UL>
<BR>[Calls]<UL><LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_enable
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[154]"></a>Days</STRONG> (Thumb, 68 bytes, Stack size 80 bytes, bsp_rtc.o(i.Days))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Days &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Is_Leap_Year
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DaysDiff
</UL>

<P><STRONG><a name="[3a6]"></a>LCD_SetChar</STRONG> (Thumb, 294 bytes, Stack size 80 bytes, drv_lcd.o(i.LCD_SetChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = LCD_SetChar &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetErrCode
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
</UL>

<P><STRONG><a name="[3a7]"></a>LCD_SetChinese</STRONG> (Thumb, 336 bytes, Stack size 88 bytes, drv_lcd.o(i.LCD_SetChinese))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = LCD_SetChinese &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>

<P><STRONG><a name="[3ad]"></a>LCD_SetNumber_Char</STRONG> (Thumb, 502 bytes, Stack size 56 bytes, drv_lcd.o(i.LCD_SetNumber_Char))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber_ExtFlash
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
</UL>

<P><STRONG><a name="[3a5]"></a>draw_arc</STRONG> (Thumb, 618 bytes, Stack size 96 bytes, drv_lcd.o(i.draw_arc))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = draw_arc &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_circle_point
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
</UL>

<P><STRONG><a name="[39f]"></a>drv_lcd_te_irq_init</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, drv_lcd.o(i.drv_lcd_te_irq_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = drv_lcd_te_irq_init &rArr; am_util_delay_ms &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_register
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_enable
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[3ab]"></a>line_draw</STRONG> (Thumb, 280 bytes, Stack size 48 bytes, drv_lcd.o(i.line_draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = line_draw
</UL>
<BR>[Called By]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLine
</UL>

<P><STRONG><a name="[4f]"></a>te_int_handle</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, drv_lcd.o(i.te_int_handle))
<BR>[Address Reference Count : 1]<UL><LI> drv_lcd.o(i.drv_lcd_te_irq_init)
</UL>
<P><STRONG><a name="[4b]"></a>btn_hdl_bl</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, drv_key.o(i.btn_hdl_bl))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = btn_hdl_bl &rArr; timer_start &rArr; am_hal_ctimer_period_set
</UL>
<BR>[Calls]<UL><LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_key.o(i.drv_key_init)
</UL>
<P><STRONG><a name="[4e]"></a>btn_hdl_down</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, drv_key.o(i.btn_hdl_down))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = btn_hdl_down &rArr; timer_start &rArr; am_hal_ctimer_period_set
</UL>
<BR>[Calls]<UL><LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_key.o(i.drv_key_init)
</UL>
<P><STRONG><a name="[4d]"></a>btn_hdl_ok</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, drv_key.o(i.btn_hdl_ok))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = btn_hdl_ok &rArr; timer_start &rArr; am_hal_ctimer_period_set
</UL>
<BR>[Calls]<UL><LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_key.o(i.drv_key_init)
</UL>
<P><STRONG><a name="[4a]"></a>btn_hdl_pwr</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, drv_key.o(i.btn_hdl_pwr))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = btn_hdl_pwr &rArr; timer_start &rArr; am_hal_ctimer_period_set
</UL>
<BR>[Calls]<UL><LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_key.o(i.drv_key_init)
</UL>
<P><STRONG><a name="[4c]"></a>btn_hdl_up</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, drv_key.o(i.btn_hdl_up))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = btn_hdl_up &rArr; timer_start &rArr; am_hal_ctimer_period_set
</UL>
<BR>[Calls]<UL><LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_key.o(i.drv_key_init)
</UL>
<P><STRONG><a name="[67f]"></a>com_apollo2_gpio_int_init</STRONG> (Thumb, 294 bytes, Stack size 40 bytes, drv_key.o(i.com_apollo2_gpio_int_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = com_apollo2_gpio_int_init &rArr; am_hal_gpio_int_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_enable
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_clear
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_key_init
</UL>

<P><STRONG><a name="[6d1]"></a>timer_create</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, drv_key.o(i.timer_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = timer_create &rArr; am_hal_ctimer_config_single &rArr; timers_use_hfrc &rArr; ctimer_source_hfrc
</UL>
<BR>[Calls]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_int_register
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_int_enable
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_config_single
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_key_init
</UL>

<P><STRONG><a name="[66]"></a>timer_handle</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, drv_key.o(i.timer_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = timer_handle &rArr; timer_stop &rArr; am_hal_ctimer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_input_read
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_key.o(i.timer_create)
</UL>
<P><STRONG><a name="[65f]"></a>timer_start</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, drv_key.o(i.timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = timer_start &rArr; am_hal_ctimer_period_set
</UL>
<BR>[Calls]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_start
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_period_set
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_hdl_up
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_hdl_pwr
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_hdl_ok
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_hdl_down
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btn_hdl_bl
</UL>

<P><STRONG><a name="[952]"></a>timer_stop</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, drv_key.o(i.timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = timer_stop &rArr; am_hal_ctimer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_handle
</UL>

<P><STRONG><a name="[263]"></a>GetGNRMCCrc</STRONG> (Thumb, 330 bytes, Stack size 240 bytes, drv_ublox.o(i.GetGNRMCCrc))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = GetGNRMCCrc
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HexToAsc
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMEA_GPRMC_Analysis
</UL>

<P><STRONG><a name="[264]"></a>HexToAsc</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, drv_ublox.o(i.HexToAsc))
<BR><BR>[Called By]<UL><LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGNRMCCrc
</UL>

<P><STRONG><a name="[6e3]"></a>drv_ms5837_CalcPT2nd</STRONG> (Thumb, 772 bytes, Stack size 128 bytes, drv_ms5837.o(i.drv_ms5837_CalcPT2nd))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = drv_ms5837_CalcPT2nd &rArr; __hardfp_powf &rArr; __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_l2f
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2lz
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_powf
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_data_get
</UL>

<P><STRONG><a name="[6e9]"></a>drv_ms5837_disable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, drv_ms5837.o(i.drv_ms5837_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = drv_ms5837_disable &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_disable
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_data_get
</UL>

<P><STRONG><a name="[6e6]"></a>drv_ms5837_enable</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, drv_ms5837.o(i.drv_ms5837_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = drv_ms5837_enable &rArr; bsp_iom_enable &rArr; am_hal_iom_config &rArr; iom_get_interface_clock_cfg &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_enable
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_data_get
</UL>

<P><STRONG><a name="[6e8]"></a>drv_ms5837_read</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, drv_ms5837.o(i.drv_ms5837_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = drv_ms5837_read &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_read
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_data_get
</UL>

<P><STRONG><a name="[6e7]"></a>drv_ms5837_write</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, drv_ms5837.o(i.drv_ms5837_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = drv_ms5837_write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_data_get
</UL>

<P><STRONG><a name="[6d7]"></a>lis3mdl_reg_read</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, drv_lis3mdl.o(i.lis3mdl_reg_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = lis3mdl_reg_read &rArr; am_hal_iom_i2c_read &rArr; am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_read
</UL>
<BR>[Called By]<UL><LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_data
</UL>

<P><STRONG><a name="[6da]"></a>lis3mdl_reg_write</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, drv_lis3mdl.o(i.lis3mdl_reg_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = lis3mdl_reg_write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_standby
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_reset
</UL>

<P><STRONG><a name="[539]"></a>adc_disable</STRONG> (Thumb, 220 bytes, Stack size 8 bytes, drv_battery.o(i.adc_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = adc_disable &rArr; am_hal_pwrctrl_periph_disable &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_periph_disable
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_adc_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_adc_isr
</UL>

<P><STRONG><a name="[53c]"></a>adc_to_batt_voltage</STRONG> (Thumb, 136 bytes, Stack size 56 bytes, drv_battery.o(i.adc_to_batt_voltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = adc_to_batt_voltage &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_pow
</UL>
<BR>[Called By]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_management
</UL>

<P><STRONG><a name="[5e2]"></a>batt_voltage_to_percent_charge</STRONG> (Thumb, 546 bytes, Stack size 56 bytes, drv_battery.o(i.batt_voltage_to_percent_charge))
<BR><BR>[Stack]<UL><LI>Max Depth = 652 + Unknown Stack Size
<LI>Call Chain = batt_voltage_to_percent_charge &rArr; charging_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charging_timer_start
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charging_timer_delete
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_management
</UL>

<P><STRONG><a name="[5e5]"></a>batt_voltage_to_percent_release</STRONG> (Thumb, 408 bytes, Stack size 56 bytes, drv_battery.o(i.batt_voltage_to_percent_release))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = batt_voltage_to_percent_release &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_management
</UL>

<P><STRONG><a name="[95b]"></a>delay</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, drv_battery.o(i.delay))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_detect_hdl
</UL>

<P><STRONG><a name="[46]"></a>usb_detect_hdl</STRONG> (Thumb, 376 bytes, Stack size 8 bytes, drv_battery.o(i.usb_detect_hdl))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = usb_detect_hdl &rArr; am_hal_rtc_time_get
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[95b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_battery.o(i.drv_bat_init)
</UL>
<P><STRONG><a name="[45]"></a>vTimerChargingCallback</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, drv_battery.o(i.vTimerChargingCallback))
<BR>[Address Reference Count : 1]<UL><LI> drv_battery.o(i.charging_timer_start)
</UL>
<P><STRONG><a name="[662]"></a>bus_disable</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, drv_pc.o(i.bus_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = bus_disable &rArr; am_hal_uart_pwrctrl_disable &rArr; am_hal_pwrctrl_periph_disable &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_pwrctrl_disable
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_int_disable
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_int_clear
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_disable
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_clock_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_uninit
</UL>

<P><STRONG><a name="[663]"></a>bus_enable</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, drv_pc.o(i.bus_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = bus_enable &rArr; am_hal_uart_config &rArr; config_baudrate
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_enable
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_pwrctrl_enable
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_int_enable
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_int_clear
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_init_buffered
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_fifo_config
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_enable
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_disable
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_config
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_clock_enable
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_init
</UL>

<P><STRONG><a name="[50]"></a>uart_cb</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, drv_pc.o(i.uart_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = uart_cb &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_pc.o(i.drv_pc_init)
</UL>
<P><STRONG><a name="[48]"></a>callback</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, drv_ble.o(i.callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 588 + Unknown Stack Size
<LI>Call Chain = callback &rArr; dev_ble_system_on &rArr; task_ble_init &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_ble_system_on
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_ble_system_off
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_ble.o(i.drv_ble_timer_init)
</UL>
<P><STRONG><a name="[47]"></a>cts_handle</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, drv_ble.o(i.cts_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = cts_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_ble.o(i.drv_ble_init)
</UL>
<P><STRONG><a name="[6af]"></a>send</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, drv_ble.o(i.send))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = send &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_flags_get
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_char_transmit_buffered
</UL>
<BR>[Called By]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_on_cts_high
</UL>

<P><STRONG><a name="[6b2]"></a>uart_disable</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, drv_ble.o(i.uart_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uart_disable &rArr; am_hal_uart_pwrctrl_disable &rArr; am_hal_pwrctrl_periph_disable &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_pwrctrl_disable
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_int_disable
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_int_clear
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_disable
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_clock_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close_on_ble_sys_off
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_on_cts_low
</UL>

<P><STRONG><a name="[6b0]"></a>uart_enable</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, drv_ble.o(i.uart_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = uart_enable &rArr; am_hal_uart_config &rArr; config_baudrate
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_enable
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_pwrctrl_enable
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_int_enable
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_int_clear
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_init_buffered
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_fifo_config
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_enable
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_disable
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_config
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_clock_enable
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_on_cts_high
</UL>

<P><STRONG><a name="[660]"></a>buf_write</STRONG> (Thumb, 290 bytes, Stack size 40 bytes, drv_extflash.o(i.buf_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_page_write
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
</UL>

<P><STRONG><a name="[69a]"></a>drv_extFlash_32K_erase</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, drv_extflash.o(i.drv_extFlash_32K_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = drv_extFlash_32K_erase &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_status
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
</UL>

<P><STRONG><a name="[699]"></a>drv_extFlash_64K_erase</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, drv_extflash.o(i.drv_extFlash_64K_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = drv_extFlash_64K_erase &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_status
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
</UL>

<P><STRONG><a name="[695]"></a>drv_extFlash_disable</STRONG> (Thumb, 356 bytes, Stack size 8 bytes, drv_extflash.o(i.drv_extFlash_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = drv_extFlash_disable &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_pwrctrl_disable
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_disable
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enter_deep_sleep
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
</UL>

<P><STRONG><a name="[696]"></a>drv_extFlash_enable</STRONG> (Thumb, 472 bytes, Stack size 24 bytes, drv_extflash.o(i.drv_extFlash_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = drv_extFlash_enable &rArr; am_hal_iom_config &rArr; iom_get_interface_clock_cfg &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_pwrctrl_enable
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_enable
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_config
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enter_deep_sleep
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
</UL>

<P><STRONG><a name="[661]"></a>drv_extFlash_page_write</STRONG> (Thumb, 162 bytes, Stack size 112 bytes, drv_extflash.o(i.drv_extFlash_page_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 428<LI>Call Chain = drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_status
</UL>
<BR>[Called By]<UL><LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buf_write
</UL>

<P><STRONG><a name="[694]"></a>drv_extFlash_pwr_down</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, drv_extflash.o(i.drv_extFlash_pwr_down))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = drv_extFlash_pwr_down &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write
</UL>
<BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enter_deep_sleep
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
</UL>

<P><STRONG><a name="[697]"></a>drv_extFlash_pwr_up</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, drv_extflash.o(i.drv_extFlash_pwr_up))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = drv_extFlash_pwr_up &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
</UL>

<P><STRONG><a name="[69c]"></a>drv_extFlash_read</STRONG> (Thumb, 128 bytes, Stack size 128 bytes, drv_extflash.o(i.drv_extFlash_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_read
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
</UL>

<P><STRONG><a name="[69b]"></a>drv_extFlash_sector_erase</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, drv_extflash.o(i.drv_extFlash_sector_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = drv_extFlash_sector_erase &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spiflash_status
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
</UL>

<P><STRONG><a name="[6b6]"></a>spiflash_status</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, drv_extflash.o(i.spiflash_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_read
</UL>
<BR>[Called By]<UL><LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_sector_erase
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_page_write
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_64K_erase
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_extFlash_32K_erase
</UL>

<P><STRONG><a name="[44b]"></a>drv_lsm6dsl_disable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, drv_lsm6dsl.o(i.drv_lsm6dsl_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = drv_lsm6dsl_disable &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_disable
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SIM
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
</UL>

<P><STRONG><a name="[449]"></a>drv_lsm6dsl_enable</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, drv_lsm6dsl.o(i.drv_lsm6dsl_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = drv_lsm6dsl_enable &rArr; bsp_iom_enable &rArr; am_hal_iom_config &rArr; iom_get_interface_clock_cfg &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_iom_enable
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_SIM
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Write
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sensor_IO_Read
</UL>

<P><STRONG><a name="[3e6]"></a>Log_sendout</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, drv_hrt.o(i.Log_sendout))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = Log_sendout &rArr; ble_uart_response_application_real_time_log_trains &rArr; drv_ble_send_data &rArr; drv_ble_timer_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_real_time_log_trains
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_int_handler
</UL>

<P><STRONG><a name="[6c7]"></a>drv_hrt_irq_init</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, drv_hrt.o(i.drv_hrt_irq_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = drv_hrt_irq_init &rArr; am_hal_gpio_int_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_register
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_gpio_int_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_init
</UL>

<P><STRONG><a name="[49]"></a>hrt_int_handle</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, drv_hrt.o(i.hrt_int_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hrt_int_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv_hrt.o(i.drv_hrt_irq_init)
</UL>
<P><STRONG><a name="[3f]"></a>task_cb</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, task_key.o(i.task_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = task_cb &rArr; xTimerPendFunctionCallFromISR &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[947]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerPendFunctionCallFromISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task_key.o(i.CreateKeyTask)
</UL>
<P><STRONG><a name="[44d]"></a>SetSteptoAlgo</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, task_gps.o(i.SetSteptoAlgo))
<BR><BR>[Stack]<UL><LI>Max Depth = 584<LI>Call Chain = SetSteptoAlgo &rArr; PhysicalParamCalDataAccept &rArr; PhyParamCalculateDistSpeed &rArr; gps_raw_data_rn_receive &rArr; gps_raw_data_process_rn &rArr; calculateDistanceFromPoint &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhysicalParamCalDataAccept
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsStatus
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsLon
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsLat
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_get_stepcount
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskGPSTime
</UL>

<P><STRONG><a name="[4fb]"></a>tool_drv_init</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, task_tool.o(i.tool_drv_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 564 + Unknown Stack Size
<LI>Call Chain = tool_drv_init &rArr; CreateGPSTask &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_delay_ms
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_reset
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_dev_para_init
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSeaLevelPressure
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Tool_Index
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateGPSTask
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskTools
</UL>

<P><STRONG><a name="[65]"></a>callback</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, task_battery.o(i.callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = callback &rArr; timer_battery_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_battery_start
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_adc_enable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task_battery.o(i.timer_battery_init)
</UL>
<P><STRONG><a name="[56]"></a>task</STRONG> (Thumb, 612 bytes, Stack size 16 bytes, task_battery.o(i.task))
<BR><BR>[Stack]<UL><LI>Max Depth = 700 + Unknown Stack Size
<LI>Call Chain = task &rArr; drv_bat_management &rArr; batt_voltage_to_percent_charge &rArr; charging_timer_start &rArr; xTimerCreate &rArr; prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_battery_start
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_voltage_flag_get
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_voltage_flag_clear
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_bat_management
<LI><a href="#[93b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charging_timer_get
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;charging_timer_delete
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pon
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_button_pof
<LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_pc_uninit
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_pc_init
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_SetData
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_battery_stop
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitLoadTrack
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task_battery.o(i.task_battery_init)
</UL>
<P><STRONG><a name="[70]"></a>task_cb</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, task_battery.o(i.task_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = task_cb &rArr; xTimerPendFunctionCallFromISR &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[947]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerPendFunctionCallFromISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task_battery.o(.constdata)
</UL>
<P><STRONG><a name="[5d2]"></a>app_event_handle</STRONG> (Thumb, 556 bytes, Stack size 168 bytes, task_pc.o(i.app_event_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 932 + Unknown Stack Size
<LI>Call Chain = app_event_handle &rArr; pc_uart_ccommand_application_flash_write_raw &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_power_off_store_set_value
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_uninit
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_boot_setting_read
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_boot_jump_to_bootloader
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_app_data_erase
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_reset_por
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Factory_Reset
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_mac_write
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_mac_read
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_get_watch_face_info_2
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_get_watch_face_info
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_flash_write_raw
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_flash_read_raw
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_flash_erase_raw
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[710]"></a>extFlash_sector</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, task_pc.o(i.extFlash_sector))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = extFlash_sector &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_bootloader_fast_crc32
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[88e]"></a>hwt_event_handle</STRONG> (Thumb, 4126 bytes, Stack size 16 bytes, task_pc.o(i.hwt_event_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 1740 + Unknown Stack Size
<LI>Call Chain = hwt_event_handle &rArr; pc_uart_command_hardware_test_compass_enable &rArr; magn_angle_and_cal &rArr; fit_ellipsoid &rArr; magn_solve_inverse &rArr; magn_solve &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pressure_read
<LI><a href="#[89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hwardware_test_lcd_disable
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hwardware_test_button_dwn_disable
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_pressure_enable
<LI><a href="#[8c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_pressure_disable
<LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_motor_enable
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_motor_disable
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_mode_enable
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_mode_disable
<LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_lcd_enable
<LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gyro_read
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gyro_enable
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gyro_disable
<LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gsensor_read
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gsensor_enable
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gsensor_disable
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_read
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_enable
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_disable
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_warm_start
<LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_nmea_zda
<LI><a href="#[8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_nmea_vtg
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_nmea_rmc
<LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_nmea_gsv
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_nmea_gsa
<LI><a href="#[8bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_nmea_gll
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_nmea_gga
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_hot_start
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_gps_mode
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_gps_bd_mode
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_cold_start
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_gps_config_bd_mode
<LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_font_read
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_font_enable
<LI><a href="#[8a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_font_disable
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_extflash_enable
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_extflash_disable
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_compass_read
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_compass_enable
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_compass_disable
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_buzzer_enable
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_buzzer_disable
<LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_button_up_enable
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_button_up_disable
<LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_button_pwr_enable
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_button_pwr_disable
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_button_ok_enable
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_button_ok_disable
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_button_dwn_enable
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_button_bl_enable
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_button_bl_disable
<LI><a href="#[8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_rssi_read_stop
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_rssi_read
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_info_read
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_extflash_read
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_enable
<LI><a href="#[8c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_disable
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_backlight_enable
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_backlight_disable
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extFlash_sector
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[5d9]"></a>pc_uart_ccommand_application_flash_erase_raw</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, task_pc.o(i.pc_uart_ccommand_application_flash_erase_raw))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = pc_uart_ccommand_application_flash_erase_raw &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_event_handle
</UL>

<P><STRONG><a name="[5d7]"></a>pc_uart_ccommand_application_flash_read_raw</STRONG> (Thumb, 124 bytes, Stack size 288 bytes, task_pc.o(i.pc_uart_ccommand_application_flash_read_raw))
<BR><BR>[Stack]<UL><LI>Max Depth = 740<LI>Call Chain = pc_uart_ccommand_application_flash_read_raw &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_bootloader_fast_crc32
</UL>
<BR>[Called By]<UL><LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_event_handle
</UL>

<P><STRONG><a name="[5d8]"></a>pc_uart_ccommand_application_flash_write_raw</STRONG> (Thumb, 168 bytes, Stack size 280 bytes, task_pc.o(i.pc_uart_ccommand_application_flash_write_raw))
<BR><BR>[Stack]<UL><LI>Max Depth = 764<LI>Call Chain = pc_uart_ccommand_application_flash_write_raw &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_bootloader_fast_crc32
</UL>
<BR>[Called By]<UL><LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_event_handle
</UL>

<P><STRONG><a name="[5da]"></a>pc_uart_ccommand_application_get_watch_face_info</STRONG> (Thumb, 480 bytes, Stack size 216 bytes, task_pc.o(i.pc_uart_ccommand_application_get_watch_face_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 668 + Unknown Stack Size
<LI>Call Chain = pc_uart_ccommand_application_get_watch_face_info &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_event_handle
</UL>

<P><STRONG><a name="[5db]"></a>pc_uart_ccommand_application_get_watch_face_info_2</STRONG> (Thumb, 294 bytes, Stack size 216 bytes, task_pc.o(i.pc_uart_ccommand_application_get_watch_face_info_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 668 + Unknown Stack Size
<LI>Call Chain = pc_uart_ccommand_application_get_watch_face_info_2 &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_event_handle
</UL>

<P><STRONG><a name="[89e]"></a>pc_uart_command_hardware_test_backlight_disable</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_backlight_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_backlight_disable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[89d]"></a>pc_uart_command_hardware_test_backlight_enable</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_backlight_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = pc_uart_command_hardware_test_backlight_enable &rArr; drv_light_enable &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8c6]"></a>pc_uart_command_hardware_test_ble_disable</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_ble_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_ble_disable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_ble_system_off
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8c1]"></a>pc_uart_command_hardware_test_ble_enable</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_ble_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 588 + Unknown Stack Size
<LI>Call Chain = pc_uart_command_hardware_test_ble_enable &rArr; dev_ble_system_on &rArr; task_ble_init &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_ble_system_on
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8c5]"></a>pc_uart_command_hardware_test_ble_extflash_read</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, task_pc.o(i.pc_uart_command_hardware_test_ble_extflash_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = pc_uart_command_hardware_test_ble_extflash_read &rArr; drv_ble_send_data &rArr; drv_ble_timer_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8c2]"></a>pc_uart_command_hardware_test_ble_info_read</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, task_pc.o(i.pc_uart_command_hardware_test_ble_info_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = pc_uart_command_hardware_test_ble_info_read &rArr; drv_ble_send_data &rArr; drv_ble_timer_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8c3]"></a>pc_uart_command_hardware_test_ble_rssi_read</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, task_pc.o(i.pc_uart_command_hardware_test_ble_rssi_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = pc_uart_command_hardware_test_ble_rssi_read &rArr; drv_ble_send_data &rArr; drv_ble_timer_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8c4]"></a>pc_uart_command_hardware_test_ble_rssi_read_stop</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, task_pc.o(i.pc_uart_command_hardware_test_ble_rssi_read_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = pc_uart_command_hardware_test_ble_rssi_read_stop &rArr; drv_ble_send_data &rArr; drv_ble_timer_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[894]"></a>pc_uart_command_hardware_test_button_bl_disable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_button_bl_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_button_bl_disable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[893]"></a>pc_uart_command_hardware_test_button_bl_enable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_button_bl_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_button_bl_enable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[899]"></a>pc_uart_command_hardware_test_button_dwn_enable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_button_dwn_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_button_dwn_enable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[898]"></a>pc_uart_command_hardware_test_button_ok_disable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_button_ok_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_button_ok_disable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[897]"></a>pc_uart_command_hardware_test_button_ok_enable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_button_ok_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_button_ok_enable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[892]"></a>pc_uart_command_hardware_test_button_pwr_disable</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_button_pwr_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_button_pwr_disable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[891]"></a>pc_uart_command_hardware_test_button_pwr_enable</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_button_pwr_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_button_pwr_enable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[896]"></a>pc_uart_command_hardware_test_button_up_disable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_button_up_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_button_up_disable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[895]"></a>pc_uart_command_hardware_test_button_up_enable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_button_up_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_button_up_enable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8a2]"></a>pc_uart_command_hardware_test_buzzer_disable</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_buzzer_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_buzzer_disable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_buzzer_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8a1]"></a>pc_uart_command_hardware_test_buzzer_enable</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_buzzer_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_buzzer_enable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_buzzer_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8b0]"></a>pc_uart_command_hardware_test_compass_disable</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_compass_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_compass_disable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_standby
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8ae]"></a>pc_uart_command_hardware_test_compass_enable</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_compass_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 1724 + Unknown Stack Size
<LI>Call Chain = pc_uart_command_hardware_test_compass_enable &rArr; magn_angle_and_cal &rArr; fit_ellipsoid &rArr; magn_solve_inverse &rArr; magn_solve &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_reset
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_dev_para_init
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_angle_and_cal
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8af]"></a>pc_uart_command_hardware_test_compass_read</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, task_pc.o(i.pc_uart_command_hardware_test_compass_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = pc_uart_command_hardware_test_compass_read &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_enable
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_disable
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lis3mdl_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8a4]"></a>pc_uart_command_hardware_test_extflash_disable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_extflash_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_extflash_disable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8a3]"></a>pc_uart_command_hardware_test_extflash_enable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_extflash_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_extflash_enable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8a7]"></a>pc_uart_command_hardware_test_font_disable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_font_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_font_disable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8a5]"></a>pc_uart_command_hardware_test_font_enable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_font_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_font_enable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8a6]"></a>pc_uart_command_hardware_test_font_read</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, task_pc.o(i.pc_uart_command_hardware_test_font_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = pc_uart_command_hardware_test_font_read &rArr; drv_gt24l24_self_test &rArr; ASCII_GetData &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_gt24l24_self_test
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8b6]"></a>pc_uart_command_hardware_test_gps_config_bd_mode</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_gps_config_bd_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_gps_config_bd_mode &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8b4]"></a>pc_uart_command_hardware_test_gps_config_cold_start</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_gps_config_cold_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_gps_config_cold_start &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8b7]"></a>pc_uart_command_hardware_test_gps_config_gps_bd_mode</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_gps_config_gps_bd_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_gps_config_gps_bd_mode &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8b5]"></a>pc_uart_command_hardware_test_gps_config_gps_mode</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_gps_config_gps_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_gps_config_gps_mode &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8b2]"></a>pc_uart_command_hardware_test_gps_config_hot_start</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_gps_config_hot_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_gps_config_hot_start &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8b8]"></a>pc_uart_command_hardware_test_gps_config_nmea_gga</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_gps_config_nmea_gga))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_gps_config_nmea_gga &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8bd]"></a>pc_uart_command_hardware_test_gps_config_nmea_gll</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_gps_config_nmea_gll))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_gps_config_nmea_gll &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8b9]"></a>pc_uart_command_hardware_test_gps_config_nmea_gsa</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_gps_config_nmea_gsa))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_gps_config_nmea_gsa &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8ba]"></a>pc_uart_command_hardware_test_gps_config_nmea_gsv</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_gps_config_nmea_gsv))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_gps_config_nmea_gsv &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8bb]"></a>pc_uart_command_hardware_test_gps_config_nmea_rmc</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_gps_config_nmea_rmc))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_gps_config_nmea_rmc &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8bc]"></a>pc_uart_command_hardware_test_gps_config_nmea_vtg</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_gps_config_nmea_vtg))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_gps_config_nmea_vtg &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8be]"></a>pc_uart_command_hardware_test_gps_config_nmea_zda</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_gps_config_nmea_zda))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_gps_config_nmea_zda &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8b3]"></a>pc_uart_command_hardware_test_gps_config_warm_start</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_gps_config_warm_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_gps_config_warm_start &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8c0]"></a>pc_uart_command_hardware_test_gps_disable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_gps_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = pc_uart_command_hardware_test_gps_disable &rArr; drv_ublox_poweroff &rArr; bsp_uart_disable &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweroff
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8b1]"></a>pc_uart_command_hardware_test_gps_enable</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_gps_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 664<LI>Call Chain = pc_uart_command_hardware_test_gps_enable &rArr; drv_ublox_GNSS &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_reset_rtc
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_poweron
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_VTG
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_RMC
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GSV
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GSA
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GNSS
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GLL
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_GGA
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8bf]"></a>pc_uart_command_hardware_test_gps_read</STRONG> (Thumb, 68 bytes, Stack size 264 bytes, task_pc.o(i.pc_uart_command_hardware_test_gps_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 632<LI>Call Chain = pc_uart_command_hardware_test_gps_read &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_read
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_enable
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ublox_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8aa]"></a>pc_uart_command_hardware_test_gsensor_disable</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_gsensor_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = pc_uart_command_hardware_test_gsensor_disable &rArr; drv_lsm6dsl_acc_powerdown &rArr; LSM6DSL_ACC_GYRO_W_ODR_XL &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_powerdown
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8a8]"></a>pc_uart_command_hardware_test_gsensor_enable</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_gsensor_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = pc_uart_command_hardware_test_gsensor_enable &rArr; drv_lsm6dsl_acc_init &rArr; drv_lsm6dsl_acc_lowpower &rArr; LSM6DSL_ACC_GYRO_W_LowPower_XL &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_init
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8a9]"></a>pc_uart_command_hardware_test_gsensor_read</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, task_pc.o(i.pc_uart_command_hardware_test_gsensor_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = pc_uart_command_hardware_test_gsensor_read &rArr; drv_lsm6dsl_acc_axes_raw &rArr; LSM6DSL_ACC_GYRO_GetRawAccData &rArr; LSM6DSL_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; am_hal_iom_i2c_read &rArr; am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_acc_axes_raw
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8ad]"></a>pc_uart_command_hardware_test_gyro_disable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_gyro_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = pc_uart_command_hardware_test_gyro_disable &rArr; drv_lsm6dsl_gyro_powerdown &rArr; LSM6DSL_ACC_GYRO_W_ODR_G &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_gyro_powerdown
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8ab]"></a>pc_uart_command_hardware_test_gyro_enable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_gyro_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = pc_uart_command_hardware_test_gyro_enable &rArr; drv_lsm6dsl_gyro_init &rArr; drv_lsm6dsl_gyro_lowpower &rArr; LSM6DSL_ACC_GYRO_W_LP_Mode &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_gyro_init
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8ac]"></a>pc_uart_command_hardware_test_gyro_read</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, task_pc.o(i.pc_uart_command_hardware_test_gyro_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = pc_uart_command_hardware_test_gyro_read &rArr; drv_lsm6dsl_gyro_axes_raw &rArr; LSM6DSL_ACC_GYRO_GetRawGyroData &rArr; LSM6DSL_ACC_GYRO_ReadReg &rArr; Sensor_IO_Read &rArr; am_hal_iom_i2c_read &rArr; am_hal_iom_queue_i2c_read &rArr; am_hal_iom_i2c_read_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_gyro_axes_raw
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[89b]"></a>pc_uart_command_hardware_test_lcd_enable</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_lcd_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 1388 + Unknown Stack Size
<LI>Call Chain = pc_uart_command_hardware_test_lcd_enable &rArr; gui_hwt_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_hwt_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[890]"></a>pc_uart_command_hardware_test_mode_disable</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, task_pc.o(i.pc_uart_command_hardware_test_mode_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = pc_uart_command_hardware_test_mode_disable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[88f]"></a>pc_uart_command_hardware_test_mode_enable</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, task_pc.o(i.pc_uart_command_hardware_test_mode_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = pc_uart_command_hardware_test_mode_enable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8a0]"></a>pc_uart_command_hardware_test_motor_disable</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_motor_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_motor_disable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motor_disable
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[89f]"></a>pc_uart_command_hardware_test_motor_enable</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_motor_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_motor_enable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motor_enable
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8c9]"></a>pc_uart_command_hardware_test_pressure_disable</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_pressure_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_pressure_disable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8c7]"></a>pc_uart_command_hardware_test_pressure_enable</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hardware_test_pressure_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hardware_test_pressure_enable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[89a]"></a>pc_uart_command_hwardware_test_button_dwn_disable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hwardware_test_button_dwn_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hwardware_test_button_dwn_disable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[89c]"></a>pc_uart_command_hwardware_test_lcd_disable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, task_pc.o(i.pc_uart_command_hwardware_test_lcd_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = pc_uart_command_hwardware_test_lcd_disable &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[8c8]"></a>pressure_read</STRONG> (Thumb, 102 bytes, Stack size 56 bytes, task_pc.o(i.pressure_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = pressure_read &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ms5837_data_get
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
</UL>

<P><STRONG><a name="[5d]"></a>task</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, task_pc.o(i.task))
<BR><BR>[Stack]<UL><LI>Max Depth = 1748 + Unknown Stack Size
<LI>Call Chain = task &rArr; hwt_event_handle &rArr; pc_uart_command_hardware_test_compass_enable &rArr; magn_angle_and_cal &rArr; fit_ellipsoid &rArr; magn_solve_inverse &rArr; magn_solve &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hwt_event_handle
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_event_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task_pc.o(i.task_pc_init)
</UL>
<P><STRONG><a name="[5c]"></a>task_cb</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, task_pc.o(i.task_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = task_cb &rArr; xTimerPendFunctionCallFromISR &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[947]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerPendFunctionCallFromISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task_pc.o(i.task_pc_init)
</UL>
<P><STRONG><a name="[93e]"></a>ble_uart_ccommand_app_ble_dfu_apollo_bootsetting</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, task_ble.o(i.ble_uart_ccommand_app_ble_dfu_apollo_bootsetting))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[940]"></a>ble_uart_ccommand_app_ble_dfu_apollo_postvalidate</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, task_ble.o(i.ble_uart_ccommand_app_ble_dfu_apollo_postvalidate))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[93f]"></a>ble_uart_ccommand_app_ble_dfu_apollo_prevalidate</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, task_ble.o(i.ble_uart_ccommand_app_ble_dfu_apollo_prevalidate))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[5e9]"></a>ble_uart_ccommand_app_ble_dfu_apollo_reset_n_activate</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, task_ble.o(i.ble_uart_ccommand_app_ble_dfu_apollo_reset_n_activate))
<BR><BR>[Stack]<UL><LI>Max Depth = 508 + Unknown Stack Size
<LI>Call Chain = ble_uart_ccommand_app_ble_dfu_apollo_reset_n_activate &rArr; mode_power_off_store_set_value &rArr; Store_SetData &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_power_off_store_set_value
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_boot_jump_to_bootloader
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_app_data_erase
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dfu_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[5ec]"></a>ble_uart_ccommand_app_ble_dfu_finish</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, task_ble.o(i.ble_uart_ccommand_app_ble_dfu_finish))
<BR><BR>[Stack]<UL><LI>Max Depth = 508 + Unknown Stack Size
<LI>Call Chain = ble_uart_ccommand_app_ble_dfu_finish &rArr; mode_power_off_store_set_value &rArr; Store_SetData &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_power_off_store_set_value
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_app_data_erase
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_reset_por
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dfu_timer_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[5ed]"></a>ble_uart_ccommand_app_ble_dfu_start</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_app_ble_dfu_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 508 + Unknown Stack Size
<LI>Call Chain = ble_uart_ccommand_app_ble_dfu_start &rArr; mode_close &rArr; timer_notify_remind_stop &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[5ee]"></a>ble_uart_ccommand_application_accessory_cycling_connect</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_application_accessory_cycling_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ble_uart_ccommand_application_accessory_cycling_connect &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[5ef]"></a>ble_uart_ccommand_application_accessory_cycling_disconnect</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_application_accessory_cycling_disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ble_uart_ccommand_application_accessory_cycling_disconnect &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[5f0]"></a>ble_uart_ccommand_application_accessory_data_upload</STRONG> (Thumb, 98 bytes, Stack size 280 bytes, task_ble.o(i.ble_uart_ccommand_application_accessory_data_upload))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = ble_uart_ccommand_application_accessory_data_upload &rArr; drv_ble_send_data &rArr; drv_ble_timer_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[5f1]"></a>ble_uart_ccommand_application_accessory_heartrate_connect</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_application_accessory_heartrate_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ble_uart_ccommand_application_accessory_heartrate_connect &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[5f2]"></a>ble_uart_ccommand_application_accessory_heartrate_disconnect</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_application_accessory_heartrate_disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ble_uart_ccommand_application_accessory_heartrate_disconnect &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[5f3]"></a>ble_uart_ccommand_application_accessory_running_connect</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_application_accessory_running_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ble_uart_ccommand_application_accessory_running_connect &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[5f4]"></a>ble_uart_ccommand_application_accessory_running_disconnect</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_application_accessory_running_disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ble_uart_ccommand_application_accessory_running_disconnect &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[5f5]"></a>ble_uart_ccommand_application_app_message_android</STRONG> (Thumb, 438 bytes, Stack size 144 bytes, task_ble.o(i.ble_uart_ccommand_application_app_message_android))
<BR><BR>[Stack]<UL><LI>Max Depth = 884 + Unknown Stack Size
<LI>Call Chain = ble_uart_ccommand_application_app_message_android &rArr; lib_utf16_gbk &rArr; U2G &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_bootloader_fast_crc32
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_utf16_gbk
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[5f8]"></a>ble_uart_ccommand_application_app_message_ios</STRONG> (Thumb, 526 bytes, Stack size 392 bytes, task_ble.o(i.ble_uart_ccommand_application_app_message_ios))
<BR><BR>[Stack]<UL><LI>Max Depth = 1124 + Unknown Stack Size
<LI>Call Chain = ble_uart_ccommand_application_app_message_ios &rArr; lib_utf8_gbk &rArr; U2G &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_bootloader_fast_crc32
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_utf8_gbk
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[5fa]"></a>ble_uart_ccommand_application_bind_status</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, task_ble.o(i.ble_uart_ccommand_application_bind_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 532 + Unknown Stack Size
<LI>Call Chain = ble_uart_ccommand_application_bind_status &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[5fb]"></a>ble_uart_ccommand_application_ble_bond</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_application_ble_bond))
<BR><BR>[Stack]<UL><LI>Max Depth = 500 + Unknown Stack Size
<LI>Call Chain = ble_uart_ccommand_application_ble_bond &rArr; timer_notify_display_start &rArr; timer_notify_display_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[5fc]"></a>ble_uart_ccommand_application_ble_connect</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_application_ble_connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 500 + Unknown Stack Size
<LI>Call Chain = ble_uart_ccommand_application_ble_connect &rArr; timer_notify_display_start &rArr; timer_notify_display_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[5fd]"></a>ble_uart_ccommand_application_ble_disconnect</STRONG> (Thumb, 394 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_application_ble_disconnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 500 + Unknown Stack Size
<LI>Call Chain = ble_uart_ccommand_application_ble_disconnect &rArr; timer_notify_display_start &rArr; timer_notify_display_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_close
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_vice_pasue_stop
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_train_pause_time
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dfu_timer_stop
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_user_sensor_close
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[601]"></a>ble_uart_ccommand_application_ble_passkey</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_application_ble_passkey))
<BR><BR>[Stack]<UL><LI>Max Depth = 500 + Unknown Stack Size
<LI>Call Chain = ble_uart_ccommand_application_ble_passkey &rArr; timer_notify_display_start &rArr; timer_notify_display_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[602]"></a>ble_uart_ccommand_application_current_time_read</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, task_ble.o(i.ble_uart_ccommand_application_current_time_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ble_uart_ccommand_application_current_time_read &rArr; drv_ble_uart_put &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[603]"></a>ble_uart_ccommand_application_current_time_write</STRONG> (Thumb, 238 bytes, Stack size 184 bytes, task_ble.o(i.ble_uart_ccommand_application_current_time_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 956<LI>Call Chain = ble_uart_ccommand_application_current_time_write &rArr; RenewOneDay &rArr; Get_TrainPlanDayRecord &rArr; get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_set
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RenewOneDay
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_bootloader_fast_crc32
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsApptoWatchTime
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[604]"></a>ble_uart_ccommand_application_data_frame_num</STRONG> (Thumb, 562 bytes, Stack size 288 bytes, task_ble.o(i.ble_uart_ccommand_application_data_frame_num))
<BR><BR>[Stack]<UL><LI>Max Depth = 884<LI>Call Chain = ble_uart_ccommand_application_data_frame_num &rArr; read_all_day_steps &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalEnergy
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_filt_stepcount
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_all_day_steps
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalDistance
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[606]"></a>ble_uart_ccommand_application_delete_data</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, task_ble.o(i.ble_uart_ccommand_application_delete_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = ble_uart_ccommand_application_delete_data &rArr; delete_all_day_steps &rArr; Store_all_day_time &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delete_all_day_steps
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[608]"></a>ble_uart_ccommand_application_dev_name_update</STRONG> (Thumb, 114 bytes, Stack size 336 bytes, task_ble.o(i.ble_uart_ccommand_application_dev_name_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = ble_uart_ccommand_application_dev_name_update &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_bootloader_fast_crc32
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_app_data_write
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_app_data_read
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[60b]"></a>ble_uart_ccommand_application_extflash_config_activity_address_boundary_request</STRONG> (Thumb, 146 bytes, Stack size 104 bytes, task_ble.o(i.ble_uart_ccommand_application_extflash_config_activity_address_boundary_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = ble_uart_ccommand_application_extflash_config_activity_address_boundary_request &rArr; drv_ble_uart_put &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[60c]"></a>ble_uart_ccommand_application_extflash_config_activity_address_request</STRONG> (Thumb, 416 bytes, Stack size 288 bytes, task_ble.o(i.ble_uart_ccommand_application_extflash_config_activity_address_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 740<LI>Call Chain = ble_uart_ccommand_application_extflash_config_activity_address_request &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[60d]"></a>ble_uart_ccommand_application_extflash_config_astro_sync_request</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, task_ble.o(i.ble_uart_ccommand_application_extflash_config_astro_sync_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = ble_uart_ccommand_application_extflash_config_astro_sync_request &rArr; ublox_is_offline_data_in_flash_uptodate &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_DiffTime
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ublox_is_offline_data_in_flash_uptodate
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[60f]"></a>ble_uart_ccommand_application_extflash_config_main_day_data_request</STRONG> (Thumb, 952 bytes, Stack size 256 bytes, task_ble.o(i.ble_uart_ccommand_application_extflash_config_main_day_data_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = ble_uart_ccommand_application_extflash_config_main_day_data_request &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalStep
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalEnergy
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalDistance
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[610]"></a>ble_uart_ccommand_application_extflash_config_shard_track_address_request</STRONG> (Thumb, 130 bytes, Stack size 168 bytes, task_ble.o(i.ble_uart_ccommand_application_extflash_config_shard_track_address_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 620<LI>Call Chain = ble_uart_ccommand_application_extflash_config_shard_track_address_request &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[611]"></a>ble_uart_ccommand_application_extflash_config_shard_track_header_write</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, task_ble.o(i.ble_uart_ccommand_application_extflash_config_shard_track_header_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = ble_uart_ccommand_application_extflash_config_shard_track_header_write &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[612]"></a>ble_uart_ccommand_application_extflash_config_train_plan_erase_address_request</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_application_extflash_config_train_plan_erase_address_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ble_uart_ccommand_application_extflash_config_train_plan_erase_address_request &rArr; drv_ble_uart_put &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[613]"></a>ble_uart_ccommand_application_extflash_config_train_plan_result_erase_address_request</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_application_extflash_config_train_plan_result_erase_address_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ble_uart_ccommand_application_extflash_config_train_plan_result_erase_address_request &rArr; drv_ble_uart_put &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[614]"></a>ble_uart_ccommand_application_find_watch</STRONG> (Thumb, 218 bytes, Stack size 288 bytes, task_ble.o(i.ble_uart_ccommand_application_find_watch))
<BR><BR>[Stack]<UL><LI>Max Depth = 788 + Unknown Stack Size
<LI>Call Chain = ble_uart_ccommand_application_find_watch &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_enable
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_disable
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_findwatch_timer_stop
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[616]"></a>ble_uart_ccommand_application_get_watch_calculate_param_read</STRONG> (Thumb, 40 bytes, Stack size 40 bytes, task_ble.o(i.ble_uart_ccommand_application_get_watch_calculate_param_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = ble_uart_ccommand_application_get_watch_calculate_param_read &rArr; drv_ble_uart_put &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_bootloader_fast_crc32
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[617]"></a>ble_uart_ccommand_application_get_watch_calculate_param_write</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, task_ble.o(i.ble_uart_ccommand_application_get_watch_calculate_param_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ble_uart_ccommand_application_get_watch_calculate_param_write &rArr; drv_ble_uart_put &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_bootloader_fast_crc32
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[618]"></a>ble_uart_ccommand_application_get_watch_default_sport_mode</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_application_get_watch_default_sport_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ble_uart_ccommand_application_get_watch_default_sport_mode &rArr; drv_ble_uart_put &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[619]"></a>ble_uart_ccommand_application_get_watch_face_activate</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, task_ble.o(i.ble_uart_ccommand_application_get_watch_face_activate))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ble_uart_ccommand_application_get_watch_face_activate &rArr; drv_ble_uart_put &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[61a]"></a>ble_uart_ccommand_application_get_watch_face_finish</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_application_get_watch_face_finish))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = ble_uart_ccommand_application_get_watch_face_finish &rArr; com_dial_init &rArr; com_dial_festival_is_valid &rArr; com_dial_is_valid &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_init
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_init
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[61c]"></a>ble_uart_ccommand_application_get_watch_face_info</STRONG> (Thumb, 326 bytes, Stack size 216 bytes, task_ble.o(i.ble_uart_ccommand_application_get_watch_face_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 668 + Unknown Stack Size
<LI>Call Chain = ble_uart_ccommand_application_get_watch_face_info &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[61d]"></a>ble_uart_ccommand_application_get_watch_face_info_2</STRONG> (Thumb, 294 bytes, Stack size 216 bytes, task_ble.o(i.ble_uart_ccommand_application_get_watch_face_info_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 668 + Unknown Stack Size
<LI>Call Chain = ble_uart_ccommand_application_get_watch_face_info_2 &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[61e]"></a>ble_uart_ccommand_application_info_apollo2</STRONG> (Thumb, 90 bytes, Stack size 152 bytes, task_ble.o(i.ble_uart_ccommand_application_info_apollo2))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = ble_uart_ccommand_application_info_apollo2 &rArr; drv_ble_uart_put &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_boot_setting_read
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[61f]"></a>ble_uart_ccommand_application_info_bat</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_application_info_bat))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ble_uart_ccommand_application_info_bat &rArr; drv_ble_uart_put &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[620]"></a>ble_uart_ccommand_application_location_info</STRONG> (Thumb, 116 bytes, Stack size 152 bytes, task_ble.o(i.ble_uart_ccommand_application_location_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 892<LI>Call Chain = ble_uart_ccommand_application_location_info &rArr; lib_utf16_gbk &rArr; U2G &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_utf16_gbk
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[621]"></a>ble_uart_ccommand_application_mac_read</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_application_mac_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = ble_uart_ccommand_application_mac_read &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[622]"></a>ble_uart_ccommand_application_mac_write</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_application_mac_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = ble_uart_ccommand_application_mac_write &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[623]"></a>ble_uart_ccommand_application_on_bind_device</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_application_on_bind_device))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = ble_uart_ccommand_application_on_bind_device &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[624]"></a>ble_uart_ccommand_application_personal_info_read</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_application_personal_info_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ble_uart_ccommand_application_personal_info_read &rArr; drv_ble_uart_put &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[625]"></a>ble_uart_ccommand_application_personal_info_write</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, task_ble.o(i.ble_uart_ccommand_application_personal_info_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ble_uart_ccommand_application_personal_info_write &rArr; drv_ble_uart_put &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[627]"></a>ble_uart_ccommand_application_phone_call_delay</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_application_phone_call_delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ble_uart_ccommand_application_phone_call_delay &rArr; drv_ble_uart_put &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[628]"></a>ble_uart_ccommand_application_phone_call_status</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_application_phone_call_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = ble_uart_ccommand_application_phone_call_status &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[629]"></a>ble_uart_ccommand_application_real_time_log_trans</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, task_ble.o(i.ble_uart_ccommand_application_real_time_log_trans))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_uart_ccommand_application_real_time_log_trans &rArr; drv_ble_uart_close &rArr; uart_disable &rArr; am_hal_uart_pwrctrl_disable &rArr; am_hal_pwrctrl_periph_disable &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[62a]"></a>ble_uart_ccommand_application_reset</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_application_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = ble_uart_ccommand_application_reset &rArr; cod_user_sensor_close &rArr; drv_lsm6dsl_cod_close &rArr; drv_lsm6dsl_acc_init &rArr; drv_lsm6dsl_acc_lowpower &rArr; LSM6DSL_ACC_GYRO_W_LowPower_XL &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_close
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_vice_pasue_stop
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_train_pause_time
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_user_sensor_close
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[62b]"></a>ble_uart_ccommand_application_rest_heartrate</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, task_ble.o(i.ble_uart_ccommand_application_rest_heartrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = ble_uart_ccommand_application_rest_heartrate &rArr; drv_ble_uart_put &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hdr_max
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[62d]"></a>ble_uart_ccommand_application_rt_data_trans</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, task_ble.o(i.ble_uart_ccommand_application_rt_data_trans))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = ble_uart_ccommand_application_rt_data_trans &rArr; task_hrt_close &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_close
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_rt_cod_stop
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_rt_cod_start
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_start
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[630]"></a>ble_uart_ccommand_application_sensor_data_trans</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, task_ble.o(i.ble_uart_ccommand_application_sensor_data_trans))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = ble_uart_ccommand_application_sensor_data_trans &rArr; cod_user_sensor_open &rArr; drv_lsm6dsl_cod_open &rArr; drv_lsm6dsl_cod_fifo_init &rArr; LSM6DSL_ACC_GYRO_W_FIFO_Watermark &rArr; LSM6DSL_ACC_GYRO_WriteReg &rArr; Sensor_IO_Write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_user_sensor_open
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cod_user_sensor_close
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[632]"></a>ble_uart_ccommand_application_sport_cast</STRONG> (Thumb, 584 bytes, Stack size 32 bytes, task_ble.o(i.ble_uart_ccommand_application_sport_cast))
<BR><BR>[Stack]<UL><LI>Max Depth = 532 + Unknown Stack Size
<LI>Call Chain = ble_uart_ccommand_application_sport_cast &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TaskSportSta
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_close
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_vice_pasue_stop
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_vice_pasue_start
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_start
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_train_pause_time
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[634]"></a>ble_uart_ccommand_application_sports_param_read</STRONG> (Thumb, 402 bytes, Stack size 104 bytes, task_ble.o(i.ble_uart_ccommand_application_sports_param_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = ble_uart_ccommand_application_sports_param_read &rArr; drv_ble_uart_put &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_bootloader_fast_crc32
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[635]"></a>ble_uart_ccommand_application_sports_param_write</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, task_ble.o(i.ble_uart_ccommand_application_sports_param_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ble_uart_ccommand_application_sports_param_write &rArr; drv_ble_uart_put &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[636]"></a>ble_uart_ccommand_application_training_cast</STRONG> (Thumb, 536 bytes, Stack size 32 bytes, task_ble.o(i.ble_uart_ccommand_application_training_cast))
<BR><BR>[Stack]<UL><LI>Max Depth = 772 + Unknown Stack Size
<LI>Call Chain = ble_uart_ccommand_application_training_cast &rArr; lib_utf16_gbk &rArr; U2G &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TaskSportSta
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_vice_pasue_stop
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_vice_pasue_start
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_train_pause_time
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_utf16_gbk
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[637]"></a>ble_uart_ccommand_application_update_apgs_time</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, task_ble.o(i.ble_uart_ccommand_application_update_apgs_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_uart_ccommand_application_update_apgs_time &rArr; drv_ble_uart_close &rArr; uart_disable &rArr; am_hal_uart_pwrctrl_disable &rArr; am_hal_pwrctrl_periph_disable &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[638]"></a>ble_uart_ccommand_application_update_bp_finish</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_application_update_bp_finish))
<BR><BR>[Stack]<UL><LI>Max Depth = 508 + Unknown Stack Size
<LI>Call Chain = ble_uart_ccommand_application_update_bp_finish &rArr; com_dial_get &rArr; com_dial_is_valid &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dfu_timer_stop
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_is_valid
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_get
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[63b]"></a>ble_uart_ccommand_application_update_bp_start</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_ccommand_application_update_bp_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 508 + Unknown Stack Size
<LI>Call Chain = ble_uart_ccommand_application_update_bp_start &rArr; mode_close &rArr; timer_notify_remind_stop &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_dial_get
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[63c]"></a>ble_uart_ccommand_application_weather_info_request</STRONG> (Thumb, 244 bytes, Stack size 248 bytes, task_ble.o(i.ble_uart_ccommand_application_weather_info_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = ble_uart_ccommand_application_weather_info_request &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_info_init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[63e]"></a>ble_uart_ccommand_application_wechat_sport_data_request</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, task_ble.o(i.ble_uart_ccommand_application_wechat_sport_data_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ble_uart_ccommand_application_wechat_sport_data_request &rArr; drv_ble_uart_put &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalStep
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalEnergy
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalDistance
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[63f]"></a>ble_uart_command_application_extflash_config_train_notify_switch</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, task_ble.o(i.ble_uart_command_application_extflash_config_train_notify_switch))
<BR><BR>[Stack]<UL><LI>Max Depth = 764 + Unknown Stack Size
<LI>Call Chain = ble_uart_command_application_extflash_config_train_notify_switch &rArr; Get_TrainPlanDayRecord &rArr; get_trainplan_valid_flag &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_trainplan_valid_flag
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanDayRecord
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSportReady
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSportMode
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_TrainPlan_Notify_IsOpen
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsOpen_TrainPlan_Settings
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[642]"></a>ble_uart_command_application_extflash_config_train_plan_read_address_request</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_command_application_extflash_config_train_plan_read_address_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = ble_uart_command_application_extflash_config_train_plan_read_address_request &rArr; Get_TrainPlanDownloadDataSize &rArr; Get_TrainPlanTotalDays &rArr; DaysDiff &rArr; Days &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanDownloadDataSize
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[643]"></a>ble_uart_command_application_extflash_config_train_plan_request_uuid</STRONG> (Thumb, 108 bytes, Stack size 192 bytes, task_ble.o(i.ble_uart_command_application_extflash_config_train_plan_request_uuid))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = ble_uart_command_application_extflash_config_train_plan_request_uuid &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[644]"></a>ble_uart_command_application_extflash_config_train_plan_result_read_address_request</STRONG> (Thumb, 112 bytes, Stack size 64 bytes, task_ble.o(i.ble_uart_command_application_extflash_config_train_plan_result_read_address_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = ble_uart_command_application_extflash_config_train_plan_result_read_address_request &rArr; Get_TrainPlanResult &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TrainPlanResult
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[645]"></a>ble_uart_command_application_extflash_config_train_plan_result_request_uuid</STRONG> (Thumb, 58 bytes, Stack size 152 bytes, task_ble.o(i.ble_uart_command_application_extflash_config_train_plan_result_request_uuid))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = ble_uart_command_application_extflash_config_train_plan_result_request_uuid &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[646]"></a>ble_uart_command_application_extflash_config_train_plan_result_write_address_request</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_command_application_extflash_config_train_plan_result_write_address_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ble_uart_command_application_extflash_config_train_plan_result_write_address_request &rArr; drv_ble_uart_put &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[647]"></a>ble_uart_command_application_extflash_config_train_plan_write_address_request</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, task_ble.o(i.ble_uart_command_application_extflash_config_train_plan_write_address_request))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ble_uart_command_application_extflash_config_train_plan_write_address_request &rArr; drv_ble_uart_put &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[648]"></a>ble_uart_presonse_application_ble_info</STRONG> (Thumb, 212 bytes, Stack size 128 bytes, task_ble.o(i.ble_uart_presonse_application_ble_info))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = ble_uart_presonse_application_ble_info &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_bootloader_fast_crc32
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_app_data_write
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_app_data_read
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_app_data_crc_check_bootsetting
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[64a]"></a>ble_uart_response_application_find_phone</STRONG> (Thumb, 48 bytes, Stack size 264 bytes, task_ble.o(i.ble_uart_response_application_find_phone))
<BR><BR>[Stack]<UL><LI>Max Depth = 716 + Unknown Stack Size
<LI>Call Chain = ble_uart_response_application_find_phone &rArr; gui_tool_findphone_timer_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_task_close
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_rollback
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_timer_stop
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[64d]"></a>ble_uart_response_application_jump_bootloader</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, task_ble.o(i.ble_uart_response_application_jump_bootloader))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = ble_uart_response_application_jump_bootloader &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[64f]"></a>ble_uart_response_application_reset</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, task_ble.o(i.ble_uart_response_application_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = ble_uart_response_application_reset &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[651]"></a>ble_uart_response_bootloader_bootsetting</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, task_ble.o(i.ble_uart_response_bootloader_bootsetting))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = ble_uart_response_bootloader_bootsetting &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[652]"></a>ble_uart_response_bootloader_postvalidate</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, task_ble.o(i.ble_uart_response_bootloader_postvalidate))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = ble_uart_response_bootloader_postvalidate &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[653]"></a>ble_uart_response_bootloader_prevalidate</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, task_ble.o(i.ble_uart_response_bootloader_prevalidate))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = ble_uart_response_bootloader_prevalidate &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[654]"></a>ble_uart_response_bootloader_reset_n_activate</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, task_ble.o(i.ble_uart_response_bootloader_reset_n_activate))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = ble_uart_response_bootloader_reset_n_activate &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[8f1]"></a>pc_uart_ccommand_application_jump_bootloader</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, task_ble.o(i.pc_uart_ccommand_application_jump_bootloader))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = pc_uart_ccommand_application_jump_bootloader &rArr; drv_ble_uart_put &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_put
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[8f2]"></a>pc_uart_command_hardware_test_ble_extflash_read_response</STRONG> (Thumb, 46 bytes, Stack size 264 bytes, task_ble.o(i.pc_uart_command_hardware_test_ble_extflash_read_response))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = pc_uart_command_hardware_test_ble_extflash_read_response &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[8f3]"></a>pc_uart_command_hardware_test_ble_info_read_response</STRONG> (Thumb, 114 bytes, Stack size 120 bytes, task_ble.o(i.pc_uart_command_hardware_test_ble_info_read_response))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = pc_uart_command_hardware_test_ble_info_read_response &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_bootloader_fast_crc32
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_app_data_write
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[8f4]"></a>pc_uart_command_hardware_test_ble_rssi_read_response</STRONG> (Thumb, 46 bytes, Stack size 264 bytes, task_ble.o(i.pc_uart_command_hardware_test_ble_rssi_read_response))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = pc_uart_command_hardware_test_ble_rssi_read_response &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[8f5]"></a>pc_uart_command_hardware_test_ble_rssi_read_stop_response</STRONG> (Thumb, 46 bytes, Stack size 264 bytes, task_ble.o(i.pc_uart_command_hardware_test_ble_rssi_read_stop_response))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = pc_uart_command_hardware_test_ble_rssi_read_stop_response &rArr; drv_pc_send_data &rArr; am_hal_uart_char_transmit_buffered &rArr; am_hal_queue_item_add
</UL>
<BR>[Calls]<UL><LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_pc_send_data
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[58]"></a>task</STRONG> (Thumb, 1150 bytes, Stack size 8 bytes, task_ble.o(i.task))
<BR><BR>[Stack]<UL><LI>Max Depth = 1132 + Unknown Stack Size
<LI>Call Chain = task &rArr; ble_uart_ccommand_application_app_message_ios &rArr; lib_utf8_gbk &rArr; U2G &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_uart_close
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_on_cts_low
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_on_cts_high
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_rssi_read_stop_response
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_rssi_read_response
<LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_info_read_response
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_command_hardware_test_ble_extflash_read_response
<LI><a href="#[8f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pc_uart_ccommand_application_jump_bootloader
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_bootloader_reset_n_activate
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_bootloader_prevalidate
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_bootloader_postvalidate
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_bootloader_bootsetting
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_reset
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_jump_bootloader
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_response_application_find_phone
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_presonse_application_ble_info
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_plan_write_address_request
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_plan_result_write_address_request
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_plan_result_request_uuid
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_plan_result_read_address_request
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_plan_request_uuid
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_plan_read_address_request
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_command_application_extflash_config_train_notify_switch
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_wechat_sport_data_request
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_weather_info_request
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_update_bp_start
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_update_bp_finish
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_update_apgs_time
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_training_cast
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_sports_param_write
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_sports_param_read
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_sport_cast
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_sensor_data_trans
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_rt_data_trans
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_rest_heartrate
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_reset
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_real_time_log_trans
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_phone_call_status
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_phone_call_delay
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_personal_info_write
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_personal_info_read
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_on_bind_device
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_mac_write
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_mac_read
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_location_info
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_info_bat
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_info_apollo2
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_face_info_2
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_face_info
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_face_finish
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_face_activate
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_default_sport_mode
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_calculate_param_write
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_get_watch_calculate_param_read
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_find_watch
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_train_plan_result_erase_address_request
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_train_plan_erase_address_request
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_shard_track_header_write
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_shard_track_address_request
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_main_day_data_request
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_astro_sync_request
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_activity_address_request
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_extflash_config_activity_address_boundary_request
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_dev_name_update
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_delete_data
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_data_frame_num
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_current_time_write
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_current_time_read
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_passkey
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_disconnect
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_connect
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_ble_bond
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_bind_status
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_ios
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_app_message_android
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_accessory_running_disconnect
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_accessory_running_connect
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_accessory_heartrate_disconnect
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_accessory_heartrate_connect
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_accessory_data_upload
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_accessory_cycling_disconnect
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_application_accessory_cycling_connect
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_app_ble_dfu_start
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_app_ble_dfu_finish
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_app_ble_dfu_apollo_reset_n_activate
<LI><a href="#[93f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_app_ble_dfu_apollo_prevalidate
<LI><a href="#[940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_app_ble_dfu_apollo_postvalidate
<LI><a href="#[93e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_uart_ccommand_app_ble_dfu_apollo_bootsetting
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_boot_jump_to_bootloader
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_error_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task_ble.o(i.task_ble_init)
</UL>
<P><STRONG><a name="[57]"></a>task_cb</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, task_ble.o(i.task_cb))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = task_cb &rArr; xTimerPendFunctionCallFromISR &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[947]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerPendFunctionCallFromISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task_ble.o(i.task_ble_init)
</UL>
<P><STRONG><a name="[444]"></a>SetSportRecord</STRONG> (Thumb, 256 bytes, Stack size 40 bytes, task_sport.o(i.SetSportRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = SetSportRecord &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSport
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSport
</UL>

<P><STRONG><a name="[447]"></a>sport_triathlon_cancel</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, task_sport.o(i.sport_triathlon_cancel))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = sport_triathlon_cancel &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSport
</UL>

<P><STRONG><a name="[5a]"></a>task</STRONG> (Thumb, 322 bytes, Stack size 0 bytes, task_hrt.o(i.task))
<BR><BR>[Stack]<UL><LI>Max Depth = 1288<LI>Call Chain = task &rArr; drv_hrt_int_handler &rArr; HeartRateMonitor_interrupt_handle &rArr; OHRL_algorithm &rArr; _ohr_algorithm &rArr; doOHRLAlgorithm &rArr; __hardfp_floor &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_suspend
<LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_restart
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_irq_disable
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_int_handler
<LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_init
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_enable
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_hrt_disable
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_cod_close
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_hrt_acc_pwron
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_hrt_acc_init
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_hrt_acc_fifo_data
<LI><a href="#[941]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulTaskNotifyTake
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_i2c_hw1_init
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OHRL_reset
<LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OHRL_pushXYZ
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OHRL_algorithm
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ohr_timer_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task_hrt.o(i.task_hrt_init)
</UL>
<P><STRONG><a name="[944]"></a>task_ohr_timer_start</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, task_hrt.o(i.task_ohr_timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = task_ohr_timer_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[5b]"></a>timer_callback</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, task_hrt.o(i.timer_callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = timer_callback &rArr; task_ohrcounter_handler &rArr; vTaskNotifyGiveFromISR &rArr; vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_ohrcounter_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task_hrt.o(i.task_hrt_init)
</UL>
<P><STRONG><a name="[6c]"></a>callback</STRONG> (Thumb, 554 bytes, Stack size 16 bytes, time_progress.o(i.callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 468 + Unknown Stack Size
<LI>Call Chain = callback &rArr; timer_progress_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_sport_record_detail_start
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_progress_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> time_progress.o(i.timer_progress_init)
</UL>
<P><STRONG><a name="[67]"></a>callback_backlight</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, time_notify.o(i.callback_backlight))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = callback_backlight &rArr; drv_light_disable &rArr; timer_lcd_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_light_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> time_notify.o(i.timer_notify_backlight_init)
</UL>
<P><STRONG><a name="[68]"></a>callback_buzzer</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, time_notify.o(i.callback_buzzer))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = callback_buzzer &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_buzzer_enable
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_buzzer_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> time_notify.o(i.timer_notify_buzzer_init)
</UL>
<P><STRONG><a name="[69]"></a>callback_display</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, time_notify.o(i.callback_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = callback_display &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> time_notify.o(i.timer_notify_display_init)
</UL>
<P><STRONG><a name="[6a]"></a>callback_motor</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, time_notify.o(i.callback_motor))
<BR><BR>[Stack]<UL><LI>Max Depth = 460 + Unknown Stack Size
<LI>Call Chain = callback_motor &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motor_enable
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_motor_disable
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Address Reference Count : 1]<UL><LI> time_notify.o(i.timer_notify_motor_init)
</UL>
<P><STRONG><a name="[6b]"></a>callback_remind</STRONG> (Thumb, 412 bytes, Stack size 24 bytes, time_notify.o(i.callback_remind))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = callback_remind &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_remind_motor_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> time_notify.o(i.timer_notify_remind_init)
</UL>
<P><STRONG><a name="[5e]"></a>vTimerCallback</STRONG> (Thumb, 1132 bytes, Stack size 112 bytes, timer_app.o(i.vTimerCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 880 + Unknown Stack Size
<LI>Call Chain = vTimerCallback &rArr; ble_cod_sensor_data_trains &rArr; ble_uart_response_application_sensor_data_trains &rArr; drv_ble_send_data &rArr; drv_ble_timer_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_sport_record_detail_screen
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_auto_back_home
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_getHdrValue
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_close
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_start
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_gps_flicker
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_notify_is_ok
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_start
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_cod_sensor_data_trains
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_m_AutoBackScreen
<LI><a href="#[92e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_heartrate
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTimerGetTimerID
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_longtool_screen
<LI><a href="#[970]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_countdown_time
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_tool_stop
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_countdown_stop
<LI><a href="#[950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_auto_back_home_stop
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_VO2max_start
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_VO2max_Countdown_start
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UninitVO2maxMeasing
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitDistanceAlgo_VO2maxLactate
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer_app.o(i.timer_app_init)
</UL>
<P><STRONG><a name="[61]"></a>vTimerCallback_cod</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, timer_app.o(i.vTimerCallback_cod))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = vTimerCallback_cod &rArr; drv_ble_send_data &rArr; drv_ble_timer_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_ble_send_data
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalStep
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalEnergy
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalDistance
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer_app.o(i.timer_app_init)
</UL>
<P><STRONG><a name="[62]"></a>vTimerCallback_cod_sensor</STRONG> (Thumb, 308 bytes, Stack size 96 bytes, timer_app.o(i.vTimerCallback_cod_sensor))
<BR><BR>[Stack]<UL><LI>Max Depth = 864<LI>Call Chain = vTimerCallback_cod_sensor &rArr; ble_cod_sensor_data_trains &rArr; ble_uart_response_application_sensor_data_trains &rArr; drv_ble_send_data &rArr; drv_ble_timer_start &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_getHdrValue
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_data_left
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_cod_sensor_data_trains
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ring_buffer_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer_app.o(i.timer_app_init)
</UL>
<P><STRONG><a name="[64]"></a>vTimerCallback_lcd</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, timer_app.o(i.vTimerCallback_lcd))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = vTimerCallback_lcd &rArr; drv_lcd_switch_hpm_to_lpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_switch_hpm_to_lpm
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_enable
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lcd_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer_app.o(i.timer_app_init)
</UL>
<P><STRONG><a name="[5f]"></a>vTimerCallback_pasue</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, timer_app.o(i.vTimerCallback_pasue))
<BR><BR>[Stack]<UL><LI>Max Depth = 476 + Unknown Stack Size
<LI>Call Chain = vTimerCallback_pasue &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_stop
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_stop
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_display_stop
<LI><a href="#[951]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_pasue_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer_app.o(i.timer_app_init)
</UL>
<P><STRONG><a name="[63]"></a>vTimerCallback_timeout_back</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, timer_app.o(i.vTimerCallback_timeout_back))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = vTimerCallback_timeout_back &rArr; task_hrt_close &rArr; SEGGER_RTT_printf &rArr; SEGGER_RTT_vprintf &rArr; _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_hrt_close
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsSportReady
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseGPSTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer_app.o(i.timer_app_init)
</UL>
<P><STRONG><a name="[60]"></a>vTimerCallback_vice_pasue</STRONG> (Thumb, 268 bytes, Stack size 24 bytes, timer_app.o(i.vTimerCallback_vice_pasue))
<BR><BR>[Stack]<UL><LI>Max Depth = 524 + Unknown Stack Size
<LI>Call Chain = vTimerCallback_vice_pasue &rArr; timer_notify_motor_start &rArr; timer_notify_motor_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_motor_start
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_buzzer_start
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_swich_msg
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_app_vice_pasue_stop
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_train_pause_time
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer_app.o(i.timer_app_init)
</UL>
<P><STRONG><a name="[6d]"></a>vTimerTracebackCallback</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, timer_traceback.o(i.vTimerTracebackCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = vTimerTracebackCallback &rArr; get_navi_OfftrackDetail &rArr; log_navi_trackjudge &rArr; navi_remaindistance &rArr; trackjudge &rArr; findtrackindex &rArr; __hardfp_pow &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_PauseSta
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGpsStatus
<LI><a href="#[8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;min_track_mark
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_navi_OfftrackDetail
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_back_OfftrackDetail
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timer_traceback.o(i.trace_back_timer_start)
</UL>
<P><STRONG><a name="[7ad]"></a>gui_progress_circle_0</STRONG> (Thumb, 318 bytes, Stack size 72 bytes, gui.o(i.gui_progress_circle_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = gui_progress_circle_0 &rArr; LCD_SetArc &rArr; draw_arc &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDialScale
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
</UL>
<BR>[Called By]<UL><LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_progess_bar
</UL>

<P><STRONG><a name="[7af]"></a>gui_progress_circle_1</STRONG> (Thumb, 450 bytes, Stack size 64 bytes, gui.o(i.gui_progress_circle_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = gui_progress_circle_1 &rArr; LCD_SetArc &rArr; draw_arc &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
</UL>
<BR>[Called By]<UL><LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_progess_bar
</UL>

<P><STRONG><a name="[7ae]"></a>gui_progress_circle_2</STRONG> (Thumb, 226 bytes, Stack size 80 bytes, gui.o(i.gui_progress_circle_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = gui_progress_circle_2 &rArr; LCD_SetDialScale &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDialScale
</UL>
<BR>[Called By]<UL><LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_progess_bar
</UL>

<P><STRONG><a name="[766]"></a>gui_dial_addr_offset_get</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gui_dial.o(i.gui_dial_addr_offset_get))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_paint
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_preview
</UL>

<P><STRONG><a name="[759]"></a>gui_dial_ambient</STRONG> (Thumb, 1986 bytes, Stack size 72 bytes, gui_dial.o(i.gui_dial_ambient))
<BR><BR>[Stack]<UL><LI>Max Depth = 1460 + Unknown Stack Size
<LI>Call Chain = gui_dial_ambient &rArr; LCD_SetString_ExtFlash &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString_ExtFlash
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture_ExtFlash
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ambient_value_get
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalEnergy
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_paint
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_preview
</UL>

<P><STRONG><a name="[75b]"></a>gui_dial_background</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, gui_dial.o(i.gui_dial_background))
<BR><BR>[Stack]<UL><LI>Max Depth = 1484 + Unknown Stack Size
<LI>Call Chain = gui_dial_background &rArr; gui_dial_battery &rArr; LCD_SetString_ExtFlash &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture_ExtFlash
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_battery
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_paint
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_preview
</UL>

<P><STRONG><a name="[75c]"></a>gui_dial_battery</STRONG> (Thumb, 2438 bytes, Stack size 88 bytes, gui_dial.o(i.gui_dial_battery))
<BR><BR>[Stack]<UL><LI>Max Depth = 1476 + Unknown Stack Size
<LI>Call Chain = gui_dial_battery &rArr; LCD_SetString_ExtFlash &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString_ExtFlash
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCircle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_progess_bar
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_paint
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_preview
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_background
</UL>

<P><STRONG><a name="[75e]"></a>gui_dial_date</STRONG> (Thumb, 4692 bytes, Stack size 104 bytes, gui_dial.o(i.gui_dial_date))
<BR><BR>[Stack]<UL><LI>Max Depth = 1492 + Unknown Stack Size
<LI>Call Chain = gui_dial_date &rArr; LCD_SetString_ExtFlash &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString_ExtFlash
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_paint
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_preview
</UL>

<P><STRONG><a name="[75f]"></a>gui_dial_get_weather</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_dial.o(i.gui_dial_get_weather))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = gui_dial_get_weather &rArr; gui_tool_calendar_weather_info_init &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_info_init
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_get
</UL>
<BR>[Called By]<UL><LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_widget
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_weather
</UL>

<P><STRONG><a name="[761]"></a>gui_dial_graph</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, gui_dial.o(i.gui_dial_graph))
<BR><BR>[Stack]<UL><LI>Max Depth = 1508 + Unknown Stack Size
<LI>Call Chain = gui_dial_graph &rArr; gui_distance_histogram &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_distance_histogram
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_histogram
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_12h_pressure
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_paint
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_preview
</UL>

<P><STRONG><a name="[763]"></a>gui_dial_heart</STRONG> (Thumb, 534 bytes, Stack size 64 bytes, gui_dial.o(i.gui_dial_heart))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = gui_dial_heart &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_paint
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_preview
</UL>

<P><STRONG><a name="[764]"></a>gui_dial_kcal</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, gui_dial.o(i.gui_dial_kcal))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = gui_dial_kcal &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalEnergy
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_paint
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_preview
</UL>

<P><STRONG><a name="[768]"></a>gui_dial_status</STRONG> (Thumb, 6956 bytes, Stack size 144 bytes, gui_dial.o(i.gui_dial_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 1532 + Unknown Stack Size
<LI>Call Chain = gui_dial_status &rArr; LCD_SetString_ExtFlash &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString_ExtFlash
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture_ExtFlash
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCircle
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalStep
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalEnergy
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TotalDistance
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_progress_circle
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_progess_bar
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_paint
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_preview
</UL>

<P><STRONG><a name="[76a]"></a>gui_dial_time</STRONG> (Thumb, 2232 bytes, Stack size 88 bytes, gui_dial.o(i.gui_dial_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 988 + Unknown Stack Size
<LI>Call Chain = gui_dial_time &rArr; LCD_SetNumber_ExtFlash &rArr; LCD_SetPicture_ExtFlash &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber_ExtFlash
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCircle
<LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_7
<LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_6
<LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_5
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_4
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_3
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_clockline_1
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_paint
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_preview
</UL>

<P><STRONG><a name="[769]"></a>gui_dial_weather</STRONG> (Thumb, 2266 bytes, Stack size 120 bytes, gui_dial.o(i.gui_dial_weather))
<BR><BR>[Stack]<UL><LI>Max Depth = 1508 + Unknown Stack Size
<LI>Call Chain = gui_dial_weather &rArr; LCD_SetString_ExtFlash &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString_ExtFlash
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture_ExtFlash
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_weather_get
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_get_weather
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_progress_circle
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_paint
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_preview
</UL>

<P><STRONG><a name="[767]"></a>gui_dial_widget</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, gui_dial.o(i.gui_dial_widget))
<BR><BR>[Stack]<UL><LI>Max Depth = 1516 + Unknown Stack Size
<LI>Call Chain = gui_dial_widget &rArr; gui_dial_widget_type_1 &rArr; LCD_SetString_ExtFlash &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_silent_mode_get
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_widget_type_1
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_get_weather
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_paint
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_preview
</UL>

<P><STRONG><a name="[76e]"></a>gui_dial_widget_type_1</STRONG> (Thumb, 1224 bytes, Stack size 88 bytes, gui_dial.o(i.gui_dial_widget_type_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 1476 + Unknown Stack Size
<LI>Call Chain = gui_dial_widget_type_1 &rArr; LCD_SetString_ExtFlash &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString_ExtFlash
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture_ExtFlash
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dial_widget
</UL>

<P><STRONG><a name="[51]"></a>callback</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, gui_dfu.o(i.callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = callback &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_dfu.o(i.gui_dfu_timer_init)
</UL>
<P><STRONG><a name="[756]"></a>progress_display</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, gui_dfu.o(i.progress_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = progress_display &rArr; LCD_SetArc &rArr; draw_arc &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_update_cod_dial_paint
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_dfu_paint
</UL>

<P><STRONG><a name="[273]"></a>Gui_Home_TrainPlan_Log</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_home.o(i.Gui_Home_TrainPlan_Log))
<BR><BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Curr_Home_Index
</UL>

<P><STRONG><a name="[773]"></a>gui_histogram_hdr_paint</STRONG> (Thumb, 626 bytes, Stack size 96 bytes, gui_heartrate.o(i.gui_histogram_hdr_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1460 + Unknown Stack Size
<LI>Call Chain = gui_histogram_hdr_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_heartrate_average_based_paint
</UL>

<P><STRONG><a name="[77a]"></a>gui_histogram_step_paint</STRONG> (Thumb, 1002 bytes, Stack size 136 bytes, gui_step.o(i.gui_histogram_step_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1564 + Unknown Stack Size
<LI>Call Chain = gui_histogram_step_paint &rArr; gui_sidebar_step_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_weekmain_max_distance
<LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_daysofweek_paint
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_weekmain_max_steps
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sidebar_step_paint
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_week_steps_paint
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_step_week_mileage_paint
</UL>

<P><STRONG><a name="[77b]"></a>gui_sidebar_step_paint</STRONG> (Thumb, 834 bytes, Stack size 64 bytes, gui_step.o(i.gui_sidebar_step_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_sidebar_step_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_histogram_step_paint
</UL>

<P><STRONG><a name="[72f]"></a>gui_VO2max_histogram_paint</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, gui_vo2max.o(i.gui_VO2max_histogram_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = gui_VO2max_histogram_paint &rArr; get_VO2max_range &rArr; __aeabi_cdcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_VO2max_range_color
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_VO2max_range
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_VO2max_value_paint
</UL>

<P><STRONG><a name="[266]"></a>GetHeartratePara</STRONG> (Thumb, 310 bytes, Stack size 40 bytes, gui_motionsrecord.o(i.GetHeartratePara))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GetHeartratePara &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSportDetail
</UL>

<P><STRONG><a name="[269]"></a>GetNextSportColumn</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_motionsrecord.o(i.GetNextSportColumn))
<BR><BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSportDetail
</UL>

<P><STRONG><a name="[797]"></a>gui_motionsrecord_mile_time_pace_paint</STRONG> (Thumb, 830 bytes, Stack size 48 bytes, gui_motionsrecord.o(i.gui_motionsrecord_mile_time_pace_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_motionsrecord_mile_time_pace_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motionsrecord_last_paint
</UL>

<P><STRONG><a name="[796]"></a>gui_motionsrecord_title_paint</STRONG> (Thumb, 182 bytes, Stack size 64 bytes, gui_motionsrecord.o(i.gui_motionsrecord_title_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = gui_motionsrecord_title_paint &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getImgSport
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motionsrecord_last_paint
</UL>

<P><STRONG><a name="[79e]"></a>gui_notification_info_init</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, gui_notification.o(i.gui_notification_info_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = gui_notification_info_init &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_info_btn_evt
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notification_btn_evt
</UL>

<P><STRONG><a name="[723]"></a>get_weekCalories</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, gui_calories.o(i.get_weekCalories))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = get_weekCalories &rArr; GetDayMainData_SportsCaloriesWeekData &rArr; dev_extFlash_read &rArr; drv_extFlash_read &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDayMainData_SportsCaloriesWeekData
</UL>
<BR>[Called By]<UL><LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_week_sports_title_paint
</UL>

<P><STRONG><a name="[73a]"></a>gui_calories_sports_foundation_title_paint</STRONG> (Thumb, 720 bytes, Stack size 48 bytes, gui_calories.o(i.gui_calories_sports_foundation_title_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_calories_sports_foundation_title_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_CommonEnergy
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_sports_foundation_paint
</UL>

<P><STRONG><a name="[73b]"></a>gui_calories_week_sports_title_paint</STRONG> (Thumb, 632 bytes, Stack size 72 bytes, gui_calories.o(i.gui_calories_week_sports_title_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1436 + Unknown Stack Size
<LI>Call Chain = gui_calories_week_sports_title_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sidebar_calories_paint
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_daysofweek_calories_paint
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_weekCalories
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_week_sports_paint
</UL>

<P><STRONG><a name="[73c]"></a>gui_daysofweek_calories_paint</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, gui_calories.o(i.gui_daysofweek_calories_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = gui_daysofweek_calories_paint &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_week_sports_title_paint
</UL>

<P><STRONG><a name="[73d]"></a>gui_sidebar_calories_paint</STRONG> (Thumb, 1604 bytes, Stack size 40 bytes, gui_calories.o(i.gui_sidebar_calories_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = gui_sidebar_calories_paint &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_calories_week_sports_title_paint
</UL>

<P><STRONG><a name="[73e]"></a>gui_clactate_threshold_value_title_paint</STRONG> (Thumb, 726 bytes, Stack size 112 bytes, gui_lactate_threshold.o(i.gui_clactate_threshold_value_title_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1476 + Unknown Stack Size
<LI>Call Chain = gui_clactate_threshold_value_title_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_threshold_value_paint
</UL>

<P><STRONG><a name="[788]"></a>gui_lactate_threshold_hint_content_paint</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, gui_lactate_threshold.o(i.gui_lactate_threshold_hint_content_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396 + Unknown Stack Size
<LI>Call Chain = gui_lactate_threshold_hint_content_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_lactate_threshold_hint_paint
</UL>

<P><STRONG><a name="[878]"></a>gui_trainplan_beforedays_paint</STRONG> (Thumb, 346 bytes, Stack size 88 bytes, gui_trainplan.o(i.gui_trainplan_beforedays_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1420 + Unknown Stack Size
<LI>Call Chain = gui_trainplan_beforedays_paint &rArr; gui_trainplan_title_paint &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_title_paint
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_paint
</UL>

<P><STRONG><a name="[87a]"></a>gui_trainplan_enddays_paint</STRONG> (Thumb, 248 bytes, Stack size 48 bytes, gui_trainplan.o(i.gui_trainplan_enddays_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1332 + Unknown Stack Size
<LI>Call Chain = gui_trainplan_enddays_paint &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IsCompleteTodayTrainPlan
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_paint
</UL>

<P><STRONG><a name="[87b]"></a>gui_trainplan_hint_paint</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, gui_trainplan.o(i.gui_trainplan_hint_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1300<LI>Call Chain = gui_trainplan_hint_paint &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_paint
</UL>

<P><STRONG><a name="[87d]"></a>gui_trainplan_morethran_paint</STRONG> (Thumb, 186 bytes, Stack size 48 bytes, gui_trainplan.o(i.gui_trainplan_morethran_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1332 + Unknown Stack Size
<LI>Call Chain = gui_trainplan_morethran_paint &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_paint
</UL>

<P><STRONG><a name="[879]"></a>gui_trainplan_title_paint</STRONG> (Thumb, 108 bytes, Stack size 48 bytes, gui_trainplan.o(i.gui_trainplan_title_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1332 + Unknown Stack Size
<LI>Call Chain = gui_trainplan_title_paint &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_paint
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_paint
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_beforedays_paint
</UL>

<P><STRONG><a name="[87e]"></a>gui_trainplan_today_content_paint</STRONG> (Thumb, 378 bytes, Stack size 64 bytes, gui_trainplan.o(i.gui_trainplan_today_content_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1348 + Unknown Stack Size
<LI>Call Chain = gui_trainplan_today_content_paint &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IsCompleteTodayTrainPlan
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_today_hint_paint
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_paint
</UL>

<P><STRONG><a name="[87f]"></a>gui_trainplan_yesterday_tommorow_paint</STRONG> (Thumb, 348 bytes, Stack size 72 bytes, gui_trainplan.o(i.gui_trainplan_yesterday_tommorow_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1356 + Unknown Stack Size
<LI>Call Chain = gui_trainplan_yesterday_tommorow_paint &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DaysDiff
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_trainplan_target_paint
</UL>

<P><STRONG><a name="[863]"></a>LunarCalendar</STRONG> (Thumb, 440 bytes, Stack size 28 bytes, gui_tool_calendar.o(i.LunarCalendar))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = LunarCalendar
</UL>
<BR>[Called By]<UL><LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_calendar_date
</UL>

<P><STRONG><a name="[85f]"></a>gui_tool_ambient_altitude_chart</STRONG> (Thumb, 2012 bytes, Stack size 168 bytes, gui_tool_ambient.o(i.gui_tool_ambient_altitude_chart))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = gui_tool_ambient_altitude_chart &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_ambient_altitude_paint
</UL>

<P><STRONG><a name="[74b]"></a>gui_cloud_navigation_options_paint</STRONG> (Thumb, 690 bytes, Stack size 48 bytes, gui_tool_gps.o(i.gui_cloud_navigation_options_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_cloud_navigation_options_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_cloud_navigation_paint
</UL>

<P><STRONG><a name="[771]"></a>gui_distance_paint_gps</STRONG> (Thumb, 160 bytes, Stack size 48 bytes, gui_tool_gps.o(i.gui_distance_paint_gps))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_distance_paint_gps &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_view_motion_trail_paint
</UL>

<P><STRONG><a name="[798]"></a>gui_navigation_del_caption_paint</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gui_tool_gps.o(i.gui_navigation_del_caption_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_navigation_del_caption_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_del_paint
</UL>

<P><STRONG><a name="[799]"></a>gui_navigation_del_options_paint</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, gui_tool_gps.o(i.gui_navigation_del_options_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_navigation_del_options_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_del_paint
</UL>

<P><STRONG><a name="[79a]"></a>gui_navigation_item_ops_paint</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, gui_tool_gps.o(i.gui_navigation_item_ops_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_navigation_item_ops_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_item_paint
</UL>

<P><STRONG><a name="[7b1]"></a>gui_projection_options_paint</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, gui_tool_gps.o(i.gui_projection_options_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_projection_options_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_projection_paint
</UL>

<P><STRONG><a name="[7b2]"></a>gui_realtime_battery_paint_gps</STRONG> (Thumb, 228 bytes, Stack size 64 bytes, gui_tool_gps.o(i.gui_realtime_battery_paint_gps))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_realtime_battery_paint_gps &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_view_motion_trail_paint
</UL>

<P><STRONG><a name="[79d]"></a>gui_realtime_battery_trail_paint</STRONG> (Thumb, 228 bytes, Stack size 64 bytes, gui_tool_gps.o(i.gui_realtime_battery_trail_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_realtime_battery_trail_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_trail_paint
</UL>

<P><STRONG><a name="[79b]"></a>gui_sport_c_1_track</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, gui_tool_gps.o(i.gui_sport_c_1_track))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = gui_sport_c_1_track &rArr; DrawLoadALLTrack &rArr; LCD_SetLine &rArr; line_draw
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLoadALLTrack
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_view_motion_trail_paint
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_navigation_trail_paint
</UL>

<P><STRONG><a name="[795]"></a>gui_sports_data_detail_options_paint</STRONG> (Thumb, 192 bytes, Stack size 144 bytes, gui_tool_gps.o(i.gui_sports_data_detail_options_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1748 + Unknown Stack Size
<LI>Call Chain = gui_sports_data_detail_options_paint &rArr; gui_sports_record_data_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_data_paint
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_motion_trail_paint
</UL>

<P><STRONG><a name="[847]"></a>gui_sports_record_data_paint</STRONG> (Thumb, 840 bytes, Stack size 240 bytes, gui_tool_gps.o(i.gui_sports_record_data_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1604 + Unknown Stack Size
<LI>Call Chain = gui_sports_record_data_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_data_detail_options_paint
</UL>

<P><STRONG><a name="[867]"></a>gui_tool_compass_bubble</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, gui_tool_compass.o(i.gui_tool_compass_bubble))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = gui_tool_compass_bubble &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_compass_paint
</UL>

<P><STRONG><a name="[873]"></a>gui_tool_stopwatch_menu</STRONG> (Thumb, 240 bytes, Stack size 40 bytes, gui_tool_stopwatch.o(i.gui_tool_stopwatch_menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404 + Unknown Stack Size
<LI>Call Chain = gui_tool_stopwatch_menu &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_stopwatch_menu_paint
</UL>

<P><STRONG><a name="[53]"></a>callback</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, gui_tool_findphone.o(i.callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 468 + Unknown Stack Size
<LI>Call Chain = callback &rArr; gui_tool_findphone_timer_stop &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tool_task_close
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_notify_rollback
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_timer_stop
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_tool_findphone.o(i.gui_tool_findphone_timer_init)
</UL>
<P><STRONG><a name="[86c]"></a>progress_display</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, gui_tool_findphone.o(i.progress_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = progress_display &rArr; LCD_SetArc &rArr; draw_arc &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_tool_findphone_paint
</UL>

<P><STRONG><a name="[7b5]"></a>gui_run_track_distance</STRONG> (Thumb, 264 bytes, Stack size 48 bytes, gui_run.o(i.gui_run_track_distance))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_run_track_distance &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_track_paint
</UL>

<P><STRONG><a name="[81f]"></a>gui_sport_run_pause_options</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, gui_run.o(i.gui_sport_run_pause_options))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_sport_run_pause_options &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_run_pause_paint
</UL>

<P><STRONG><a name="[7d7]"></a>gui_sport_cycling_1_distance</STRONG> (Thumb, 264 bytes, Stack size 48 bytes, gui_sport_cycling.o(i.gui_sport_cycling_1_distance))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_cycling_1_distance &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_track_paint
</UL>

<P><STRONG><a name="[7d8]"></a>gui_sport_cycling_1_time</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, gui_sport_cycling.o(i.gui_sport_cycling_1_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = gui_sport_cycling_1_time &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_track_paint
</UL>

<P><STRONG><a name="[7d9]"></a>gui_sport_cycling_1_track</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gui_sport_cycling.o(i.gui_sport_cycling_1_track))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_sport_cycling_1_track &rArr; draw_track_mark &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_track_mark
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Drawsport_arrows
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawTrack
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawLoadTrack
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_dottrack_nums
</UL>
<BR>[Called By]<UL><LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_track_paint
</UL>

<P><STRONG><a name="[7da]"></a>gui_sport_cycling_detail_1_paint</STRONG> (Thumb, 1314 bytes, Stack size 120 bytes, gui_sport_cycling.o(i.gui_sport_cycling_detail_1_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1484 + Unknown Stack Size
<LI>Call Chain = gui_sport_cycling_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_paint
</UL>

<P><STRONG><a name="[7db]"></a>gui_sport_cycling_detail_2_paint</STRONG> (Thumb, 1554 bytes, Stack size 96 bytes, gui_sport_cycling.o(i.gui_sport_cycling_detail_2_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1460 + Unknown Stack Size
<LI>Call Chain = gui_sport_cycling_detail_2_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_detail_paint
</UL>

<P><STRONG><a name="[7dd]"></a>gui_sport_cycling_pause_options</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, gui_sport_cycling.o(i.gui_sport_cycling_pause_options))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_sport_cycling_pause_options &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_cycling_pause_paint
</UL>

<P><STRONG><a name="[7d3]"></a>gui_sport_crosscountry_hike_detail_1_paint</STRONG> (Thumb, 1306 bytes, Stack size 120 bytes, gui_sport_crosscountry_hike.o(i.gui_sport_crosscountry_hike_detail_1_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1484 + Unknown Stack Size
<LI>Call Chain = gui_sport_crosscountry_hike_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_detail_paint
</UL>

<P><STRONG><a name="[7d4]"></a>gui_sport_crosscountry_hike_detail_2_paint</STRONG> (Thumb, 420 bytes, Stack size 56 bytes, gui_sport_crosscountry_hike.o(i.gui_sport_crosscountry_hike_detail_2_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1420 + Unknown Stack Size
<LI>Call Chain = gui_sport_crosscountry_hike_detail_2_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_detail_paint
</UL>

<P><STRONG><a name="[7e7]"></a>gui_sport_hike_1_distance</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, gui_sport_crosscountry_hike.o(i.gui_sport_hike_1_distance))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444 + Unknown Stack Size
<LI>Call Chain = gui_sport_hike_1_distance &rArr; gui_sport_every_1_distance &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_every_1_distance
</UL>
<BR>[Called By]<UL><LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_track_paint
</UL>

<P><STRONG><a name="[7e8]"></a>gui_sport_hike_1_time</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, gui_sport_crosscountry_hike.o(i.gui_sport_hike_1_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = gui_sport_hike_1_time &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_track_paint
</UL>

<P><STRONG><a name="[7ea]"></a>gui_sport_hike_pause_options</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, gui_sport_crosscountry_hike.o(i.gui_sport_hike_pause_options))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_sport_hike_pause_options &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_hike_pause_paint
</UL>

<P><STRONG><a name="[7c0]"></a>gui_sport_climbing_1_distance</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, gui_climbing.o(i.gui_sport_climbing_1_distance))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444 + Unknown Stack Size
<LI>Call Chain = gui_sport_climbing_1_distance &rArr; gui_sport_every_1_distance &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_every_1_distance
</UL>
<BR>[Called By]<UL><LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_track_paint
</UL>

<P><STRONG><a name="[7c2]"></a>gui_sport_climbing_1_time</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, gui_climbing.o(i.gui_sport_climbing_1_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = gui_sport_climbing_1_time &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_track_paint
</UL>

<P><STRONG><a name="[7cb]"></a>gui_sport_climbing_pause_options</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, gui_climbing.o(i.gui_sport_climbing_pause_options))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_sport_climbing_pause_options &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_climbing_pause_paint
</UL>

<P><STRONG><a name="[825]"></a>gui_sport_swim_pause_options</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, gui_swimming.o(i.gui_sport_swim_pause_options))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_sport_swim_pause_options &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_swim_pause_paint
</UL>

<P><STRONG><a name="[826]"></a>gui_sport_triathlon_cancel_options</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_cancel_options))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_sport_triathlon_cancel_options &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cancel_paint
</UL>

<P><STRONG><a name="[828]"></a>gui_sport_triathlon_cycling_distance</STRONG> (Thumb, 200 bytes, Stack size 48 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_cycling_distance))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_cycling_distance &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_paint
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_paint
</UL>

<P><STRONG><a name="[82a]"></a>gui_sport_triathlon_cycling_speed</STRONG> (Thumb, 200 bytes, Stack size 48 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_cycling_speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_cycling_speed &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_paint
</UL>

<P><STRONG><a name="[835]"></a>gui_sport_triathlon_pause_options</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_pause_options))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_sport_triathlon_pause_options &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_pause_paint
</UL>

<P><STRONG><a name="[836]"></a>gui_sport_triathlon_pause_time</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_pause_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_pause_time &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_pause_paint
</UL>

<P><STRONG><a name="[838]"></a>gui_sport_triathlon_running_speed</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_running_speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_running_speed &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_paint
</UL>

<P><STRONG><a name="[839]"></a>gui_sport_triathlon_swimming_1_distance</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_swimming_1_distance))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_swimming_1_distance &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_1_paint
</UL>

<P><STRONG><a name="[83a]"></a>gui_sport_triathlon_swimming_1_paint</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_swimming_1_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_swimming_1_paint &rArr; gui_sport_triathlon_swimming_1_speed &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_time
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_1_speed
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_1_distance
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_paint
</UL>

<P><STRONG><a name="[83b]"></a>gui_sport_triathlon_swimming_1_speed</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_swimming_1_speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_swimming_1_speed &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_1_paint
</UL>

<P><STRONG><a name="[829]"></a>gui_sport_triathlon_swimming_time</STRONG> (Thumb, 122 bytes, Stack size 56 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_swimming_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_swimming_time &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_second_change_paint
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_running_paint
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_first_change_paint
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_cycling_paint
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_swimming_1_paint
</UL>

<P><STRONG><a name="[837]"></a>gui_sport_triathlon_time</STRONG> (Thumb, 222 bytes, Stack size 48 bytes, gui_sport_triathlon.o(i.gui_sport_triathlon_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = gui_sport_triathlon_time &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_triathlon_pause_paint
</UL>

<P><STRONG><a name="[7d1]"></a>gui_sport_crosscountry_1_distance</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, gui_crosscountry.o(i.gui_sport_crosscountry_1_distance))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444 + Unknown Stack Size
<LI>Call Chain = gui_sport_crosscountry_1_distance &rArr; gui_sport_every_1_distance &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_every_1_distance
</UL>
<BR>[Called By]<UL><LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_track_paint
</UL>

<P><STRONG><a name="[7d2]"></a>gui_sport_crosscountry_1_time</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, gui_crosscountry.o(i.gui_sport_crosscountry_1_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = gui_sport_crosscountry_1_time &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_track_paint
</UL>

<P><STRONG><a name="[7d6]"></a>gui_sport_crosscountry_pause_options</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, gui_crosscountry.o(i.gui_sport_crosscountry_pause_options))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_sport_crosscountry_pause_options &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_crosscountry_pause_paint
</UL>

<P><STRONG><a name="[7ed]"></a>gui_sport_indoorrun_detail_1_paint</STRONG> (Thumb, 884 bytes, Stack size 80 bytes, gui_sport_indoorrun.o(i.gui_sport_indoorrun_detail_1_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444 + Unknown Stack Size
<LI>Call Chain = gui_sport_indoorrun_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_paint
</UL>

<P><STRONG><a name="[7ee]"></a>gui_sport_indoorrun_detail_2_paint</STRONG> (Thumb, 1266 bytes, Stack size 56 bytes, gui_sport_indoorrun.o(i.gui_sport_indoorrun_detail_2_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1420 + Unknown Stack Size
<LI>Call Chain = gui_sport_indoorrun_detail_2_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_detail_paint
</UL>

<P><STRONG><a name="[7f1]"></a>gui_sport_indoorrun_pause_options</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, gui_sport_indoorrun.o(i.gui_sport_indoorrun_pause_options))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_sport_indoorrun_pause_options &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_indoorrun_pause_paint
</UL>

<P><STRONG><a name="[83c]"></a>gui_sport_walk_1_distance</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, gui_sport_walk.o(i.gui_sport_walk_1_distance))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444 + Unknown Stack Size
<LI>Call Chain = gui_sport_walk_1_distance &rArr; gui_sport_every_1_distance &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_every_1_distance
</UL>
<BR>[Called By]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_track_paint
</UL>

<P><STRONG><a name="[83d]"></a>gui_sport_walk_1_time</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, gui_sport_walk.o(i.gui_sport_walk_1_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = gui_sport_walk_1_time &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_track_paint
</UL>

<P><STRONG><a name="[83f]"></a>gui_sport_walk_detail_1_paint</STRONG> (Thumb, 856 bytes, Stack size 80 bytes, gui_sport_walk.o(i.gui_sport_walk_detail_1_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444 + Unknown Stack Size
<LI>Call Chain = gui_sport_walk_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_paint
</UL>

<P><STRONG><a name="[840]"></a>gui_sport_walk_detail_2_paint</STRONG> (Thumb, 1266 bytes, Stack size 56 bytes, gui_sport_walk.o(i.gui_sport_walk_detail_2_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1420 + Unknown Stack Size
<LI>Call Chain = gui_sport_walk_detail_2_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_detail_paint
</UL>

<P><STRONG><a name="[845]"></a>gui_sport_walk_pause_options</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, gui_sport_walk.o(i.gui_sport_walk_pause_options))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_sport_walk_pause_options &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_walk_pause_paint
</UL>

<P><STRONG><a name="[7f4]"></a>gui_sport_marathon_1_distance</STRONG> (Thumb, 200 bytes, Stack size 48 bytes, gui_sport_marathon.o(i.gui_sport_marathon_1_distance))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_sport_marathon_1_distance &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_1_paint
</UL>

<P><STRONG><a name="[7f5]"></a>gui_sport_marathon_1_paint</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, gui_sport_marathon.o(i.gui_sport_marathon_1_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1436 + Unknown Stack Size
<LI>Call Chain = gui_sport_marathon_1_paint &rArr; gui_sport_marathon_1_distance &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_2_speed
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_1_time
<LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_1_start
<LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_1_distance
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_gps_status
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_index_circle_paint
</UL>
<BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_paint
</UL>

<P><STRONG><a name="[7f6]"></a>gui_sport_marathon_1_start</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gui_sport_marathon.o(i.gui_sport_marathon_1_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_sport_marathon_1_start &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_1_paint
</UL>

<P><STRONG><a name="[7f8]"></a>gui_sport_marathon_1_time</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, gui_sport_marathon.o(i.gui_sport_marathon_1_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = gui_sport_marathon_1_time &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_1_paint
</UL>

<P><STRONG><a name="[7f7]"></a>gui_sport_marathon_2_speed</STRONG> (Thumb, 278 bytes, Stack size 40 bytes, gui_sport_marathon.o(i.gui_sport_marathon_2_speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404 + Unknown Stack Size
<LI>Call Chain = gui_sport_marathon_2_speed &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_1_paint
</UL>

<P><STRONG><a name="[7f9]"></a>gui_sport_marathon_detail_1_paint</STRONG> (Thumb, 842 bytes, Stack size 80 bytes, gui_sport_marathon.o(i.gui_sport_marathon_detail_1_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444 + Unknown Stack Size
<LI>Call Chain = gui_sport_marathon_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_paint
</UL>

<P><STRONG><a name="[7fa]"></a>gui_sport_marathon_detail_2_paint</STRONG> (Thumb, 1266 bytes, Stack size 56 bytes, gui_sport_marathon.o(i.gui_sport_marathon_detail_2_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1420 + Unknown Stack Size
<LI>Call Chain = gui_sport_marathon_detail_2_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_page_prompt
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_detail_paint
</UL>

<P><STRONG><a name="[7fe]"></a>gui_sport_marathon_pause_options</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, gui_sport_marathon.o(i.gui_sport_marathon_pause_options))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_sport_marathon_pause_options &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_pause_paint
</UL>

<P><STRONG><a name="[7ff]"></a>gui_sport_marathon_track_distance</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, gui_sport_marathon.o(i.gui_sport_marathon_track_distance))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444 + Unknown Stack Size
<LI>Call Chain = gui_sport_marathon_track_distance &rArr; gui_sport_every_1_distance &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_every_1_distance
</UL>
<BR>[Called By]<UL><LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_track_paint
</UL>

<P><STRONG><a name="[800]"></a>gui_sport_marathon_track_time</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, gui_sport_marathon.o(i.gui_sport_marathon_track_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = gui_sport_marathon_track_time &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sport_marathon_track_paint
</UL>

<P><STRONG><a name="[78a]"></a>menu</STRONG> (Thumb, 744 bytes, Stack size 56 bytes, gui_menu.o(i.menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 1420 + Unknown Stack Size
<LI>Call Chain = menu &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_page_up
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_page_down
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_menu_paint
</UL>

<P><STRONG><a name="[858]"></a>gui_theme_app_custom_color</STRONG> (Thumb, 276 bytes, Stack size 0 bytes, gui_theme.o(i.gui_theme_app_custom_color))
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_paint
</UL>

<P><STRONG><a name="[857]"></a>gui_theme_app_menu_option</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, gui_theme.o(i.gui_theme_app_menu_option))
<BR><BR>[Stack]<UL><LI>Max Depth = 1396<LI>Call Chain = gui_theme_app_menu_option &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCircle
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_app_menu_paint
</UL>

<P><STRONG><a name="[859]"></a>theme</STRONG> (Thumb, 230 bytes, Stack size 40 bytes, gui_theme.o(i.theme))
<BR><BR>[Stack]<UL><LI>Max Depth = 1324 + Unknown Stack Size
<LI>Call Chain = theme &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_page_up
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_page_down
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_theme_paint
</UL>

<P><STRONG><a name="[546]"></a>alarm</STRONG> (Thumb, 502 bytes, Stack size 64 bytes, gui_time.o(i.alarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = alarm &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_paint
</UL>

<P><STRONG><a name="[547]"></a>alarm_set</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, gui_time.o(i.alarm_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 1404 + Unknown Stack Size
<LI>Call Chain = alarm_set &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_paint
</UL>

<P><STRONG><a name="[548]"></a>alarm_set_repition</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, gui_time.o(i.alarm_set_repition))
<BR><BR>[Stack]<UL><LI>Max Depth = 1324 + Unknown Stack Size
<LI>Call Chain = alarm_set_repition &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_repition_paint
</UL>

<P><STRONG><a name="[549]"></a>alarm_set_sound_N_viberate</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, gui_time.o(i.alarm_set_sound_N_viberate))
<BR><BR>[Stack]<UL><LI>Max Depth = 1324 + Unknown Stack Size
<LI>Call Chain = alarm_set_sound_N_viberate &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_sound_N_viberate_paint
</UL>

<P><STRONG><a name="[54a]"></a>alarm_set_time</STRONG> (Thumb, 244 bytes, Stack size 56 bytes, gui_time.o(i.alarm_set_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = alarm_set_time &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_alarm_set_time_paint
</UL>

<P><STRONG><a name="[85e]"></a>time_paint</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, gui_time.o(i.time_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1324 + Unknown Stack Size
<LI>Call Chain = time_paint &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_time_paint
</UL>

<P><STRONG><a name="[265]"></a>GetGpsTrack</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gui_sports_record.o(i.GetGpsTrack))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GetGpsTrack &rArr; Send_Timer_Cmd &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Timer_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_detail_paint
</UL>

<P><STRONG><a name="[3db]"></a>List_Current</STRONG> (Thumb, 562 bytes, Stack size 64 bytes, gui_sports_record.o(i.List_Current))
<BR><BR>[Stack]<UL><LI>Max Depth = 1428 + Unknown Stack Size
<LI>Call Chain = List_Current &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getImgSport
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_paint
</UL>

<P><STRONG><a name="[3dd]"></a>List_Down</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, gui_sports_record.o(i.List_Down))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = List_Down &rArr; LCD_SetNumber &rArr; LCD_SetNumber_Char &rArr; LCD_SetPicture &rArr; __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_paint
</UL>

<P><STRONG><a name="[3df]"></a>List_Up</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gui_sports_record.o(i.List_Up))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = List_Up &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_paint
</UL>

<P><STRONG><a name="[741]"></a>gui_climbing_sport_detail_2_paint</STRONG> (Thumb, 898 bytes, Stack size 96 bytes, gui_sports_record.o(i.gui_climbing_sport_detail_2_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1460 + Unknown Stack Size
<LI>Call Chain = gui_climbing_sport_detail_2_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_detail_paint
</UL>

<P><STRONG><a name="[74c]"></a>gui_crosscountry_hike_sport_detail_2_paint</STRONG> (Thumb, 410 bytes, Stack size 48 bytes, gui_sports_record.o(i.gui_crosscountry_hike_sport_detail_2_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = gui_crosscountry_hike_sport_detail_2_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_detail_paint
</UL>

<P><STRONG><a name="[754]"></a>gui_cycling_sport_detail_2_paint</STRONG> (Thumb, 1540 bytes, Stack size 96 bytes, gui_sports_record.o(i.gui_cycling_sport_detail_2_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1460 + Unknown Stack Size
<LI>Call Chain = gui_cycling_sport_detail_2_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_detail_paint
</UL>

<P><STRONG><a name="[84a]"></a>gui_swimming_sport_detail_1_paint</STRONG> (Thumb, 1132 bytes, Stack size 104 bytes, gui_sports_record.o(i.gui_swimming_sport_detail_1_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1468 + Unknown Stack Size
<LI>Call Chain = gui_swimming_sport_detail_1_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_detail_paint
</UL>

<P><STRONG><a name="[84b]"></a>gui_swimming_sport_detail_2_paint</STRONG> (Thumb, 736 bytes, Stack size 80 bytes, gui_sports_record.o(i.gui_swimming_sport_detail_2_paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1444 + Unknown Stack Size
<LI>Call Chain = gui_swimming_sport_detail_2_paint &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_detail_paint
</UL>

<P><STRONG><a name="[848]"></a>sports_record_detail_page_one</STRONG> (Thumb, 1554 bytes, Stack size 104 bytes, gui_sports_record.o(i.sports_record_detail_page_one))
<BR><BR>[Stack]<UL><LI>Max Depth = 1468 + Unknown Stack Size
<LI>Call Chain = sports_record_detail_page_one &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_detail_paint
</UL>

<P><STRONG><a name="[849]"></a>sports_record_detail_page_two</STRONG> (Thumb, 1226 bytes, Stack size 88 bytes, gui_sports_record.o(i.sports_record_detail_page_two))
<BR><BR>[Stack]<UL><LI>Max Depth = 1452 + Unknown Stack Size
<LI>Call Chain = sports_record_detail_page_two &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBackgroundColor
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_sports_record_detail_paint
</UL>

<P><STRONG><a name="[733]"></a>menu</STRONG> (Thumb, 390 bytes, Stack size 48 bytes, gui_accessory.o(i.menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = menu &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_accessory_paint
</UL>

<P><STRONG><a name="[853]"></a>menu</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, gui_system.o(i.menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 1412 + Unknown Stack Size
<LI>Call Chain = menu &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_paint
</UL>

<P><STRONG><a name="[851]"></a>menu_system</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, gui_system.o(i.menu_system))
<BR><BR>[Stack]<UL><LI>Max Depth = 1324 + Unknown Stack Size
<LI>Call Chain = menu_system &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_sound_paint
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_language_paint
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_backlight_paint
</UL>

<P><STRONG><a name="[850]"></a>menu_time</STRONG> (Thumb, 676 bytes, Stack size 96 bytes, gui_system.o(i.menu_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 1460 + Unknown Stack Size
<LI>Call Chain = menu_time &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_silent_paint
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_autolight_paint
</UL>

<P><STRONG><a name="[852]"></a>system_base_heartrate</STRONG> (Thumb, 614 bytes, Stack size 96 bytes, gui_system.o(i.system_base_heartrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 1460 + Unknown Stack Size
<LI>Call Chain = system_base_heartrate &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetNumber
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_system_base_heartrate_paint
</UL>

<P><STRONG><a name="[88d]"></a>watch_info_page_one</STRONG> (Thumb, 880 bytes, Stack size 72 bytes, gui_watch_info.o(i.watch_info_page_one))
<BR><BR>[Stack]<UL><LI>Max Depth = 1436 + Unknown Stack Size
<LI>Call Chain = watch_info_page_one &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_watch_info_paint
</UL>

<P><STRONG><a name="[751]"></a>menu</STRONG> (Thumb, 244 bytes, Stack size 48 bytes, gui_customized_sports.o(i.menu))
<BR><BR>[Stack]<UL><LI>Max Depth = 1332 + Unknown Stack Size
<LI>Call Chain = menu &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_sports_paint
</UL>

<P><STRONG><a name="[753]"></a>menu_monitor_and_tools</STRONG> (Thumb, 382 bytes, Stack size 64 bytes, gui_customized_tools.o(i.menu_monitor_and_tools))
<BR><BR>[Stack]<UL><LI>Max Depth = 1348 + Unknown Stack Size
<LI>Call Chain = menu_monitor_and_tools &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRectangle
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPicture
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DisplayGTString
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_customized_tools_paint
</UL>

<P><STRONG><a name="[52]"></a>callback</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gui_notify_warning.o(i.callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = callback &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_notify_warning.o(i.gui_notify_findwatch_timer_init)
</UL>
<P><STRONG><a name="[7ab]"></a>gui_notify_warning_index_accessory_ble_off</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, gui_notify_warning.o(i.gui_notify_warning_index_accessory_ble_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_notify_warning_index_accessory_ble_off &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_warning_paint
</UL>

<P><STRONG><a name="[7ac]"></a>gui_notify_warning_index_watch_info_ble_off</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, gui_notify_warning.o(i.gui_notify_warning_index_watch_info_ble_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 1380<LI>Call Chain = gui_notify_warning_index_watch_info_ble_off &rArr; LCD_SetString &rArr; LCD_DisplayGTString &rArr; drv_gt24l24_gb_getdata &rArr; hzbmp24 &rArr; decompressbmp24 &rArr; unziphfmex &rArr; r_dat_bat &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetString
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_warning_paint
</UL>

<P><STRONG><a name="[7a5]"></a>progress_display</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, gui_notify_warning.o(i.progress_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = progress_display &rArr; LCD_SetArc &rArr; draw_arc &rArr; get_circle_point &rArr; __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetArc
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_notify_find_watch_piant
</UL>

<P><STRONG><a name="[14a]"></a>DayMainData_Init</STRONG> (Thumb, 910 bytes, Stack size 8 bytes, com_data.o(i.DayMainData_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = DayMainData_Init &rArr; Store_all_day_time &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_set
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MonthMaxDay
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CaculateWeekDay
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_read
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_erase
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_filt_stepcount
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_time_computeDayofWeek
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv_lsm6dsl_get_stepcount
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_step_status
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;all_day_steps_reinit
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_all_day_time
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearStepCount
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddTimetoOffSide
</UL>
<BR>[Called By]<UL><LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_data_init
</UL>

<P><STRONG><a name="[481]"></a>Store_DayMainData</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, com_data.o(i.Store_DayMainData))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = Store_DayMainData &rArr; Write_ExFlash_DayMainData &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_ExFlash_DayMainData
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDayMainData
</UL>

<P><STRONG><a name="[48a]"></a>Write_ExFlash_DayMainData</STRONG> (Thumb, 348 bytes, Stack size 8 bytes, com_data.o(i.Write_ExFlash_DayMainData))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = Write_ExFlash_DayMainData &rArr; dev_extFlash_write &rArr; buf_write &rArr; drv_extFlash_page_write &rArr; spiflash_status &rArr; am_hal_iom_spi_read &rArr; am_hal_iom_queue_spi_read &rArr; am_hal_iom_spi_read_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_enable
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_disable
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dev_extFlash_write
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_DayCommonDataData
</UL>
<BR>[Called By]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Store_DayMainData
</UL>

<P><STRONG><a name="[27d]"></a>IsComplete_TargetDistance</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, com_sport.o(i.IsComplete_TargetDistance))
<BR><BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IsCompleteBothTodayTrainPlan
</UL>

<P><STRONG><a name="[27e]"></a>IsComplete_TargetHour</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, com_sport.o(i.IsComplete_TargetHour))
<BR><BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_IsCompleteBothTodayTrainPlan
</UL>

<P><STRONG><a name="[432]"></a>CALRC_Config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, algo_time_calibration.o(i.CALRC_Config))
<BR><BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset_TimeCalibration
</UL>

<P><STRONG><a name="[157]"></a>Degree2Rad</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, algo_gauss.o(i.Degree2Rad))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Degree2Rad &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;algo_gauss_point_get
</UL>

<P><STRONG><a name="[50f]"></a>RemoveOutliers(float*, int, bool*, int*)</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, algo_hf_swimming_main.o(i._Z14RemoveOutliersPfiPbPi))
<BR><BR>[Stack]<UL><LI>Max Depth = 564 + Unknown Stack Size
<LI>Call Chain = RemoveOutliers(float*, int, bool*, int*) &rArr; median(float*, int) &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;median(float*, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BR_Only_omega_x_a_z_DynamicBoundForDurationTest(BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, int*, int*, int*, int*, bool*, float*, float*, float*)
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BT_Average_acc_z_Peak_Valley(BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, bool*)
</UL>

<P><STRONG><a name="[4a2]"></a>SwimDataFilter1(const Mat*, const Mat*, const Mat*, const Mat*, const Mat*, float, Mat*, float*, Mat*, float*, Mat*, float*, Mat*, float*, Mat*, float*, Mat*, float*, Mat*, Mat*)</STRONG> (Thumb, 284 bytes, Stack size 48 bytes, algo_hf_swimming_main.o(i._Z15SwimDataFilter1PK3MatS1_S1_S1_S1_fPS_PfS2_S3_S2_S3_S2_S3_S2_S3_S2_S3_S2_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 628 + Unknown Stack Size
<LI>Call Chain = SwimDataFilter1(const Mat*, const Mat*, const Mat*, const Mat*, const Mat*, float, Mat*, float*, Mat*, float*, Mat*, float*, Mat*, float*, Mat*, float*, Mat*, float*, Mat*, Mat*) &rArr; ButterworthFilter1(float, const Mat*, const Mat*, const Mat*, float, Mat*, float*) &rArr; MatCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ButterworthFilter1(float, const Mat*, const Mat*, const Mat*, float, Mat*, float*)
</UL>
<BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwimmingAlgorithmsAll
</UL>

<P><STRONG><a name="[49d]"></a>DecisionTree_C45(Mat*, Mat*, Mat*, Mat*, Mat*, Mat*, Mat*, Mat*, Mat*, Mat*, Mat*, Mat*, Mat*, Mat*)</STRONG> (Thumb, 788 bytes, Stack size 36 bytes, algo_hf_swimming_main.o(i._Z16DecisionTree_C45P3MatS0_S0_S0_S0_S0_S0_S0_S0_S0_S0_S0_S0_S0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = DecisionTree_C45(Mat*, Mat*, Mat*, Mat*, Mat*, Mat*, Mat*, Mat*, Mat*, Mat*, Mat*, Mat*, Mat*, Mat*)
</UL>
<BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrokeStyleIdentification
</UL>

<P><STRONG><a name="[511]"></a>ButterworthFilter1(float, const Mat*, const Mat*, const Mat*, float, Mat*, float*)</STRONG> (Thumb, 180 bytes, Stack size 88 bytes, algo_hf_swimming_main.o(i._Z18ButterworthFilter1fPK3MatS1_S1_fPS_Pf))
<BR><BR>[Stack]<UL><LI>Max Depth = 580 + Unknown Stack Size
<LI>Call Chain = ButterworthFilter1(float, const Mat*, const Mat*, const Mat*, float, Mat*, float*) &rArr; MatCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatMulNum
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatMul
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatDelete
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatCreate
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatCopy
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwimDataFilter1(const Mat*, const Mat*, const Mat*, const Mat*, const Mat*, float, Mat*, float*, Mat*, float*, Mat*, float*, Mat*, float*, Mat*, float*, Mat*, float*, Mat*, Mat*)
</UL>

<P><STRONG><a name="[4a1]"></a>RawDataPreprocessor(short*, Mat*, Mat*)</STRONG> (Thumb, 202 bytes, Stack size 0 bytes, algo_hf_swimming_main.o(i._Z19RawDataPreprocessorPsP3MatS1_))
<BR><BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SwimmingAlgorithmsAll
</UL>

<P><STRONG><a name="[44]"></a>cmpfunAsc_DBL_or_FLT(const void*, const void*)</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, algo_hf_swimming_main.o(i._Z20cmpfunAsc_DBL_or_FLTPKvS0_))
<BR>[Address Reference Count : 1]<UL><LI> algo_hf_swimming_main.o(i._Z6medianPfi)
</UL>
<P><STRONG><a name="[2a6]"></a>BR_ID_Find_peak_valley(int, float, BR_ID_PeakInfo*, DataSequence_Structure*, int*)</STRONG> (Thumb, 282 bytes, Stack size 12 bytes, algo_hf_swimming_main.o(i._Z22BR_ID_Find_peak_valleyifP14BR_ID_PeakInfoP22DataSequence_StructurePi))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BR_ID_Find_peak_valley(int, float, BR_ID_PeakInfo*, DataSequence_Structure*, int*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitialPreparationForLengthCount
</UL>

<P><STRONG><a name="[3d8]"></a>AbruptChangeProcessing_a_z(float, int, int, int, int*, int*, int*, int*, int*, int, int)</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, algo_hf_swimming_main.o(i._Z26AbruptChangeProcessing_a_zfiiiPiS_S_S_S_ii))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AbruptChangeProcessing_a_z(float, int, int, int, int*, int*, int*, int*, int*, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LengthCount
</UL>

<P><STRONG><a name="[3d6]"></a>SmoothDurationTest_omega_x(float, int, int, int, float*, int*, int*, int*, int*, int*, int*, int, int)</STRONG> (Thumb, 354 bytes, Stack size 36 bytes, algo_hf_swimming_main.o(i._Z26SmoothDurationTest_omega_xfiiiPfPiS0_S0_S0_S0_S0_ii))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SmoothDurationTest_omega_x(float, int, int, int, float*, int*, int*, int*, int*, int*, int*, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LengthCount
</UL>

<P><STRONG><a name="[3da]"></a>BT_Average_acc_z_Peak_Valley(BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, bool*)</STRONG> (Thumb, 232 bytes, Stack size 64 bytes, algo_hf_swimming_main.o(i._Z28BT_Average_acc_z_Peak_ValleyP14BR_ID_PeakInfoPiPfS2_S0_S1_S2_S2_Pb))
<BR><BR>[Stack]<UL><LI>Max Depth = 628 + Unknown Stack Size
<LI>Call Chain = BT_Average_acc_z_Peak_Valley(BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, bool*) &rArr; RemoveOutliers(float*, int, bool*, int*) &rArr; median(float*, int) &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveOutliers(float*, int, bool*, int*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LengthCount
</UL>

<P><STRONG><a name="[2a7]"></a>BT_ID_Npeaks_between_major_peaks(int, float, BT_ID_omega_x_PeakInfo*, DataSequence_Structure*)</STRONG> (Thumb, 396 bytes, Stack size 12 bytes, algo_hf_swimming_main.o(i._Z32BT_ID_Npeaks_between_major_peaksifP22BT_ID_omega_x_PeakInfoP22DataSequence_Structure))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BT_ID_Npeaks_between_major_peaks(int, float, BT_ID_omega_x_PeakInfo*, DataSequence_Structure*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitialPreparationForLengthCount
</UL>

<P><STRONG><a name="[3d9]"></a>SmoothDurationTest_omega_x_DynamicBound(float, int, int, int, float*, int*, int*, int*, int*, int*, int*, float*, float*, float*, int, int)</STRONG> (Thumb, 364 bytes, Stack size 36 bytes, algo_hf_swimming_main.o(i._Z39SmoothDurationTest_omega_x_DynamicBoundfiiiPfPiS0_S0_S0_S0_S0_S_S_S_ii))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SmoothDurationTest_omega_x_DynamicBound(float, int, int, int, float*, int*, int*, int*, int*, int*, int*, float*, float*, float*, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LengthCount
</UL>

<P><STRONG><a name="[3d7]"></a>BR_Only_omega_x_a_z_DynamicBoundForDurationTest(BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, int*, int*, int*, int*, bool*, float*, float*, float*)</STRONG> (Thumb, 1130 bytes, Stack size 112 bytes, algo_hf_swimming_main.o(i._Z47BR_Only_omega_x_a_z_DynamicBoundForDurationTestP14BR_ID_PeakInfoPiPfS2_S0_S1_S2_S2_S0_S1_S2_S2_S0_S1_S2_S2_S1_S1_S1_S1_PbS2_S2_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 676 + Unknown Stack Size
<LI>Call Chain = BR_Only_omega_x_a_z_DynamicBoundForDurationTest(BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, BR_ID_PeakInfo*, int*, float*, float*, int*, int*, int*, int*, bool*, float*, float*, float*) &rArr; RemoveOutliers(float*, int, bool*, int*) &rArr; median(float*, int) &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;std::abs(float)
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveOutliers(float*, int, bool*, int*)
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LengthCount
</UL>

<P><STRONG><a name="[510]"></a>median(float*, int)</STRONG> (Thumb, 184 bytes, Stack size 48 bytes, algo_hf_swimming_main.o(i._Z6medianPfi))
<BR><BR>[Stack]<UL><LI>Max Depth = 516 + Unknown Stack Size
<LI>Call Chain = median(float*, int) &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qsort
</UL>
<BR>[Called By]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveOutliers(float*, int, bool*, int*)
</UL>

<P><STRONG><a name="[49a]"></a>Deg2Rad(float)</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, algo_hf_swimming_main.o(i._Z7Deg2Radf))
<BR><BR>[Called By]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrokeStyleIdentification
</UL>

<P><STRONG><a name="[8d6]"></a>lis3mdl_reg_write</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, algo_magn_cal.o(i.lis3mdl_reg_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = lis3mdl_reg_write &rArr; am_hal_iom_i2c_write &rArr; am_hal_iom_queue_i2c_write &rArr; am_hal_iom_i2c_write_nb &rArr; am_hal_iom_i2c_cmd_run &rArr; internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write
</UL>
<BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;magn_dev_para_init
</UL>

<P><STRONG><a name="[972]"></a>prvTestWaitCondition</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, event_groups.o(i.prvTestWaitCondition))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvTestWaitCondition
</UL>
<BR>[Called By]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
</UL>

<P><STRONG><a name="[906]"></a>prvCopyDataFromQueue</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, queue.o(i.prvCopyDataFromQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvCopyDataFromQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[907]"></a>prvCopyDataToQueue</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, queue.o(i.prvCopyDataToQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>

<P><STRONG><a name="[90b]"></a>prvInitialiseNewQueue</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, queue.o(i.prvInitialiseNewQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[912]"></a>prvIsQueueEmpty</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, queue.o(i.prvIsQueueEmpty))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvIsQueueEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[913]"></a>prvIsQueueFull</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, queue.o(i.prvIsQueueFull))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvIsQueueFull
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[91b]"></a>prvUnlockQueue</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, queue.o(i.prvUnlockQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvUnlockQueue &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[91d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskMissedYield
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[8fa]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, tasks.o(i.prvAddCurrentTaskToDelayedList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[941]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulTaskNotifyTake
<LI><a href="#[968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[96a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[96b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnUnorderedEventList
</UL>

<P><STRONG><a name="[8fe]"></a>prvAddNewTaskToReadyList</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, tasks.o(i.prvAddNewTaskToReadyList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvAddNewTaskToReadyList &rArr; prvInitialiseTaskLists
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[8ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[902]"></a>prvCheckTasksWaitingTermination</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, tasks.o(i.prvCheckTasksWaitingTermination))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[905]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[905]"></a>prvDeleteTCB</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, tasks.o(i.prvDeleteTCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[909]"></a>prvGetExpectedIdleTime</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, tasks.o(i.prvGetExpectedIdleTime))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[6e]"></a>prvIdleTask</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, tasks.o(i.prvIdleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = prvIdleTask &rArr; vPortSuppressTicksAndSleep &rArr; am_freertos_sleep &rArr; am_hal_sysctrl_sleep &rArr; am_hal_ctimer_period_set
</UL>
<BR>[Calls]<UL><LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSuppressTicksAndSleep
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvGetExpectedIdleTime
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(i.vTaskStartScheduler)
</UL>
<P><STRONG><a name="[90d]"></a>prvInitialiseNewTask</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, tasks.o(i.prvInitialiseNewTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = prvInitialiseNewTask
</UL>
<BR>[Calls]<UL><LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[8ff]"></a>prvInitialiseTaskLists</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, tasks.o(i.prvInitialiseTaskLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvInitialiseTaskLists
</UL>
<BR>[Calls]<UL><LI><a href="#[901]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[969]"></a>prvResetNextTaskUnblockTime</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, tasks.o(i.prvResetNextTaskUnblockTime))
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspend
<LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericNotify
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[96d]"></a>prvTaskIsTaskSuspended</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, tasks.o(i.prvTaskIsTaskSuspended))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvTaskIsTaskSuspended
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskResume
</UL>

<P><STRONG><a name="[900]"></a>prvCheckForValidListAndQueue</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, timers.o(i.prvCheckForValidListAndQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 508 + Unknown Stack Size
<LI>Call Chain = prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[901]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTimer
<LI><a href="#[96e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[91a]"></a>prvGetNextExpireTime</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, timers.o(i.prvGetNextExpireTime))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[910]"></a>prvInitialiseNewTimer</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, timers.o(i.prvInitialiseNewTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 540 + Unknown Stack Size
<LI>Call Chain = prvInitialiseNewTimer &rArr; prvCheckForValidListAndQueue &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; vApplicationMallocFailedHook &rArr; error_handler &rArr; error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
</UL>
<BR>[Called By]<UL><LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreate
</UL>

<P><STRONG><a name="[911]"></a>prvInsertTimerInActiveList</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, timers.o(i.prvInsertTimerInActiveList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
</UL>

<P><STRONG><a name="[914]"></a>prvProcessExpiredTimer</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, timers.o(i.prvProcessExpiredTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = prvProcessExpiredTimer &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[911]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[915]"></a>prvProcessReceivedCommands</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, timers.o(i.prvProcessReceivedCommands))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[916]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[911]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[917]"></a>prvProcessTimerOrBlockTask</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, timers.o(i.prvProcessTimerOrBlockTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = prvProcessTimerOrBlockTask &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[916]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessExpiredTimer
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[916]"></a>prvSampleTimeNow</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, timers.o(i.prvSampleTimeNow))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
<LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
</UL>
<BR>[Called By]<UL><LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[919]"></a>prvSwitchTimerLists</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, timers.o(i.prvSwitchTimerLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[916]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[6f]"></a>prvTimerTask</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, timers.o(i.prvTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = prvTimerTask &rArr; prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[91a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvGetNextExpireTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(i.xTimerCreateTimerTask)
</UL>
<P><STRONG><a name="[91e]"></a>prvHeapInit</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, heap_2.o(i.prvHeapInit))
<BR><BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[54]"></a>prvTaskExitError</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, port.o(i.prvTaskExitError))
<BR>[Address Reference Count : 1]<UL><LI> port.o(i.pxPortInitialiseStack)
</UL>
<P><STRONG><a name="[436]"></a>_DoInit</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, segger_rtt.o(i._DoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _DoInit &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Init
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>

<P><STRONG><a name="[439]"></a>_GetAvailWriteSpace</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, segger_rtt.o(i._GetAvailWriteSpace))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetAvailWriteSpace
</UL>
<BR>[Called By]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
</UL>

<P><STRONG><a name="[43b]"></a>_WriteBlocking</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, segger_rtt.o(i._WriteBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _WriteBlocking
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
</UL>

<P><STRONG><a name="[43a]"></a>_WriteNoCheck</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, segger_rtt.o(i._WriteNoCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_WriteNoLock
</UL>

<P><STRONG><a name="[43e]"></a>_PrintInt</STRONG> (Thumb, 236 bytes, Stack size 48 bytes, segger_rtt_printf.o(i._PrintInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _PrintInt &rArr; _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
</UL>

<P><STRONG><a name="[43f]"></a>_PrintUnsigned</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, segger_rtt_printf.o(i._PrintUnsigned))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _PrintUnsigned &rArr; _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_StoreChar
</UL>
<BR>[Called By]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintInt
</UL>

<P><STRONG><a name="[43d]"></a>_StoreChar</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, segger_rtt_printf.o(i._StoreChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _StoreChar &rArr; SEGGER_RTT_Write &rArr; SEGGER_RTT_WriteNoLock &rArr; _WriteNoCheck
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_vprintf
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintUnsigned
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PrintInt
</UL>

<P><STRONG><a name="[5cd]"></a>elapsed_time_ms</STRONG> (Thumb, 260 bytes, Stack size 80 bytes, am_util_stopwatch.o(i.elapsed_time_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = elapsed_time_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_start
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_elapsed_get
</UL>

<P><STRONG><a name="[5ce]"></a>time_format</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, am_util_stopwatch.o(i.time_format))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = time_format &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_util_stopwatch_elapsed_get
</UL>

<P><STRONG><a name="[955]"></a>ctimer_source_hfrc</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, am_hal_ctimer.o(i.ctimer_source_hfrc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ctimer_source_hfrc
</UL>
<BR>[Called By]<UL><LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timers_use_hfrc
</UL>

<P><STRONG><a name="[575]"></a>timers_use_hfrc</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, am_hal_ctimer.o(i.timers_use_hfrc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timers_use_hfrc &rArr; ctimer_source_hfrc
</UL>
<BR>[Calls]<UL><LI><a href="#[955]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctimer_source_hfrc
</UL>
<BR>[Called By]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_ctimer_config_single
</UL>

<P><STRONG><a name="[57a]"></a>i2c_pull_and_wait_scl_hi</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, am_hal_i2c_bit_bang.o(i.i2c_pull_and_wait_scl_hi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = i2c_pull_and_wait_scl_hi &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_flash_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_i2c_bit_bang_send
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_i2c_bit_bang_receive
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_send_byte
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_receive_byte
</UL>

<P><STRONG><a name="[57c]"></a>i2c_receive_byte</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, am_hal_i2c_bit_bang.o(i.i2c_receive_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = i2c_receive_byte &rArr; i2c_pull_and_wait_scl_hi &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_flash_delay
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_pull_and_wait_scl_hi
</UL>
<BR>[Called By]<UL><LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_i2c_bit_bang_receive
</UL>

<P><STRONG><a name="[57b]"></a>i2c_send_byte</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, am_hal_i2c_bit_bang.o(i.i2c_send_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = i2c_send_byte &rArr; i2c_pull_and_wait_scl_hi &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_flash_delay
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_pull_and_wait_scl_hi
</UL>
<BR>[Called By]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_i2c_bit_bang_send
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_i2c_bit_bang_receive
</UL>

<P><STRONG><a name="[586]"></a>compute_freq</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, am_hal_iom.o(i.compute_freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = compute_freq
</UL>
<BR>[Called By]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iom_get_workaround_fsel
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iom_get_interface_clock_cfg
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_frequency_get
</UL>

<P><STRONG><a name="[5a0]"></a>internal_am_hal_iom_spi_cmd_construct</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, am_hal_iom.o(i.internal_am_hal_iom_spi_cmd_construct))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = internal_am_hal_iom_spi_cmd_construct
</UL>
<BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_workaround_word_write
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_cmd_run
</UL>

<P><STRONG><a name="[58e]"></a>internal_iom_get_int_err</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, am_hal_iom.o(i.internal_iom_get_int_err))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = internal_iom_get_int_err &rArr; am_hal_iom_int_status_get
</UL>
<BR>[Calls]<UL><LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_int_status_get
</UL>
<BR>[Called By]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_int_service
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_write_nq
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_spi_read_nq
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_write_nq
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_read_nq
</UL>

<P><STRONG><a name="[588]"></a>internal_iom_wait_i2c_scl_hi</STRONG> (Thumb, 370 bytes, Stack size 40 bytes, am_hal_iom.o(i.internal_iom_wait_i2c_scl_hi))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = internal_iom_wait_i2c_scl_hi &rArr; am_hal_flash_delay_status_change &rArr; am_hal_flash_delay
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_flash_delay_status_change
</UL>
<BR>[Called By]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_i2c_cmd_run
</UL>

<P><STRONG><a name="[5a9]"></a>internal_iom_workaround_critical</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, am_hal_iom.o(i.internal_iom_workaround_critical))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = internal_iom_workaround_critical
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
<LI><a href="#[8cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_am_hal_iom_c_i2c_err__iom_workaround_loop
</UL>
<BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_workaround_word_write
</UL>

<P><STRONG><a name="[5a8]"></a>iom_calc_gpio</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, am_hal_iom.o(i.iom_calc_gpio))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = iom_calc_gpio
</UL>
<BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_workaround_word_write
</UL>

<P><STRONG><a name="[580]"></a>iom_get_i2c_workaround_clock_cfg</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, am_hal_iom.o(i.iom_get_i2c_workaround_clock_cfg))
<BR><BR>[Called By]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_config
</UL>

<P><STRONG><a name="[581]"></a>iom_get_interface_clock_cfg</STRONG> (Thumb, 426 bytes, Stack size 72 bytes, am_hal_iom.o(i.iom_get_interface_clock_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = iom_get_interface_clock_cfg &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;onebit
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_freq
</UL>
<BR>[Called By]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_config
</UL>

<P><STRONG><a name="[5a7]"></a>iom_get_workaround_fsel</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, am_hal_iom.o(i.iom_get_workaround_fsel))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compute_freq
</UL>
<BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_workaround_word_write
</UL>

<P><STRONG><a name="[57f]"></a>isRevB2</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, am_hal_iom.o(i.isRevB2))
<BR><BR>[Called By]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_iom_config
</UL>

<P><STRONG><a name="[8d0]"></a>onebit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, am_hal_iom.o(i.onebit))
<BR><BR>[Called By]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iom_get_interface_clock_cfg
</UL>

<P><STRONG><a name="[5ab]"></a>isRev_ADC</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, am_hal_pwrctrl.o(i.isRev_ADC))
<BR><BR>[Called By]<UL><LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_pwrctrl_bucks_disable
</UL>

<P><STRONG><a name="[5af]"></a>bcd_to_dec</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, am_hal_rtc.o(i.bcd_to_dec))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_get
</UL>

<P><STRONG><a name="[5b0]"></a>dec_to_bcd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, am_hal_rtc.o(i.dec_to_bcd))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_rtc_time_set
</UL>

<P><STRONG><a name="[5b2]"></a>buckZX_chk</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, am_hal_sysctrl.o(i.buckZX_chk))
<BR><BR>[Called By]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_sysctrl_sleep
</UL>

<P><STRONG><a name="[5b3]"></a>setBuckZX</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, am_hal_sysctrl.o(i.setBuckZX))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = setBuckZX
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_set
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_interrupt_master_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_sysctrl_sleep
</UL>

<P><STRONG><a name="[5b8]"></a>config_baudrate</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, am_hal_uart.o(i.config_baudrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = config_baudrate
</UL>
<BR>[Called By]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;am_hal_uart_config
</UL>

<P><STRONG><a name="[70c]"></a>error_fault_handler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lib_error.o(i.error_fault_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 412 + Unknown Stack Size
<LI>Call Chain = error_fault_handler &rArr; error_save_and_stop &rArr; LCD_DisplaySomeLine &rArr; drv_lcd_switch_lpm_to_hpm &rArr; drv_lcd_data_write &rArr; am_hal_iom_spi_write &rArr; am_hal_iom_queue_spi_write &rArr; am_hal_iom_spi_write_nb &rArr; am_hal_iom_workaround_word_write &rArr; iom_get_workaround_fsel &rArr; compute_freq
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SEGGER_RTT_printf
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_save_and_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;error_handler
</UL>

<P><STRONG><a name="[259]"></a>FromUTF8ToUnicode</STRONG> (Thumb, 400 bytes, Stack size 40 bytes, lib_utf8_gbk.o(i.FromUTF8ToUnicode))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FromUTF8ToUnicode
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utf8TextBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lib_utf8_gbk
</UL>

<P><STRONG><a name="[25a]"></a>Utf8TextBytes</STRONG> (Thumb, 342 bytes, Stack size 0 bytes, lib_utf8_gbk.o(i.Utf8TextBytes))
<BR><BR>[Called By]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FromUTF8ToUnicode
</UL>

<P><STRONG><a name="[9c]"></a>checkAxis</STRONG> (Thumb, 678 bytes, Stack size 60 bytes, ohrdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = checkAxis
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compareAxis
</UL>

<P><STRONG><a name="[9b]"></a>compareAxis</STRONG> (Thumb, 2670 bytes, Stack size 136 bytes, ohrdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = compareAxis &rArr; checkAxis
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkAxis
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checksteps
</UL>

<P><STRONG><a name="[9f]"></a>checksteps</STRONG> (Thumb, 1740 bytes, Stack size 120 bytes, ohrdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = checksteps &rArr; compareAxis &rArr; checkAxis
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compareAxis
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Step_eng
</UL>

<P><STRONG><a name="[a0]"></a>calstep</STRONG> (Thumb, 1022 bytes, Stack size 32 bytes, ohrdriver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = calstep &rArr; step_ResetStepcal &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;step_ResetStepcal
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Step_eng
</UL>

<P><STRONG><a name="[d2]"></a>_partition_sort</STRONG> (Thumb, 478 bytes, Stack size 296 bytes, qsortnoex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = _partition_sort
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;qsort
</UL>

<P><STRONG><a name="[dd]"></a>_tm_carry</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, mktime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _tm_carry
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
</UL>

<P><STRONG><a name="[98b]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[98c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[98a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[97d]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[98a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[97c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[e1]"></a>_fp_digits</STRONG> (Thumb, 428 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[37]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[38]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
